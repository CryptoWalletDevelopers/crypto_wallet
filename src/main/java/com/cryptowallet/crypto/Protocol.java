// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/Tron.proto

package com.cryptowallet.crypto;

public final class Protocol {
    private Protocol() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }
    /**
     * Protobuf enum {@code protocol.AccountType}
     */
    public enum AccountType
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>Normal = 0;</code>
         */
        Normal(0),
        /**
         * <code>AssetIssue = 1;</code>
         */
        AssetIssue(1),
        /**
         * <code>Contract = 2;</code>
         */
        Contract(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>Normal = 0;</code>
         */
        public static final int Normal_VALUE = 0;
        /**
         * <code>AssetIssue = 1;</code>
         */
        public static final int AssetIssue_VALUE = 1;
        /**
         * <code>Contract = 2;</code>
         */
        public static final int Contract_VALUE = 2;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static AccountType valueOf(int value) {
            return forNumber(value);
        }

        public static AccountType forNumber(int value) {
            switch (value) {
                case 0: return Normal;
                case 1: return AssetIssue;
                case 2: return Contract;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<AccountType>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                AccountType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<AccountType>() {
                    public AccountType findValueByNumber(int number) {
                        return AccountType.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.getDescriptor().getEnumTypes().get(0);
        }

        private static final AccountType[] VALUES = values();

        public static AccountType valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private AccountType(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:protocol.AccountType)
    }

    /**
     * Protobuf enum {@code protocol.ReasonCode}
     */
    public enum ReasonCode
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>REQUESTED = 0;</code>
         */
        REQUESTED(0),
        /**
         * <code>BAD_PROTOCOL = 2;</code>
         */
        BAD_PROTOCOL(2),
        /**
         * <code>TOO_MANY_PEERS = 4;</code>
         */
        TOO_MANY_PEERS(4),
        /**
         * <code>DUPLICATE_PEER = 5;</code>
         */
        DUPLICATE_PEER(5),
        /**
         * <code>INCOMPATIBLE_PROTOCOL = 6;</code>
         */
        INCOMPATIBLE_PROTOCOL(6),
        /**
         * <code>NULL_IDENTITY = 7;</code>
         */
        NULL_IDENTITY(7),
        /**
         * <code>PEER_QUITING = 8;</code>
         */
        PEER_QUITING(8),
        /**
         * <code>UNEXPECTED_IDENTITY = 9;</code>
         */
        UNEXPECTED_IDENTITY(9),
        /**
         * <code>LOCAL_IDENTITY = 10;</code>
         */
        LOCAL_IDENTITY(10),
        /**
         * <code>PING_TIMEOUT = 11;</code>
         */
        PING_TIMEOUT(11),
        /**
         * <code>USER_REASON = 16;</code>
         */
        USER_REASON(16),
        /**
         * <code>RESET = 17;</code>
         */
        RESET(17),
        /**
         * <code>SYNC_FAIL = 18;</code>
         */
        SYNC_FAIL(18),
        /**
         * <code>FETCH_FAIL = 19;</code>
         */
        FETCH_FAIL(19),
        /**
         * <code>BAD_TX = 20;</code>
         */
        BAD_TX(20),
        /**
         * <code>BAD_BLOCK = 21;</code>
         */
        BAD_BLOCK(21),
        /**
         * <code>FORKED = 22;</code>
         */
        FORKED(22),
        /**
         * <code>UNLINKABLE = 23;</code>
         */
        UNLINKABLE(23),
        /**
         * <code>INCOMPATIBLE_VERSION = 24;</code>
         */
        INCOMPATIBLE_VERSION(24),
        /**
         * <code>INCOMPATIBLE_CHAIN = 25;</code>
         */
        INCOMPATIBLE_CHAIN(25),
        /**
         * <code>TIME_OUT = 32;</code>
         */
        TIME_OUT(32),
        /**
         * <code>CONNECT_FAIL = 33;</code>
         */
        CONNECT_FAIL(33),
        /**
         * <code>TOO_MANY_PEERS_WITH_SAME_IP = 34;</code>
         */
        TOO_MANY_PEERS_WITH_SAME_IP(34),
        /**
         * <code>UNKNOWN = 255;</code>
         */
        UNKNOWN(255),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>REQUESTED = 0;</code>
         */
        public static final int REQUESTED_VALUE = 0;
        /**
         * <code>BAD_PROTOCOL = 2;</code>
         */
        public static final int BAD_PROTOCOL_VALUE = 2;
        /**
         * <code>TOO_MANY_PEERS = 4;</code>
         */
        public static final int TOO_MANY_PEERS_VALUE = 4;
        /**
         * <code>DUPLICATE_PEER = 5;</code>
         */
        public static final int DUPLICATE_PEER_VALUE = 5;
        /**
         * <code>INCOMPATIBLE_PROTOCOL = 6;</code>
         */
        public static final int INCOMPATIBLE_PROTOCOL_VALUE = 6;
        /**
         * <code>NULL_IDENTITY = 7;</code>
         */
        public static final int NULL_IDENTITY_VALUE = 7;
        /**
         * <code>PEER_QUITING = 8;</code>
         */
        public static final int PEER_QUITING_VALUE = 8;
        /**
         * <code>UNEXPECTED_IDENTITY = 9;</code>
         */
        public static final int UNEXPECTED_IDENTITY_VALUE = 9;
        /**
         * <code>LOCAL_IDENTITY = 10;</code>
         */
        public static final int LOCAL_IDENTITY_VALUE = 10;
        /**
         * <code>PING_TIMEOUT = 11;</code>
         */
        public static final int PING_TIMEOUT_VALUE = 11;
        /**
         * <code>USER_REASON = 16;</code>
         */
        public static final int USER_REASON_VALUE = 16;
        /**
         * <code>RESET = 17;</code>
         */
        public static final int RESET_VALUE = 17;
        /**
         * <code>SYNC_FAIL = 18;</code>
         */
        public static final int SYNC_FAIL_VALUE = 18;
        /**
         * <code>FETCH_FAIL = 19;</code>
         */
        public static final int FETCH_FAIL_VALUE = 19;
        /**
         * <code>BAD_TX = 20;</code>
         */
        public static final int BAD_TX_VALUE = 20;
        /**
         * <code>BAD_BLOCK = 21;</code>
         */
        public static final int BAD_BLOCK_VALUE = 21;
        /**
         * <code>FORKED = 22;</code>
         */
        public static final int FORKED_VALUE = 22;
        /**
         * <code>UNLINKABLE = 23;</code>
         */
        public static final int UNLINKABLE_VALUE = 23;
        /**
         * <code>INCOMPATIBLE_VERSION = 24;</code>
         */
        public static final int INCOMPATIBLE_VERSION_VALUE = 24;
        /**
         * <code>INCOMPATIBLE_CHAIN = 25;</code>
         */
        public static final int INCOMPATIBLE_CHAIN_VALUE = 25;
        /**
         * <code>TIME_OUT = 32;</code>
         */
        public static final int TIME_OUT_VALUE = 32;
        /**
         * <code>CONNECT_FAIL = 33;</code>
         */
        public static final int CONNECT_FAIL_VALUE = 33;
        /**
         * <code>TOO_MANY_PEERS_WITH_SAME_IP = 34;</code>
         */
        public static final int TOO_MANY_PEERS_WITH_SAME_IP_VALUE = 34;
        /**
         * <code>UNKNOWN = 255;</code>
         */
        public static final int UNKNOWN_VALUE = 255;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new java.lang.IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ReasonCode valueOf(int value) {
            return forNumber(value);
        }

        public static ReasonCode forNumber(int value) {
            switch (value) {
                case 0: return REQUESTED;
                case 2: return BAD_PROTOCOL;
                case 4: return TOO_MANY_PEERS;
                case 5: return DUPLICATE_PEER;
                case 6: return INCOMPATIBLE_PROTOCOL;
                case 7: return NULL_IDENTITY;
                case 8: return PEER_QUITING;
                case 9: return UNEXPECTED_IDENTITY;
                case 10: return LOCAL_IDENTITY;
                case 11: return PING_TIMEOUT;
                case 16: return USER_REASON;
                case 17: return RESET;
                case 18: return SYNC_FAIL;
                case 19: return FETCH_FAIL;
                case 20: return BAD_TX;
                case 21: return BAD_BLOCK;
                case 22: return FORKED;
                case 23: return UNLINKABLE;
                case 24: return INCOMPATIBLE_VERSION;
                case 25: return INCOMPATIBLE_CHAIN;
                case 32: return TIME_OUT;
                case 33: return CONNECT_FAIL;
                case 34: return TOO_MANY_PEERS_WITH_SAME_IP;
                case 255: return UNKNOWN;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ReasonCode>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                ReasonCode> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<ReasonCode>() {
                    public ReasonCode findValueByNumber(int number) {
                        return ReasonCode.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.getDescriptor().getEnumTypes().get(1);
        }

        private static final ReasonCode[] VALUES = values();

        public static ReasonCode valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private ReasonCode(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:protocol.ReasonCode)
    }

    public interface AccountIdOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.AccountId)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>bytes name = 1;</code>
         */
        com.google.protobuf.ByteString getName();

        /**
         * <code>bytes address = 2;</code>
         */
        com.google.protobuf.ByteString getAddress();
    }
    /**
     * <pre>
     * AccountId, (name, address) use name, (null, address) use address, (name, null) use name,
     * </pre>
     *
     * Protobuf type {@code protocol.AccountId}
     */
    public  static final class AccountId extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.AccountId)
            AccountIdOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use AccountId.newBuilder() to construct.
        private AccountId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private AccountId() {
            name_ = com.google.protobuf.ByteString.EMPTY;
            address_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private AccountId(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {

                            name_ = input.readBytes();
                            break;
                        }
                        case 18: {

                            address_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_AccountId_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_AccountId_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.AccountId.class, com.cryptowallet.crypto.Protocol.AccountId.Builder.class);
        }

        public static final int NAME_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString name_;
        /**
         * <code>bytes name = 1;</code>
         */
        public com.google.protobuf.ByteString getName() {
            return name_;
        }

        public static final int ADDRESS_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString address_;
        /**
         * <code>bytes address = 2;</code>
         */
        public com.google.protobuf.ByteString getAddress() {
            return address_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!name_.isEmpty()) {
                output.writeBytes(1, name_);
            }
            if (!address_.isEmpty()) {
                output.writeBytes(2, address_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!name_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, name_);
            }
            if (!address_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, address_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.AccountId)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.AccountId other = (com.cryptowallet.crypto.Protocol.AccountId) obj;

            boolean result = true;
            result = result && getName()
                    .equals(other.getName());
            result = result && getAddress()
                    .equals(other.getAddress());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getAddress().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.AccountId parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.AccountId parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.AccountId prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         * AccountId, (name, address) use name, (null, address) use address, (name, null) use name,
         * </pre>
         *
         * Protobuf type {@code protocol.AccountId}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.AccountId)
                com.cryptowallet.crypto.Protocol.AccountIdOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_AccountId_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_AccountId_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.AccountId.class, com.cryptowallet.crypto.Protocol.AccountId.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.AccountId.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                name_ = com.google.protobuf.ByteString.EMPTY;

                address_ = com.google.protobuf.ByteString.EMPTY;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_AccountId_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.AccountId getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.AccountId.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.AccountId build() {
                com.cryptowallet.crypto.Protocol.AccountId result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.AccountId buildPartial() {
                com.cryptowallet.crypto.Protocol.AccountId result = new com.cryptowallet.crypto.Protocol.AccountId(this);
                result.name_ = name_;
                result.address_ = address_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.AccountId) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.AccountId)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.AccountId other) {
                if (other == com.cryptowallet.crypto.Protocol.AccountId.getDefaultInstance()) return this;
                if (other.getName() != com.google.protobuf.ByteString.EMPTY) {
                    setName(other.getName());
                }
                if (other.getAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setAddress(other.getAddress());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.AccountId parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.AccountId) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.google.protobuf.ByteString name_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes name = 1;</code>
             */
            public com.google.protobuf.ByteString getName() {
                return name_;
            }
            /**
             * <code>bytes name = 1;</code>
             */
            public Builder setName(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes name = 1;</code>
             */
            public Builder clearName() {

                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString address_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes address = 2;</code>
             */
            public com.google.protobuf.ByteString getAddress() {
                return address_;
            }
            /**
             * <code>bytes address = 2;</code>
             */
            public Builder setAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                address_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes address = 2;</code>
             */
            public Builder clearAddress() {

                address_ = getDefaultInstance().getAddress();
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.AccountId)
        }

        // @@protoc_insertion_point(class_scope:protocol.AccountId)
        private static final com.cryptowallet.crypto.Protocol.AccountId DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.AccountId();
        }

        public static com.cryptowallet.crypto.Protocol.AccountId getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AccountId>
                PARSER = new com.google.protobuf.AbstractParser<AccountId>() {
            public AccountId parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new AccountId(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<AccountId> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AccountId> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.AccountId getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface VoteOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Vote)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * the super rep address
         * </pre>
         *
         * <code>bytes vote_address = 1;</code>
         */
        com.google.protobuf.ByteString getVoteAddress();

        /**
         * <pre>
         * the vote num to this super rep.
         * </pre>
         *
         * <code>int64 vote_count = 2;</code>
         */
        long getVoteCount();
    }
    /**
     * <pre>
     * vote message
     * </pre>
     *
     * Protobuf type {@code protocol.Vote}
     */
    public  static final class Vote extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Vote)
            VoteOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Vote.newBuilder() to construct.
        private Vote(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Vote() {
            voteAddress_ = com.google.protobuf.ByteString.EMPTY;
            voteCount_ = 0L;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Vote(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {

                            voteAddress_ = input.readBytes();
                            break;
                        }
                        case 16: {

                            voteCount_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Vote_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Vote_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Vote.class, com.cryptowallet.crypto.Protocol.Vote.Builder.class);
        }

        public static final int VOTE_ADDRESS_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString voteAddress_;
        /**
         * <pre>
         * the super rep address
         * </pre>
         *
         * <code>bytes vote_address = 1;</code>
         */
        public com.google.protobuf.ByteString getVoteAddress() {
            return voteAddress_;
        }

        public static final int VOTE_COUNT_FIELD_NUMBER = 2;
        private long voteCount_;
        /**
         * <pre>
         * the vote num to this super rep.
         * </pre>
         *
         * <code>int64 vote_count = 2;</code>
         */
        public long getVoteCount() {
            return voteCount_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!voteAddress_.isEmpty()) {
                output.writeBytes(1, voteAddress_);
            }
            if (voteCount_ != 0L) {
                output.writeInt64(2, voteCount_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!voteAddress_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, voteAddress_);
            }
            if (voteCount_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, voteCount_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Vote)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Vote other = (com.cryptowallet.crypto.Protocol.Vote) obj;

            boolean result = true;
            result = result && getVoteAddress()
                    .equals(other.getVoteAddress());
            result = result && (getVoteCount()
                    == other.getVoteCount());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + VOTE_ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getVoteAddress().hashCode();
            hash = (37 * hash) + VOTE_COUNT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getVoteCount());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Vote parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Vote parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Vote prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         * vote message
         * </pre>
         *
         * Protobuf type {@code protocol.Vote}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Vote)
                com.cryptowallet.crypto.Protocol.VoteOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Vote_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Vote_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Vote.class, com.cryptowallet.crypto.Protocol.Vote.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Vote.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                voteAddress_ = com.google.protobuf.ByteString.EMPTY;

                voteCount_ = 0L;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Vote_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Vote getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Vote.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Vote build() {
                com.cryptowallet.crypto.Protocol.Vote result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Vote buildPartial() {
                com.cryptowallet.crypto.Protocol.Vote result = new com.cryptowallet.crypto.Protocol.Vote(this);
                result.voteAddress_ = voteAddress_;
                result.voteCount_ = voteCount_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Vote) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Vote)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Vote other) {
                if (other == com.cryptowallet.crypto.Protocol.Vote.getDefaultInstance()) return this;
                if (other.getVoteAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setVoteAddress(other.getVoteAddress());
                }
                if (other.getVoteCount() != 0L) {
                    setVoteCount(other.getVoteCount());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Vote parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Vote) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.google.protobuf.ByteString voteAddress_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <pre>
             * the super rep address
             * </pre>
             *
             * <code>bytes vote_address = 1;</code>
             */
            public com.google.protobuf.ByteString getVoteAddress() {
                return voteAddress_;
            }
            /**
             * <pre>
             * the super rep address
             * </pre>
             *
             * <code>bytes vote_address = 1;</code>
             */
            public Builder setVoteAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                voteAddress_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * the super rep address
             * </pre>
             *
             * <code>bytes vote_address = 1;</code>
             */
            public Builder clearVoteAddress() {

                voteAddress_ = getDefaultInstance().getVoteAddress();
                onChanged();
                return this;
            }

            private long voteCount_ ;
            /**
             * <pre>
             * the vote num to this super rep.
             * </pre>
             *
             * <code>int64 vote_count = 2;</code>
             */
            public long getVoteCount() {
                return voteCount_;
            }
            /**
             * <pre>
             * the vote num to this super rep.
             * </pre>
             *
             * <code>int64 vote_count = 2;</code>
             */
            public Builder setVoteCount(long value) {

                voteCount_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * the vote num to this super rep.
             * </pre>
             *
             * <code>int64 vote_count = 2;</code>
             */
            public Builder clearVoteCount() {

                voteCount_ = 0L;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Vote)
        }

        // @@protoc_insertion_point(class_scope:protocol.Vote)
        private static final com.cryptowallet.crypto.Protocol.Vote DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Vote();
        }

        public static com.cryptowallet.crypto.Protocol.Vote getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Vote>
                PARSER = new com.google.protobuf.AbstractParser<Vote>() {
            public Vote parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Vote(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Vote> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Vote> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Vote getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ProposalOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Proposal)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int64 proposal_id = 1;</code>
         */
        long getProposalId();

        /**
         * <code>bytes proposer_address = 2;</code>
         */
        com.google.protobuf.ByteString getProposerAddress();

        /**
         * <code>map&lt;int64, int64&gt; parameters = 3;</code>
         */
        int getParametersCount();
        /**
         * <code>map&lt;int64, int64&gt; parameters = 3;</code>
         */
        boolean containsParameters(
                long key);
        /**
         * Use {@link #getParametersMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.Long, java.lang.Long>
        getParameters();
        /**
         * <code>map&lt;int64, int64&gt; parameters = 3;</code>
         */
        java.util.Map<java.lang.Long, java.lang.Long>
        getParametersMap();
        /**
         * <code>map&lt;int64, int64&gt; parameters = 3;</code>
         */

        long getParametersOrDefault(
                long key,
                long defaultValue);
        /**
         * <code>map&lt;int64, int64&gt; parameters = 3;</code>
         */

        long getParametersOrThrow(
                long key);

        /**
         * <code>int64 expiration_time = 4;</code>
         */
        long getExpirationTime();

        /**
         * <code>int64 create_time = 5;</code>
         */
        long getCreateTime();

        /**
         * <code>repeated bytes approvals = 6;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getApprovalsList();
        /**
         * <code>repeated bytes approvals = 6;</code>
         */
        int getApprovalsCount();
        /**
         * <code>repeated bytes approvals = 6;</code>
         */
        com.google.protobuf.ByteString getApprovals(int index);

        /**
         * <code>.protocol.Proposal.State state = 7;</code>
         */
        int getStateValue();
        /**
         * <code>.protocol.Proposal.State state = 7;</code>
         */
        com.cryptowallet.crypto.Protocol.Proposal.State getState();
    }
    /**
     * <pre>
     * Proposal
     * </pre>
     *
     * Protobuf type {@code protocol.Proposal}
     */
    public  static final class Proposal extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Proposal)
            ProposalOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Proposal.newBuilder() to construct.
        private Proposal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Proposal() {
            proposalId_ = 0L;
            proposerAddress_ = com.google.protobuf.ByteString.EMPTY;
            expirationTime_ = 0L;
            createTime_ = 0L;
            approvals_ = java.util.Collections.emptyList();
            state_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Proposal(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            proposalId_ = input.readInt64();
                            break;
                        }
                        case 18: {

                            proposerAddress_ = input.readBytes();
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                parameters_ = com.google.protobuf.MapField.newMapField(
                                        ParametersDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000004;
                            }
                            com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
                                    parameters__ = input.readMessage(
                                    ParametersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            parameters_.getMutableMap().put(
                                    parameters__.getKey(), parameters__.getValue());
                            break;
                        }
                        case 32: {

                            expirationTime_ = input.readInt64();
                            break;
                        }
                        case 40: {

                            createTime_ = input.readInt64();
                            break;
                        }
                        case 50: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                approvals_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                mutable_bitField0_ |= 0x00000020;
                            }
                            approvals_.add(input.readBytes());
                            break;
                        }
                        case 56: {
                            int rawValue = input.readEnum();

                            state_ = rawValue;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                    approvals_ = java.util.Collections.unmodifiableList(approvals_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Proposal_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
                int number) {
            switch (number) {
                case 3:
                    return internalGetParameters();
                default:
                    throw new RuntimeException(
                            "Invalid map field number: " + number);
            }
        }
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Proposal_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Proposal.class, com.cryptowallet.crypto.Protocol.Proposal.Builder.class);
        }

        /**
         * Protobuf enum {@code protocol.Proposal.State}
         */
        public enum State
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>PENDING = 0;</code>
             */
            PENDING(0),
            /**
             * <code>DISAPPROVED = 1;</code>
             */
            DISAPPROVED(1),
            /**
             * <code>APPROVED = 2;</code>
             */
            APPROVED(2),
            /**
             * <code>CANCELED = 3;</code>
             */
            CANCELED(3),
            UNRECOGNIZED(-1),
            ;

            /**
             * <code>PENDING = 0;</code>
             */
            public static final int PENDING_VALUE = 0;
            /**
             * <code>DISAPPROVED = 1;</code>
             */
            public static final int DISAPPROVED_VALUE = 1;
            /**
             * <code>APPROVED = 2;</code>
             */
            public static final int APPROVED_VALUE = 2;
            /**
             * <code>CANCELED = 3;</code>
             */
            public static final int CANCELED_VALUE = 3;


            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new java.lang.IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static State valueOf(int value) {
                return forNumber(value);
            }

            public static State forNumber(int value) {
                switch (value) {
                    case 0: return PENDING;
                    case 1: return DISAPPROVED;
                    case 2: return APPROVED;
                    case 3: return CANCELED;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<State>
            internalGetValueMap() {
                return internalValueMap;
            }
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    State> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<State>() {
                        public State findValueByNumber(int number) {
                            return State.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }
            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }
            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.Proposal.getDescriptor().getEnumTypes().get(0);
            }

            private static final State[] VALUES = values();

            public static State valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private State(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:protocol.Proposal.State)
        }

        private int bitField0_;
        public static final int PROPOSAL_ID_FIELD_NUMBER = 1;
        private long proposalId_;
        /**
         * <code>int64 proposal_id = 1;</code>
         */
        public long getProposalId() {
            return proposalId_;
        }

        public static final int PROPOSER_ADDRESS_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString proposerAddress_;
        /**
         * <code>bytes proposer_address = 2;</code>
         */
        public com.google.protobuf.ByteString getProposerAddress() {
            return proposerAddress_;
        }

        public static final int PARAMETERS_FIELD_NUMBER = 3;
        private static final class ParametersDefaultEntryHolder {
            static final com.google.protobuf.MapEntry<
                    java.lang.Long, java.lang.Long> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<java.lang.Long, java.lang.Long>newDefaultInstance(
                                    com.cryptowallet.crypto.Protocol.internal_static_protocol_Proposal_ParametersEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.INT64,
                                    0L,
                                    com.google.protobuf.WireFormat.FieldType.INT64,
                                    0L);
        }
        private com.google.protobuf.MapField<
                java.lang.Long, java.lang.Long> parameters_;
        private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
        internalGetParameters() {
            if (parameters_ == null) {
                return com.google.protobuf.MapField.emptyMapField(
                        ParametersDefaultEntryHolder.defaultEntry);
            }
            return parameters_;
        }

        public int getParametersCount() {
            return internalGetParameters().getMap().size();
        }
        /**
         * <code>map&lt;int64, int64&gt; parameters = 3;</code>
         */

        public boolean containsParameters(
                long key) {

            return internalGetParameters().getMap().containsKey(key);
        }
        /**
         * Use {@link #getParametersMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.Long, java.lang.Long> getParameters() {
            return getParametersMap();
        }
        /**
         * <code>map&lt;int64, int64&gt; parameters = 3;</code>
         */

        public java.util.Map<java.lang.Long, java.lang.Long> getParametersMap() {
            return internalGetParameters().getMap();
        }
        /**
         * <code>map&lt;int64, int64&gt; parameters = 3;</code>
         */

        public long getParametersOrDefault(
                long key,
                long defaultValue) {

            java.util.Map<java.lang.Long, java.lang.Long> map =
                    internalGetParameters().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;int64, int64&gt; parameters = 3;</code>
         */

        public long getParametersOrThrow(
                long key) {

            java.util.Map<java.lang.Long, java.lang.Long> map =
                    internalGetParameters().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        public static final int EXPIRATION_TIME_FIELD_NUMBER = 4;
        private long expirationTime_;
        /**
         * <code>int64 expiration_time = 4;</code>
         */
        public long getExpirationTime() {
            return expirationTime_;
        }

        public static final int CREATE_TIME_FIELD_NUMBER = 5;
        private long createTime_;
        /**
         * <code>int64 create_time = 5;</code>
         */
        public long getCreateTime() {
            return createTime_;
        }

        public static final int APPROVALS_FIELD_NUMBER = 6;
        private java.util.List<com.google.protobuf.ByteString> approvals_;
        /**
         * <code>repeated bytes approvals = 6;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
        getApprovalsList() {
            return approvals_;
        }
        /**
         * <code>repeated bytes approvals = 6;</code>
         */
        public int getApprovalsCount() {
            return approvals_.size();
        }
        /**
         * <code>repeated bytes approvals = 6;</code>
         */
        public com.google.protobuf.ByteString getApprovals(int index) {
            return approvals_.get(index);
        }

        public static final int STATE_FIELD_NUMBER = 7;
        private int state_;
        /**
         * <code>.protocol.Proposal.State state = 7;</code>
         */
        public int getStateValue() {
            return state_;
        }
        /**
         * <code>.protocol.Proposal.State state = 7;</code>
         */
        public com.cryptowallet.crypto.Protocol.Proposal.State getState() {
            com.cryptowallet.crypto.Protocol.Proposal.State result = com.cryptowallet.crypto.Protocol.Proposal.State.valueOf(state_);
            return result == null ? com.cryptowallet.crypto.Protocol.Proposal.State.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (proposalId_ != 0L) {
                output.writeInt64(1, proposalId_);
            }
            if (!proposerAddress_.isEmpty()) {
                output.writeBytes(2, proposerAddress_);
            }
            com.google.protobuf.GeneratedMessageV3
                    .serializeLongMapTo(
                            output,
                            internalGetParameters(),
                            ParametersDefaultEntryHolder.defaultEntry,
                            3);
            if (expirationTime_ != 0L) {
                output.writeInt64(4, expirationTime_);
            }
            if (createTime_ != 0L) {
                output.writeInt64(5, createTime_);
            }
            for (int i = 0; i < approvals_.size(); i++) {
                output.writeBytes(6, approvals_.get(i));
            }
            if (state_ != com.cryptowallet.crypto.Protocol.Proposal.State.PENDING.getNumber()) {
                output.writeEnum(7, state_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (proposalId_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, proposalId_);
            }
            if (!proposerAddress_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, proposerAddress_);
            }
            for (java.util.Map.Entry<java.lang.Long, java.lang.Long> entry
                    : internalGetParameters().getMap().entrySet()) {
                com.google.protobuf.MapEntry<java.lang.Long, java.lang.Long>
                        parameters__ = ParametersDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, parameters__);
            }
            if (expirationTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, expirationTime_);
            }
            if (createTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(5, createTime_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < approvals_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(approvals_.get(i));
                }
                size += dataSize;
                size += 1 * getApprovalsList().size();
            }
            if (state_ != com.cryptowallet.crypto.Protocol.Proposal.State.PENDING.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(7, state_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Proposal)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Proposal other = (com.cryptowallet.crypto.Protocol.Proposal) obj;

            boolean result = true;
            result = result && (getProposalId()
                    == other.getProposalId());
            result = result && getProposerAddress()
                    .equals(other.getProposerAddress());
            result = result && internalGetParameters().equals(
                    other.internalGetParameters());
            result = result && (getExpirationTime()
                    == other.getExpirationTime());
            result = result && (getCreateTime()
                    == other.getCreateTime());
            result = result && getApprovalsList()
                    .equals(other.getApprovalsList());
            result = result && state_ == other.state_;
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + PROPOSAL_ID_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getProposalId());
            hash = (37 * hash) + PROPOSER_ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getProposerAddress().hashCode();
            if (!internalGetParameters().getMap().isEmpty()) {
                hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
                hash = (53 * hash) + internalGetParameters().hashCode();
            }
            hash = (37 * hash) + EXPIRATION_TIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getExpirationTime());
            hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getCreateTime());
            if (getApprovalsCount() > 0) {
                hash = (37 * hash) + APPROVALS_FIELD_NUMBER;
                hash = (53 * hash) + getApprovalsList().hashCode();
            }
            hash = (37 * hash) + STATE_FIELD_NUMBER;
            hash = (53 * hash) + state_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Proposal parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Proposal parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Proposal prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         * Proposal
         * </pre>
         *
         * Protobuf type {@code protocol.Proposal}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Proposal)
                com.cryptowallet.crypto.Protocol.ProposalOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Proposal_descriptor;
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMapField(
                    int number) {
                switch (number) {
                    case 3:
                        return internalGetParameters();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }
            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMutableMapField(
                    int number) {
                switch (number) {
                    case 3:
                        return internalGetMutableParameters();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Proposal_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Proposal.class, com.cryptowallet.crypto.Protocol.Proposal.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Proposal.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                proposalId_ = 0L;

                proposerAddress_ = com.google.protobuf.ByteString.EMPTY;

                internalGetMutableParameters().clear();
                expirationTime_ = 0L;

                createTime_ = 0L;

                approvals_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                state_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Proposal_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Proposal getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Proposal.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Proposal build() {
                com.cryptowallet.crypto.Protocol.Proposal result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Proposal buildPartial() {
                com.cryptowallet.crypto.Protocol.Proposal result = new com.cryptowallet.crypto.Protocol.Proposal(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.proposalId_ = proposalId_;
                result.proposerAddress_ = proposerAddress_;
                result.parameters_ = internalGetParameters();
                result.parameters_.makeImmutable();
                result.expirationTime_ = expirationTime_;
                result.createTime_ = createTime_;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    approvals_ = java.util.Collections.unmodifiableList(approvals_);
                    bitField0_ = (bitField0_ & ~0x00000020);
                }
                result.approvals_ = approvals_;
                result.state_ = state_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Proposal) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Proposal)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Proposal other) {
                if (other == com.cryptowallet.crypto.Protocol.Proposal.getDefaultInstance()) return this;
                if (other.getProposalId() != 0L) {
                    setProposalId(other.getProposalId());
                }
                if (other.getProposerAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setProposerAddress(other.getProposerAddress());
                }
                internalGetMutableParameters().mergeFrom(
                        other.internalGetParameters());
                if (other.getExpirationTime() != 0L) {
                    setExpirationTime(other.getExpirationTime());
                }
                if (other.getCreateTime() != 0L) {
                    setCreateTime(other.getCreateTime());
                }
                if (!other.approvals_.isEmpty()) {
                    if (approvals_.isEmpty()) {
                        approvals_ = other.approvals_;
                        bitField0_ = (bitField0_ & ~0x00000020);
                    } else {
                        ensureApprovalsIsMutable();
                        approvals_.addAll(other.approvals_);
                    }
                    onChanged();
                }
                if (other.state_ != 0) {
                    setStateValue(other.getStateValue());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Proposal parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Proposal) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private long proposalId_ ;
            /**
             * <code>int64 proposal_id = 1;</code>
             */
            public long getProposalId() {
                return proposalId_;
            }
            /**
             * <code>int64 proposal_id = 1;</code>
             */
            public Builder setProposalId(long value) {

                proposalId_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 proposal_id = 1;</code>
             */
            public Builder clearProposalId() {

                proposalId_ = 0L;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString proposerAddress_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes proposer_address = 2;</code>
             */
            public com.google.protobuf.ByteString getProposerAddress() {
                return proposerAddress_;
            }
            /**
             * <code>bytes proposer_address = 2;</code>
             */
            public Builder setProposerAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                proposerAddress_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes proposer_address = 2;</code>
             */
            public Builder clearProposerAddress() {

                proposerAddress_ = getDefaultInstance().getProposerAddress();
                onChanged();
                return this;
            }

            private com.google.protobuf.MapField<
                    java.lang.Long, java.lang.Long> parameters_;
            private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
            internalGetParameters() {
                if (parameters_ == null) {
                    return com.google.protobuf.MapField.emptyMapField(
                            ParametersDefaultEntryHolder.defaultEntry);
                }
                return parameters_;
            }
            private com.google.protobuf.MapField<java.lang.Long, java.lang.Long>
            internalGetMutableParameters() {
                onChanged();;
                if (parameters_ == null) {
                    parameters_ = com.google.protobuf.MapField.newMapField(
                            ParametersDefaultEntryHolder.defaultEntry);
                }
                if (!parameters_.isMutable()) {
                    parameters_ = parameters_.copy();
                }
                return parameters_;
            }

            public int getParametersCount() {
                return internalGetParameters().getMap().size();
            }
            /**
             * <code>map&lt;int64, int64&gt; parameters = 3;</code>
             */

            public boolean containsParameters(
                    long key) {

                return internalGetParameters().getMap().containsKey(key);
            }
            /**
             * Use {@link #getParametersMap()} instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.Long, java.lang.Long> getParameters() {
                return getParametersMap();
            }
            /**
             * <code>map&lt;int64, int64&gt; parameters = 3;</code>
             */

            public java.util.Map<java.lang.Long, java.lang.Long> getParametersMap() {
                return internalGetParameters().getMap();
            }
            /**
             * <code>map&lt;int64, int64&gt; parameters = 3;</code>
             */

            public long getParametersOrDefault(
                    long key,
                    long defaultValue) {

                java.util.Map<java.lang.Long, java.lang.Long> map =
                        internalGetParameters().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }
            /**
             * <code>map&lt;int64, int64&gt; parameters = 3;</code>
             */

            public long getParametersOrThrow(
                    long key) {

                java.util.Map<java.lang.Long, java.lang.Long> map =
                        internalGetParameters().getMap();
                if (!map.containsKey(key)) {
                    throw new java.lang.IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearParameters() {
                internalGetMutableParameters().getMutableMap()
                        .clear();
                return this;
            }
            /**
             * <code>map&lt;int64, int64&gt; parameters = 3;</code>
             */

            public Builder removeParameters(
                    long key) {

                internalGetMutableParameters().getMutableMap()
                        .remove(key);
                return this;
            }
            /**
             * Use alternate mutation accessors instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.Long, java.lang.Long>
            getMutableParameters() {
                return internalGetMutableParameters().getMutableMap();
            }
            /**
             * <code>map&lt;int64, int64&gt; parameters = 3;</code>
             */
            public Builder putParameters(
                    long key,
                    long value) {


                internalGetMutableParameters().getMutableMap()
                        .put(key, value);
                return this;
            }
            /**
             * <code>map&lt;int64, int64&gt; parameters = 3;</code>
             */

            public Builder putAllParameters(
                    java.util.Map<java.lang.Long, java.lang.Long> values) {
                internalGetMutableParameters().getMutableMap()
                        .putAll(values);
                return this;
            }

            private long expirationTime_ ;
            /**
             * <code>int64 expiration_time = 4;</code>
             */
            public long getExpirationTime() {
                return expirationTime_;
            }
            /**
             * <code>int64 expiration_time = 4;</code>
             */
            public Builder setExpirationTime(long value) {

                expirationTime_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 expiration_time = 4;</code>
             */
            public Builder clearExpirationTime() {

                expirationTime_ = 0L;
                onChanged();
                return this;
            }

            private long createTime_ ;
            /**
             * <code>int64 create_time = 5;</code>
             */
            public long getCreateTime() {
                return createTime_;
            }
            /**
             * <code>int64 create_time = 5;</code>
             */
            public Builder setCreateTime(long value) {

                createTime_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 create_time = 5;</code>
             */
            public Builder clearCreateTime() {

                createTime_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<com.google.protobuf.ByteString> approvals_ = java.util.Collections.emptyList();
            private void ensureApprovalsIsMutable() {
                if (!((bitField0_ & 0x00000020) == 0x00000020)) {
                    approvals_ = new java.util.ArrayList<com.google.protobuf.ByteString>(approvals_);
                    bitField0_ |= 0x00000020;
                }
            }
            /**
             * <code>repeated bytes approvals = 6;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getApprovalsList() {
                return java.util.Collections.unmodifiableList(approvals_);
            }
            /**
             * <code>repeated bytes approvals = 6;</code>
             */
            public int getApprovalsCount() {
                return approvals_.size();
            }
            /**
             * <code>repeated bytes approvals = 6;</code>
             */
            public com.google.protobuf.ByteString getApprovals(int index) {
                return approvals_.get(index);
            }
            /**
             * <code>repeated bytes approvals = 6;</code>
             */
            public Builder setApprovals(
                    int index, com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureApprovalsIsMutable();
                approvals_.set(index, value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes approvals = 6;</code>
             */
            public Builder addApprovals(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureApprovalsIsMutable();
                approvals_.add(value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes approvals = 6;</code>
             */
            public Builder addAllApprovals(
                    java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
                ensureApprovalsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, approvals_);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes approvals = 6;</code>
             */
            public Builder clearApprovals() {
                approvals_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000020);
                onChanged();
                return this;
            }

            private int state_ = 0;
            /**
             * <code>.protocol.Proposal.State state = 7;</code>
             */
            public int getStateValue() {
                return state_;
            }
            /**
             * <code>.protocol.Proposal.State state = 7;</code>
             */
            public Builder setStateValue(int value) {
                state_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.Proposal.State state = 7;</code>
             */
            public com.cryptowallet.crypto.Protocol.Proposal.State getState() {
                com.cryptowallet.crypto.Protocol.Proposal.State result = com.cryptowallet.crypto.Protocol.Proposal.State.valueOf(state_);
                return result == null ? com.cryptowallet.crypto.Protocol.Proposal.State.UNRECOGNIZED : result;
            }
            /**
             * <code>.protocol.Proposal.State state = 7;</code>
             */
            public Builder setState(com.cryptowallet.crypto.Protocol.Proposal.State value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                state_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.Proposal.State state = 7;</code>
             */
            public Builder clearState() {

                state_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Proposal)
        }

        // @@protoc_insertion_point(class_scope:protocol.Proposal)
        private static final com.cryptowallet.crypto.Protocol.Proposal DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Proposal();
        }

        public static com.cryptowallet.crypto.Protocol.Proposal getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Proposal>
                PARSER = new com.google.protobuf.AbstractParser<Proposal>() {
            public Proposal parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Proposal(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Proposal> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Proposal> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Proposal getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ExchangeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Exchange)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int64 exchange_id = 1;</code>
         */
        long getExchangeId();

        /**
         * <code>bytes creator_address = 2;</code>
         */
        com.google.protobuf.ByteString getCreatorAddress();

        /**
         * <code>int64 create_time = 3;</code>
         */
        long getCreateTime();

        /**
         * <code>bytes first_token_id = 6;</code>
         */
        com.google.protobuf.ByteString getFirstTokenId();

        /**
         * <code>int64 first_token_balance = 7;</code>
         */
        long getFirstTokenBalance();

        /**
         * <code>bytes second_token_id = 8;</code>
         */
        com.google.protobuf.ByteString getSecondTokenId();

        /**
         * <code>int64 second_token_balance = 9;</code>
         */
        long getSecondTokenBalance();
    }
    /**
     * <pre>
     * Exchange
     * </pre>
     *
     * Protobuf type {@code protocol.Exchange}
     */
    public  static final class Exchange extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Exchange)
            ExchangeOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Exchange.newBuilder() to construct.
        private Exchange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Exchange() {
            exchangeId_ = 0L;
            creatorAddress_ = com.google.protobuf.ByteString.EMPTY;
            createTime_ = 0L;
            firstTokenId_ = com.google.protobuf.ByteString.EMPTY;
            firstTokenBalance_ = 0L;
            secondTokenId_ = com.google.protobuf.ByteString.EMPTY;
            secondTokenBalance_ = 0L;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Exchange(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            exchangeId_ = input.readInt64();
                            break;
                        }
                        case 18: {

                            creatorAddress_ = input.readBytes();
                            break;
                        }
                        case 24: {

                            createTime_ = input.readInt64();
                            break;
                        }
                        case 50: {

                            firstTokenId_ = input.readBytes();
                            break;
                        }
                        case 56: {

                            firstTokenBalance_ = input.readInt64();
                            break;
                        }
                        case 66: {

                            secondTokenId_ = input.readBytes();
                            break;
                        }
                        case 72: {

                            secondTokenBalance_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Exchange_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Exchange_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Exchange.class, com.cryptowallet.crypto.Protocol.Exchange.Builder.class);
        }

        public static final int EXCHANGE_ID_FIELD_NUMBER = 1;
        private long exchangeId_;
        /**
         * <code>int64 exchange_id = 1;</code>
         */
        public long getExchangeId() {
            return exchangeId_;
        }

        public static final int CREATOR_ADDRESS_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString creatorAddress_;
        /**
         * <code>bytes creator_address = 2;</code>
         */
        public com.google.protobuf.ByteString getCreatorAddress() {
            return creatorAddress_;
        }

        public static final int CREATE_TIME_FIELD_NUMBER = 3;
        private long createTime_;
        /**
         * <code>int64 create_time = 3;</code>
         */
        public long getCreateTime() {
            return createTime_;
        }

        public static final int FIRST_TOKEN_ID_FIELD_NUMBER = 6;
        private com.google.protobuf.ByteString firstTokenId_;
        /**
         * <code>bytes first_token_id = 6;</code>
         */
        public com.google.protobuf.ByteString getFirstTokenId() {
            return firstTokenId_;
        }

        public static final int FIRST_TOKEN_BALANCE_FIELD_NUMBER = 7;
        private long firstTokenBalance_;
        /**
         * <code>int64 first_token_balance = 7;</code>
         */
        public long getFirstTokenBalance() {
            return firstTokenBalance_;
        }

        public static final int SECOND_TOKEN_ID_FIELD_NUMBER = 8;
        private com.google.protobuf.ByteString secondTokenId_;
        /**
         * <code>bytes second_token_id = 8;</code>
         */
        public com.google.protobuf.ByteString getSecondTokenId() {
            return secondTokenId_;
        }

        public static final int SECOND_TOKEN_BALANCE_FIELD_NUMBER = 9;
        private long secondTokenBalance_;
        /**
         * <code>int64 second_token_balance = 9;</code>
         */
        public long getSecondTokenBalance() {
            return secondTokenBalance_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (exchangeId_ != 0L) {
                output.writeInt64(1, exchangeId_);
            }
            if (!creatorAddress_.isEmpty()) {
                output.writeBytes(2, creatorAddress_);
            }
            if (createTime_ != 0L) {
                output.writeInt64(3, createTime_);
            }
            if (!firstTokenId_.isEmpty()) {
                output.writeBytes(6, firstTokenId_);
            }
            if (firstTokenBalance_ != 0L) {
                output.writeInt64(7, firstTokenBalance_);
            }
            if (!secondTokenId_.isEmpty()) {
                output.writeBytes(8, secondTokenId_);
            }
            if (secondTokenBalance_ != 0L) {
                output.writeInt64(9, secondTokenBalance_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (exchangeId_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, exchangeId_);
            }
            if (!creatorAddress_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, creatorAddress_);
            }
            if (createTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(3, createTime_);
            }
            if (!firstTokenId_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(6, firstTokenId_);
            }
            if (firstTokenBalance_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(7, firstTokenBalance_);
            }
            if (!secondTokenId_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(8, secondTokenId_);
            }
            if (secondTokenBalance_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(9, secondTokenBalance_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Exchange)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Exchange other = (com.cryptowallet.crypto.Protocol.Exchange) obj;

            boolean result = true;
            result = result && (getExchangeId()
                    == other.getExchangeId());
            result = result && getCreatorAddress()
                    .equals(other.getCreatorAddress());
            result = result && (getCreateTime()
                    == other.getCreateTime());
            result = result && getFirstTokenId()
                    .equals(other.getFirstTokenId());
            result = result && (getFirstTokenBalance()
                    == other.getFirstTokenBalance());
            result = result && getSecondTokenId()
                    .equals(other.getSecondTokenId());
            result = result && (getSecondTokenBalance()
                    == other.getSecondTokenBalance());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + EXCHANGE_ID_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getExchangeId());
            hash = (37 * hash) + CREATOR_ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getCreatorAddress().hashCode();
            hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getCreateTime());
            hash = (37 * hash) + FIRST_TOKEN_ID_FIELD_NUMBER;
            hash = (53 * hash) + getFirstTokenId().hashCode();
            hash = (37 * hash) + FIRST_TOKEN_BALANCE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getFirstTokenBalance());
            hash = (37 * hash) + SECOND_TOKEN_ID_FIELD_NUMBER;
            hash = (53 * hash) + getSecondTokenId().hashCode();
            hash = (37 * hash) + SECOND_TOKEN_BALANCE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getSecondTokenBalance());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Exchange parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Exchange parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Exchange prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         * Exchange
         * </pre>
         *
         * Protobuf type {@code protocol.Exchange}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Exchange)
                com.cryptowallet.crypto.Protocol.ExchangeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Exchange_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Exchange_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Exchange.class, com.cryptowallet.crypto.Protocol.Exchange.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Exchange.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                exchangeId_ = 0L;

                creatorAddress_ = com.google.protobuf.ByteString.EMPTY;

                createTime_ = 0L;

                firstTokenId_ = com.google.protobuf.ByteString.EMPTY;

                firstTokenBalance_ = 0L;

                secondTokenId_ = com.google.protobuf.ByteString.EMPTY;

                secondTokenBalance_ = 0L;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Exchange_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Exchange getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Exchange.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Exchange build() {
                com.cryptowallet.crypto.Protocol.Exchange result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Exchange buildPartial() {
                com.cryptowallet.crypto.Protocol.Exchange result = new com.cryptowallet.crypto.Protocol.Exchange(this);
                result.exchangeId_ = exchangeId_;
                result.creatorAddress_ = creatorAddress_;
                result.createTime_ = createTime_;
                result.firstTokenId_ = firstTokenId_;
                result.firstTokenBalance_ = firstTokenBalance_;
                result.secondTokenId_ = secondTokenId_;
                result.secondTokenBalance_ = secondTokenBalance_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Exchange) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Exchange)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Exchange other) {
                if (other == com.cryptowallet.crypto.Protocol.Exchange.getDefaultInstance()) return this;
                if (other.getExchangeId() != 0L) {
                    setExchangeId(other.getExchangeId());
                }
                if (other.getCreatorAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setCreatorAddress(other.getCreatorAddress());
                }
                if (other.getCreateTime() != 0L) {
                    setCreateTime(other.getCreateTime());
                }
                if (other.getFirstTokenId() != com.google.protobuf.ByteString.EMPTY) {
                    setFirstTokenId(other.getFirstTokenId());
                }
                if (other.getFirstTokenBalance() != 0L) {
                    setFirstTokenBalance(other.getFirstTokenBalance());
                }
                if (other.getSecondTokenId() != com.google.protobuf.ByteString.EMPTY) {
                    setSecondTokenId(other.getSecondTokenId());
                }
                if (other.getSecondTokenBalance() != 0L) {
                    setSecondTokenBalance(other.getSecondTokenBalance());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Exchange parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Exchange) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private long exchangeId_ ;
            /**
             * <code>int64 exchange_id = 1;</code>
             */
            public long getExchangeId() {
                return exchangeId_;
            }
            /**
             * <code>int64 exchange_id = 1;</code>
             */
            public Builder setExchangeId(long value) {

                exchangeId_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 exchange_id = 1;</code>
             */
            public Builder clearExchangeId() {

                exchangeId_ = 0L;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString creatorAddress_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes creator_address = 2;</code>
             */
            public com.google.protobuf.ByteString getCreatorAddress() {
                return creatorAddress_;
            }
            /**
             * <code>bytes creator_address = 2;</code>
             */
            public Builder setCreatorAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                creatorAddress_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes creator_address = 2;</code>
             */
            public Builder clearCreatorAddress() {

                creatorAddress_ = getDefaultInstance().getCreatorAddress();
                onChanged();
                return this;
            }

            private long createTime_ ;
            /**
             * <code>int64 create_time = 3;</code>
             */
            public long getCreateTime() {
                return createTime_;
            }
            /**
             * <code>int64 create_time = 3;</code>
             */
            public Builder setCreateTime(long value) {

                createTime_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 create_time = 3;</code>
             */
            public Builder clearCreateTime() {

                createTime_ = 0L;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString firstTokenId_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes first_token_id = 6;</code>
             */
            public com.google.protobuf.ByteString getFirstTokenId() {
                return firstTokenId_;
            }
            /**
             * <code>bytes first_token_id = 6;</code>
             */
            public Builder setFirstTokenId(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                firstTokenId_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes first_token_id = 6;</code>
             */
            public Builder clearFirstTokenId() {

                firstTokenId_ = getDefaultInstance().getFirstTokenId();
                onChanged();
                return this;
            }

            private long firstTokenBalance_ ;
            /**
             * <code>int64 first_token_balance = 7;</code>
             */
            public long getFirstTokenBalance() {
                return firstTokenBalance_;
            }
            /**
             * <code>int64 first_token_balance = 7;</code>
             */
            public Builder setFirstTokenBalance(long value) {

                firstTokenBalance_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 first_token_balance = 7;</code>
             */
            public Builder clearFirstTokenBalance() {

                firstTokenBalance_ = 0L;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString secondTokenId_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes second_token_id = 8;</code>
             */
            public com.google.protobuf.ByteString getSecondTokenId() {
                return secondTokenId_;
            }
            /**
             * <code>bytes second_token_id = 8;</code>
             */
            public Builder setSecondTokenId(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                secondTokenId_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes second_token_id = 8;</code>
             */
            public Builder clearSecondTokenId() {

                secondTokenId_ = getDefaultInstance().getSecondTokenId();
                onChanged();
                return this;
            }

            private long secondTokenBalance_ ;
            /**
             * <code>int64 second_token_balance = 9;</code>
             */
            public long getSecondTokenBalance() {
                return secondTokenBalance_;
            }
            /**
             * <code>int64 second_token_balance = 9;</code>
             */
            public Builder setSecondTokenBalance(long value) {

                secondTokenBalance_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 second_token_balance = 9;</code>
             */
            public Builder clearSecondTokenBalance() {

                secondTokenBalance_ = 0L;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Exchange)
        }

        // @@protoc_insertion_point(class_scope:protocol.Exchange)
        private static final com.cryptowallet.crypto.Protocol.Exchange DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Exchange();
        }

        public static com.cryptowallet.crypto.Protocol.Exchange getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Exchange>
                PARSER = new com.google.protobuf.AbstractParser<Exchange>() {
            public Exchange parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Exchange(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Exchange> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Exchange> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Exchange getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ChainParametersOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.ChainParameters)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter>
        getChainParameterList();
        /**
         * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter getChainParameter(int index);
        /**
         * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
         */
        int getChainParameterCount();
        /**
         * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameterOrBuilder>
        getChainParameterOrBuilderList();
        /**
         * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameterOrBuilder getChainParameterOrBuilder(
                int index);
    }
    /**
     * Protobuf type {@code protocol.ChainParameters}
     */
    public  static final class ChainParameters extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.ChainParameters)
            ChainParametersOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use ChainParameters.newBuilder() to construct.
        private ChainParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ChainParameters() {
            chainParameter_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private ChainParameters(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                chainParameter_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            chainParameter_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    chainParameter_ = java.util.Collections.unmodifiableList(chainParameter_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainParameters_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainParameters_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.ChainParameters.class, com.cryptowallet.crypto.Protocol.ChainParameters.Builder.class);
        }

        public interface ChainParameterOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.ChainParameters.ChainParameter)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>string key = 1;</code>
             */
            java.lang.String getKey();
            /**
             * <code>string key = 1;</code>
             */
            com.google.protobuf.ByteString
            getKeyBytes();

            /**
             * <code>int64 value = 2;</code>
             */
            long getValue();
        }
        /**
         * Protobuf type {@code protocol.ChainParameters.ChainParameter}
         */
        public  static final class ChainParameter extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.ChainParameters.ChainParameter)
                ChainParameterOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use ChainParameter.newBuilder() to construct.
            private ChainParameter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private ChainParameter() {
                key_ = "";
                value_ = 0L;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private ChainParameter(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {
                                java.lang.String s = input.readStringRequireUtf8();

                                key_ = s;
                                break;
                            }
                            case 16: {

                                value_ = input.readInt64();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainParameters_ChainParameter_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainParameters_ChainParameter_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.class, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder.class);
            }

            public static final int KEY_FIELD_NUMBER = 1;
            private volatile java.lang.Object key_;
            /**
             * <code>string key = 1;</code>
             */
            public java.lang.String getKey() {
                java.lang.Object ref = key_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    key_ = s;
                    return s;
                }
            }
            /**
             * <code>string key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getKeyBytes() {
                java.lang.Object ref = key_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    key_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int VALUE_FIELD_NUMBER = 2;
            private long value_;
            /**
             * <code>int64 value = 2;</code>
             */
            public long getValue() {
                return value_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (!getKeyBytes().isEmpty()) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
                }
                if (value_ != 0L) {
                    output.writeInt64(2, value_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!getKeyBytes().isEmpty()) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
                }
                if (value_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(2, value_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter other = (com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter) obj;

                boolean result = true;
                result = result && getKey()
                        .equals(other.getKey());
                result = result && (getValue()
                        == other.getValue());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + KEY_FIELD_NUMBER;
                hash = (53 * hash) + getKey().hashCode();
                hash = (37 * hash) + VALUE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getValue());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.ChainParameters.ChainParameter}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.ChainParameters.ChainParameter)
                    com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameterOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainParameters_ChainParameter_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainParameters_ChainParameter_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.class, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    key_ = "";

                    value_ = 0L;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainParameters_ChainParameter_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter build() {
                    com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter buildPartial() {
                    com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter result = new com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter(this);
                    result.key_ = key_;
                    result.value_ = value_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter other) {
                    if (other == com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.getDefaultInstance()) return this;
                    if (!other.getKey().isEmpty()) {
                        key_ = other.key_;
                        onChanged();
                    }
                    if (other.getValue() != 0L) {
                        setValue(other.getValue());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private java.lang.Object key_ = "";
                /**
                 * <code>string key = 1;</code>
                 */
                public java.lang.String getKey() {
                    java.lang.Object ref = key_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        key_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }
                /**
                 * <code>string key = 1;</code>
                 */
                public com.google.protobuf.ByteString
                getKeyBytes() {
                    java.lang.Object ref = key_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        key_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }
                /**
                 * <code>string key = 1;</code>
                 */
                public Builder setKey(
                        java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    key_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>string key = 1;</code>
                 */
                public Builder clearKey() {

                    key_ = getDefaultInstance().getKey();
                    onChanged();
                    return this;
                }
                /**
                 * <code>string key = 1;</code>
                 */
                public Builder setKeyBytes(
                        com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);

                    key_ = value;
                    onChanged();
                    return this;
                }

                private long value_ ;
                /**
                 * <code>int64 value = 2;</code>
                 */
                public long getValue() {
                    return value_;
                }
                /**
                 * <code>int64 value = 2;</code>
                 */
                public Builder setValue(long value) {

                    value_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 value = 2;</code>
                 */
                public Builder clearValue() {

                    value_ = 0L;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.ChainParameters.ChainParameter)
            }

            // @@protoc_insertion_point(class_scope:protocol.ChainParameters.ChainParameter)
            private static final com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter();
            }

            public static com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<ChainParameter>
                    PARSER = new com.google.protobuf.AbstractParser<ChainParameter>() {
                public ChainParameter parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new ChainParameter(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<ChainParameter> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<ChainParameter> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        public static final int CHAINPARAMETER_FIELD_NUMBER = 1;
        private java.util.List<com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter> chainParameter_;
        /**
         * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter> getChainParameterList() {
            return chainParameter_;
        }
        /**
         * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameterOrBuilder>
        getChainParameterOrBuilderList() {
            return chainParameter_;
        }
        /**
         * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
         */
        public int getChainParameterCount() {
            return chainParameter_.size();
        }
        /**
         * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter getChainParameter(int index) {
            return chainParameter_.get(index);
        }
        /**
         * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameterOrBuilder getChainParameterOrBuilder(
                int index) {
            return chainParameter_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < chainParameter_.size(); i++) {
                output.writeMessage(1, chainParameter_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < chainParameter_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, chainParameter_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.ChainParameters)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.ChainParameters other = (com.cryptowallet.crypto.Protocol.ChainParameters) obj;

            boolean result = true;
            result = result && getChainParameterList()
                    .equals(other.getChainParameterList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getChainParameterCount() > 0) {
                hash = (37 * hash) + CHAINPARAMETER_FIELD_NUMBER;
                hash = (53 * hash) + getChainParameterList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.ChainParameters parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.ChainParameters parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.ChainParameters prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.ChainParameters}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.ChainParameters)
                com.cryptowallet.crypto.Protocol.ChainParametersOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainParameters_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainParameters_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.ChainParameters.class, com.cryptowallet.crypto.Protocol.ChainParameters.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.ChainParameters.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getChainParameterFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (chainParameterBuilder_ == null) {
                    chainParameter_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    chainParameterBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainParameters_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.ChainParameters getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.ChainParameters.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.ChainParameters build() {
                com.cryptowallet.crypto.Protocol.ChainParameters result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.ChainParameters buildPartial() {
                com.cryptowallet.crypto.Protocol.ChainParameters result = new com.cryptowallet.crypto.Protocol.ChainParameters(this);
                int from_bitField0_ = bitField0_;
                if (chainParameterBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        chainParameter_ = java.util.Collections.unmodifiableList(chainParameter_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.chainParameter_ = chainParameter_;
                } else {
                    result.chainParameter_ = chainParameterBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.ChainParameters) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.ChainParameters)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.ChainParameters other) {
                if (other == com.cryptowallet.crypto.Protocol.ChainParameters.getDefaultInstance()) return this;
                if (chainParameterBuilder_ == null) {
                    if (!other.chainParameter_.isEmpty()) {
                        if (chainParameter_.isEmpty()) {
                            chainParameter_ = other.chainParameter_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureChainParameterIsMutable();
                            chainParameter_.addAll(other.chainParameter_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.chainParameter_.isEmpty()) {
                        if (chainParameterBuilder_.isEmpty()) {
                            chainParameterBuilder_.dispose();
                            chainParameterBuilder_ = null;
                            chainParameter_ = other.chainParameter_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            chainParameterBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getChainParameterFieldBuilder() : null;
                        } else {
                            chainParameterBuilder_.addAllMessages(other.chainParameter_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.ChainParameters parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.ChainParameters) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private java.util.List<com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter> chainParameter_ =
                    java.util.Collections.emptyList();
            private void ensureChainParameterIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    chainParameter_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter>(chainParameter_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameterOrBuilder> chainParameterBuilder_;

            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter> getChainParameterList() {
                if (chainParameterBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(chainParameter_);
                } else {
                    return chainParameterBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public int getChainParameterCount() {
                if (chainParameterBuilder_ == null) {
                    return chainParameter_.size();
                } else {
                    return chainParameterBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter getChainParameter(int index) {
                if (chainParameterBuilder_ == null) {
                    return chainParameter_.get(index);
                } else {
                    return chainParameterBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public Builder setChainParameter(
                    int index, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter value) {
                if (chainParameterBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureChainParameterIsMutable();
                    chainParameter_.set(index, value);
                    onChanged();
                } else {
                    chainParameterBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public Builder setChainParameter(
                    int index, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder builderForValue) {
                if (chainParameterBuilder_ == null) {
                    ensureChainParameterIsMutable();
                    chainParameter_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    chainParameterBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public Builder addChainParameter(com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter value) {
                if (chainParameterBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureChainParameterIsMutable();
                    chainParameter_.add(value);
                    onChanged();
                } else {
                    chainParameterBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public Builder addChainParameter(
                    int index, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter value) {
                if (chainParameterBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureChainParameterIsMutable();
                    chainParameter_.add(index, value);
                    onChanged();
                } else {
                    chainParameterBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public Builder addChainParameter(
                    com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder builderForValue) {
                if (chainParameterBuilder_ == null) {
                    ensureChainParameterIsMutable();
                    chainParameter_.add(builderForValue.build());
                    onChanged();
                } else {
                    chainParameterBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public Builder addChainParameter(
                    int index, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder builderForValue) {
                if (chainParameterBuilder_ == null) {
                    ensureChainParameterIsMutable();
                    chainParameter_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    chainParameterBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public Builder addAllChainParameter(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter> values) {
                if (chainParameterBuilder_ == null) {
                    ensureChainParameterIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, chainParameter_);
                    onChanged();
                } else {
                    chainParameterBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public Builder clearChainParameter() {
                if (chainParameterBuilder_ == null) {
                    chainParameter_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    chainParameterBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public Builder removeChainParameter(int index) {
                if (chainParameterBuilder_ == null) {
                    ensureChainParameterIsMutable();
                    chainParameter_.remove(index);
                    onChanged();
                } else {
                    chainParameterBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder getChainParameterBuilder(
                    int index) {
                return getChainParameterFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameterOrBuilder getChainParameterOrBuilder(
                    int index) {
                if (chainParameterBuilder_ == null) {
                    return chainParameter_.get(index);  } else {
                    return chainParameterBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameterOrBuilder>
            getChainParameterOrBuilderList() {
                if (chainParameterBuilder_ != null) {
                    return chainParameterBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(chainParameter_);
                }
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder addChainParameterBuilder() {
                return getChainParameterFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder addChainParameterBuilder(
                    int index) {
                return getChainParameterFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.ChainParameters.ChainParameter chainParameter = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder>
            getChainParameterBuilderList() {
                return getChainParameterFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameterOrBuilder>
            getChainParameterFieldBuilder() {
                if (chainParameterBuilder_ == null) {
                    chainParameterBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameter.Builder, com.cryptowallet.crypto.Protocol.ChainParameters.ChainParameterOrBuilder>(
                            chainParameter_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    chainParameter_ = null;
                }
                return chainParameterBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.ChainParameters)
        }

        // @@protoc_insertion_point(class_scope:protocol.ChainParameters)
        private static final com.cryptowallet.crypto.Protocol.ChainParameters DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.ChainParameters();
        }

        public static com.cryptowallet.crypto.Protocol.ChainParameters getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ChainParameters>
                PARSER = new com.google.protobuf.AbstractParser<ChainParameters>() {
            public ChainParameters parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ChainParameters(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ChainParameters> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ChainParameters> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.ChainParameters getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface AccountOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Account)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * account nick name
         * </pre>
         *
         * <code>bytes account_name = 1;</code>
         */
        com.google.protobuf.ByteString getAccountName();

        /**
         * <code>.protocol.AccountType type = 2;</code>
         */
        int getTypeValue();
        /**
         * <code>.protocol.AccountType type = 2;</code>
         */
        com.cryptowallet.crypto.Protocol.AccountType getType();

        /**
         * <pre>
         * the create address
         * </pre>
         *
         * <code>bytes address = 3;</code>
         */
        com.google.protobuf.ByteString getAddress();

        /**
         * <pre>
         * the trx balance
         * </pre>
         *
         * <code>int64 balance = 4;</code>
         */
        long getBalance();

        /**
         * <pre>
         * the votes
         * </pre>
         *
         * <code>repeated .protocol.Vote votes = 5;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.Vote>
        getVotesList();
        /**
         * <pre>
         * the votes
         * </pre>
         *
         * <code>repeated .protocol.Vote votes = 5;</code>
         */
        com.cryptowallet.crypto.Protocol.Vote getVotes(int index);
        /**
         * <pre>
         * the votes
         * </pre>
         *
         * <code>repeated .protocol.Vote votes = 5;</code>
         */
        int getVotesCount();
        /**
         * <pre>
         * the votes
         * </pre>
         *
         * <code>repeated .protocol.Vote votes = 5;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.VoteOrBuilder>
        getVotesOrBuilderList();
        /**
         * <pre>
         * the votes
         * </pre>
         *
         * <code>repeated .protocol.Vote votes = 5;</code>
         */
        com.cryptowallet.crypto.Protocol.VoteOrBuilder getVotesOrBuilder(
                int index);

        /**
         * <pre>
         * the other asset owned by this account
         * </pre>
         *
         * <code>map&lt;string, int64&gt; asset = 6;</code>
         */
        int getAssetCount();
        /**
         * <pre>
         * the other asset owned by this account
         * </pre>
         *
         * <code>map&lt;string, int64&gt; asset = 6;</code>
         */
        boolean containsAsset(
                java.lang.String key);
        /**
         * Use {@link #getAssetMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.Long>
        getAsset();
        /**
         * <pre>
         * the other asset owned by this account
         * </pre>
         *
         * <code>map&lt;string, int64&gt; asset = 6;</code>
         */
        java.util.Map<java.lang.String, java.lang.Long>
        getAssetMap();
        /**
         * <pre>
         * the other asset owned by this account
         * </pre>
         *
         * <code>map&lt;string, int64&gt; asset = 6;</code>
         */

        long getAssetOrDefault(
                java.lang.String key,
                long defaultValue);
        /**
         * <pre>
         * the other asset owned by this account
         * </pre>
         *
         * <code>map&lt;string, int64&gt; asset = 6;</code>
         */

        long getAssetOrThrow(
                java.lang.String key);

        /**
         * <pre>
         * the frozen balance for bandwidth
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen>
        getFrozenList();
        /**
         * <pre>
         * the frozen balance for bandwidth
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
         */
        com.cryptowallet.crypto.Protocol.Account.Frozen getFrozen(int index);
        /**
         * <pre>
         * the frozen balance for bandwidth
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
         */
        int getFrozenCount();
        /**
         * <pre>
         * the frozen balance for bandwidth
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>
        getFrozenOrBuilderList();
        /**
         * <pre>
         * the frozen balance for bandwidth
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
         */
        com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder getFrozenOrBuilder(
                int index);

        /**
         * <pre>
         * bandwidth, get from frozen
         * </pre>
         *
         * <code>int64 net_usage = 8;</code>
         */
        long getNetUsage();

        /**
         * <pre>
         *Frozen balance provided by other accounts to this account
         * </pre>
         *
         * <code>int64 acquired_delegated_frozen_balance_for_bandwidth = 41;</code>
         */
        long getAcquiredDelegatedFrozenBalanceForBandwidth();

        /**
         * <pre>
         *Freeze and provide balances to other accounts
         * </pre>
         *
         * <code>int64 delegated_frozen_balance_for_bandwidth = 42;</code>
         */
        long getDelegatedFrozenBalanceForBandwidth();

        /**
         * <pre>
         * this account create time
         * </pre>
         *
         * <code>int64 create_time = 9;</code>
         */
        long getCreateTime();

        /**
         * <pre>
         * this last operation time, including transfer, voting and so on. //FIXME fix grammar
         * </pre>
         *
         * <code>int64 latest_opration_time = 10;</code>
         */
        long getLatestOprationTime();

        /**
         * <pre>
         * witness block producing allowance
         * </pre>
         *
         * <code>int64 allowance = 11;</code>
         */
        long getAllowance();

        /**
         * <pre>
         * last withdraw time
         * </pre>
         *
         * <code>int64 latest_withdraw_time = 12;</code>
         */
        long getLatestWithdrawTime();

        /**
         * <pre>
         * not used so far
         * </pre>
         *
         * <code>bytes code = 13;</code>
         */
        com.google.protobuf.ByteString getCode();

        /**
         * <code>bool is_witness = 14;</code>
         */
        boolean getIsWitness();

        /**
         * <code>bool is_committee = 15;</code>
         */
        boolean getIsCommittee();

        /**
         * <pre>
         * frozen asset(for asset issuer)
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen>
        getFrozenSupplyList();
        /**
         * <pre>
         * frozen asset(for asset issuer)
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
         */
        com.cryptowallet.crypto.Protocol.Account.Frozen getFrozenSupply(int index);
        /**
         * <pre>
         * frozen asset(for asset issuer)
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
         */
        int getFrozenSupplyCount();
        /**
         * <pre>
         * frozen asset(for asset issuer)
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>
        getFrozenSupplyOrBuilderList();
        /**
         * <pre>
         * frozen asset(for asset issuer)
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
         */
        com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder getFrozenSupplyOrBuilder(
                int index);

        /**
         * <pre>
         * asset_issued_name
         * </pre>
         *
         * <code>bytes asset_issued_name = 17;</code>
         */
        com.google.protobuf.ByteString getAssetIssuedName();

        /**
         * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
         */
        int getLatestAssetOperationTimeCount();
        /**
         * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
         */
        boolean containsLatestAssetOperationTime(
                java.lang.String key);
        /**
         * Use {@link #getLatestAssetOperationTimeMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.Long>
        getLatestAssetOperationTime();
        /**
         * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
         */
        java.util.Map<java.lang.String, java.lang.Long>
        getLatestAssetOperationTimeMap();
        /**
         * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
         */

        long getLatestAssetOperationTimeOrDefault(
                java.lang.String key,
                long defaultValue);
        /**
         * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
         */

        long getLatestAssetOperationTimeOrThrow(
                java.lang.String key);

        /**
         * <code>int64 free_net_usage = 19;</code>
         */
        long getFreeNetUsage();

        /**
         * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
         */
        int getFreeAssetNetUsageCount();
        /**
         * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
         */
        boolean containsFreeAssetNetUsage(
                java.lang.String key);
        /**
         * Use {@link #getFreeAssetNetUsageMap()} instead.
         */
        @java.lang.Deprecated
        java.util.Map<java.lang.String, java.lang.Long>
        getFreeAssetNetUsage();
        /**
         * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
         */
        java.util.Map<java.lang.String, java.lang.Long>
        getFreeAssetNetUsageMap();
        /**
         * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
         */

        long getFreeAssetNetUsageOrDefault(
                java.lang.String key,
                long defaultValue);
        /**
         * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
         */

        long getFreeAssetNetUsageOrThrow(
                java.lang.String key);

        /**
         * <code>int64 latest_consume_time = 21;</code>
         */
        long getLatestConsumeTime();

        /**
         * <code>int64 latest_consume_free_time = 22;</code>
         */
        long getLatestConsumeFreeTime();

        /**
         * <pre>
         * the identity of this account, case insensitive
         * </pre>
         *
         * <code>bytes account_id = 23;</code>
         */
        com.google.protobuf.ByteString getAccountId();

        /**
         * <code>.protocol.Account.AccountResource account_resource = 26;</code>
         */
        boolean hasAccountResource();
        /**
         * <code>.protocol.Account.AccountResource account_resource = 26;</code>
         */
        com.cryptowallet.crypto.Protocol.Account.AccountResource getAccountResource();
        /**
         * <code>.protocol.Account.AccountResource account_resource = 26;</code>
         */
        com.cryptowallet.crypto.Protocol.Account.AccountResourceOrBuilder getAccountResourceOrBuilder();

        /**
         * <code>bytes codeHash = 30;</code>
         */
        com.google.protobuf.ByteString getCodeHash();
    }
    /**
     * <pre>
     * Account
     * </pre>
     *
     * Protobuf type {@code protocol.Account}
     */
    public  static final class Account extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Account)
            AccountOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Account.newBuilder() to construct.
        private Account(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Account() {
            accountName_ = com.google.protobuf.ByteString.EMPTY;
            type_ = 0;
            address_ = com.google.protobuf.ByteString.EMPTY;
            balance_ = 0L;
            votes_ = java.util.Collections.emptyList();
            frozen_ = java.util.Collections.emptyList();
            netUsage_ = 0L;
            acquiredDelegatedFrozenBalanceForBandwidth_ = 0L;
            delegatedFrozenBalanceForBandwidth_ = 0L;
            createTime_ = 0L;
            latestOprationTime_ = 0L;
            allowance_ = 0L;
            latestWithdrawTime_ = 0L;
            code_ = com.google.protobuf.ByteString.EMPTY;
            isWitness_ = false;
            isCommittee_ = false;
            frozenSupply_ = java.util.Collections.emptyList();
            assetIssuedName_ = com.google.protobuf.ByteString.EMPTY;
            freeNetUsage_ = 0L;
            latestConsumeTime_ = 0L;
            latestConsumeFreeTime_ = 0L;
            accountId_ = com.google.protobuf.ByteString.EMPTY;
            codeHash_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Account(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {

                            accountName_ = input.readBytes();
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            type_ = rawValue;
                            break;
                        }
                        case 26: {

                            address_ = input.readBytes();
                            break;
                        }
                        case 32: {

                            balance_ = input.readInt64();
                            break;
                        }
                        case 42: {
                            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                                votes_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Vote>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            votes_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.Vote.parser(), extensionRegistry));
                            break;
                        }
                        case 50: {
                            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                                asset_ = com.google.protobuf.MapField.newMapField(
                                        AssetDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00000020;
                            }
                            com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
                                    asset__ = input.readMessage(
                                    AssetDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            asset_.getMutableMap().put(
                                    asset__.getKey(), asset__.getValue());
                            break;
                        }
                        case 58: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                frozen_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Account.Frozen>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            frozen_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.Account.Frozen.parser(), extensionRegistry));
                            break;
                        }
                        case 64: {

                            netUsage_ = input.readInt64();
                            break;
                        }
                        case 72: {

                            createTime_ = input.readInt64();
                            break;
                        }
                        case 80: {

                            latestOprationTime_ = input.readInt64();
                            break;
                        }
                        case 88: {

                            allowance_ = input.readInt64();
                            break;
                        }
                        case 96: {

                            latestWithdrawTime_ = input.readInt64();
                            break;
                        }
                        case 106: {

                            code_ = input.readBytes();
                            break;
                        }
                        case 112: {

                            isWitness_ = input.readBool();
                            break;
                        }
                        case 120: {

                            isCommittee_ = input.readBool();
                            break;
                        }
                        case 130: {
                            if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                                frozenSupply_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Account.Frozen>();
                                mutable_bitField0_ |= 0x00020000;
                            }
                            frozenSupply_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.Account.Frozen.parser(), extensionRegistry));
                            break;
                        }
                        case 138: {

                            assetIssuedName_ = input.readBytes();
                            break;
                        }
                        case 146: {
                            if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                                latestAssetOperationTime_ = com.google.protobuf.MapField.newMapField(
                                        LatestAssetOperationTimeDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00080000;
                            }
                            com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
                                    latestAssetOperationTime__ = input.readMessage(
                                    LatestAssetOperationTimeDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            latestAssetOperationTime_.getMutableMap().put(
                                    latestAssetOperationTime__.getKey(), latestAssetOperationTime__.getValue());
                            break;
                        }
                        case 152: {

                            freeNetUsage_ = input.readInt64();
                            break;
                        }
                        case 162: {
                            if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                                freeAssetNetUsage_ = com.google.protobuf.MapField.newMapField(
                                        FreeAssetNetUsageDefaultEntryHolder.defaultEntry);
                                mutable_bitField0_ |= 0x00200000;
                            }
                            com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
                                    freeAssetNetUsage__ = input.readMessage(
                                    FreeAssetNetUsageDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                            freeAssetNetUsage_.getMutableMap().put(
                                    freeAssetNetUsage__.getKey(), freeAssetNetUsage__.getValue());
                            break;
                        }
                        case 168: {

                            latestConsumeTime_ = input.readInt64();
                            break;
                        }
                        case 176: {

                            latestConsumeFreeTime_ = input.readInt64();
                            break;
                        }
                        case 186: {

                            accountId_ = input.readBytes();
                            break;
                        }
                        case 210: {
                            com.cryptowallet.crypto.Protocol.Account.AccountResource.Builder subBuilder = null;
                            if (accountResource_ != null) {
                                subBuilder = accountResource_.toBuilder();
                            }
                            accountResource_ = input.readMessage(com.cryptowallet.crypto.Protocol.Account.AccountResource.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(accountResource_);
                                accountResource_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 242: {

                            codeHash_ = input.readBytes();
                            break;
                        }
                        case 328: {

                            acquiredDelegatedFrozenBalanceForBandwidth_ = input.readInt64();
                            break;
                        }
                        case 336: {

                            delegatedFrozenBalanceForBandwidth_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    votes_ = java.util.Collections.unmodifiableList(votes_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    frozen_ = java.util.Collections.unmodifiableList(frozen_);
                }
                if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                    frozenSupply_ = java.util.Collections.unmodifiableList(frozenSupply_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
                int number) {
            switch (number) {
                case 6:
                    return internalGetAsset();
                case 18:
                    return internalGetLatestAssetOperationTime();
                case 20:
                    return internalGetFreeAssetNetUsage();
                default:
                    throw new RuntimeException(
                            "Invalid map field number: " + number);
            }
        }
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Account.class, com.cryptowallet.crypto.Protocol.Account.Builder.class);
        }

        public interface FrozenOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.Account.Frozen)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * the frozen trx balance
             * </pre>
             *
             * <code>int64 frozen_balance = 1;</code>
             */
            long getFrozenBalance();

            /**
             * <pre>
             * the expire time
             * </pre>
             *
             * <code>int64 expire_time = 2;</code>
             */
            long getExpireTime();
        }
        /**
         * <pre>
         * frozen balance
         * </pre>
         *
         * Protobuf type {@code protocol.Account.Frozen}
         */
        public  static final class Frozen extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.Account.Frozen)
                FrozenOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use Frozen.newBuilder() to construct.
            private Frozen(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private Frozen() {
                frozenBalance_ = 0L;
                expireTime_ = 0L;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private Frozen(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {

                                frozenBalance_ = input.readInt64();
                                break;
                            }
                            case 16: {

                                expireTime_ = input.readInt64();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_Frozen_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_Frozen_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Account.Frozen.class, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder.class);
            }

            public static final int FROZEN_BALANCE_FIELD_NUMBER = 1;
            private long frozenBalance_;
            /**
             * <pre>
             * the frozen trx balance
             * </pre>
             *
             * <code>int64 frozen_balance = 1;</code>
             */
            public long getFrozenBalance() {
                return frozenBalance_;
            }

            public static final int EXPIRE_TIME_FIELD_NUMBER = 2;
            private long expireTime_;
            /**
             * <pre>
             * the expire time
             * </pre>
             *
             * <code>int64 expire_time = 2;</code>
             */
            public long getExpireTime() {
                return expireTime_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (frozenBalance_ != 0L) {
                    output.writeInt64(1, frozenBalance_);
                }
                if (expireTime_ != 0L) {
                    output.writeInt64(2, expireTime_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (frozenBalance_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(1, frozenBalance_);
                }
                if (expireTime_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(2, expireTime_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.Account.Frozen)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.Account.Frozen other = (com.cryptowallet.crypto.Protocol.Account.Frozen) obj;

                boolean result = true;
                result = result && (getFrozenBalance()
                        == other.getFrozenBalance());
                result = result && (getExpireTime()
                        == other.getExpireTime());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + FROZEN_BALANCE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getFrozenBalance());
                hash = (37 * hash) + EXPIRE_TIME_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getExpireTime());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Account.Frozen parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Account.Frozen prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * <pre>
             * frozen balance
             * </pre>
             *
             * Protobuf type {@code protocol.Account.Frozen}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.Account.Frozen)
                    com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_Frozen_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_Frozen_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.Account.Frozen.class, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.Account.Frozen.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    frozenBalance_ = 0L;

                    expireTime_ = 0L;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_Frozen_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.Account.Frozen getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.Account.Frozen.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.Account.Frozen build() {
                    com.cryptowallet.crypto.Protocol.Account.Frozen result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.Account.Frozen buildPartial() {
                    com.cryptowallet.crypto.Protocol.Account.Frozen result = new com.cryptowallet.crypto.Protocol.Account.Frozen(this);
                    result.frozenBalance_ = frozenBalance_;
                    result.expireTime_ = expireTime_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.Account.Frozen) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.Account.Frozen)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Account.Frozen other) {
                    if (other == com.cryptowallet.crypto.Protocol.Account.Frozen.getDefaultInstance()) return this;
                    if (other.getFrozenBalance() != 0L) {
                        setFrozenBalance(other.getFrozenBalance());
                    }
                    if (other.getExpireTime() != 0L) {
                        setExpireTime(other.getExpireTime());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.Account.Frozen parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.Account.Frozen) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private long frozenBalance_ ;
                /**
                 * <pre>
                 * the frozen trx balance
                 * </pre>
                 *
                 * <code>int64 frozen_balance = 1;</code>
                 */
                public long getFrozenBalance() {
                    return frozenBalance_;
                }
                /**
                 * <pre>
                 * the frozen trx balance
                 * </pre>
                 *
                 * <code>int64 frozen_balance = 1;</code>
                 */
                public Builder setFrozenBalance(long value) {

                    frozenBalance_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 * the frozen trx balance
                 * </pre>
                 *
                 * <code>int64 frozen_balance = 1;</code>
                 */
                public Builder clearFrozenBalance() {

                    frozenBalance_ = 0L;
                    onChanged();
                    return this;
                }

                private long expireTime_ ;
                /**
                 * <pre>
                 * the expire time
                 * </pre>
                 *
                 * <code>int64 expire_time = 2;</code>
                 */
                public long getExpireTime() {
                    return expireTime_;
                }
                /**
                 * <pre>
                 * the expire time
                 * </pre>
                 *
                 * <code>int64 expire_time = 2;</code>
                 */
                public Builder setExpireTime(long value) {

                    expireTime_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 * the expire time
                 * </pre>
                 *
                 * <code>int64 expire_time = 2;</code>
                 */
                public Builder clearExpireTime() {

                    expireTime_ = 0L;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.Account.Frozen)
            }

            // @@protoc_insertion_point(class_scope:protocol.Account.Frozen)
            private static final com.cryptowallet.crypto.Protocol.Account.Frozen DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Account.Frozen();
            }

            public static com.cryptowallet.crypto.Protocol.Account.Frozen getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<Frozen>
                    PARSER = new com.google.protobuf.AbstractParser<Frozen>() {
                public Frozen parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Frozen(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<Frozen> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<Frozen> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.Account.Frozen getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        public interface AccountResourceOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.Account.AccountResource)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * energy resource, get from frozen
             * </pre>
             *
             * <code>int64 energy_usage = 1;</code>
             */
            long getEnergyUsage();

            /**
             * <pre>
             * the frozen balance for energy
             * </pre>
             *
             * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
             */
            boolean hasFrozenBalanceForEnergy();
            /**
             * <pre>
             * the frozen balance for energy
             * </pre>
             *
             * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
             */
            com.cryptowallet.crypto.Protocol.Account.Frozen getFrozenBalanceForEnergy();
            /**
             * <pre>
             * the frozen balance for energy
             * </pre>
             *
             * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
             */
            com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder getFrozenBalanceForEnergyOrBuilder();

            /**
             * <code>int64 latest_consume_time_for_energy = 3;</code>
             */
            long getLatestConsumeTimeForEnergy();

            /**
             * <pre>
             *Frozen balance provided by other accounts to this account
             * </pre>
             *
             * <code>int64 acquired_delegated_frozen_balance_for_energy = 4;</code>
             */
            long getAcquiredDelegatedFrozenBalanceForEnergy();

            /**
             * <pre>
             *Frozen balances provided to other accounts
             * </pre>
             *
             * <code>int64 delegated_frozen_balance_for_energy = 5;</code>
             */
            long getDelegatedFrozenBalanceForEnergy();

            /**
             * <pre>
             * storage resource, get from market
             * </pre>
             *
             * <code>int64 storage_limit = 6;</code>
             */
            long getStorageLimit();

            /**
             * <code>int64 storage_usage = 7;</code>
             */
            long getStorageUsage();

            /**
             * <code>int64 latest_exchange_storage_time = 8;</code>
             */
            long getLatestExchangeStorageTime();
        }
        /**
         * Protobuf type {@code protocol.Account.AccountResource}
         */
        public  static final class AccountResource extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.Account.AccountResource)
                AccountResourceOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use AccountResource.newBuilder() to construct.
            private AccountResource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private AccountResource() {
                energyUsage_ = 0L;
                latestConsumeTimeForEnergy_ = 0L;
                acquiredDelegatedFrozenBalanceForEnergy_ = 0L;
                delegatedFrozenBalanceForEnergy_ = 0L;
                storageLimit_ = 0L;
                storageUsage_ = 0L;
                latestExchangeStorageTime_ = 0L;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private AccountResource(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {

                                energyUsage_ = input.readInt64();
                                break;
                            }
                            case 18: {
                                com.cryptowallet.crypto.Protocol.Account.Frozen.Builder subBuilder = null;
                                if (frozenBalanceForEnergy_ != null) {
                                    subBuilder = frozenBalanceForEnergy_.toBuilder();
                                }
                                frozenBalanceForEnergy_ = input.readMessage(com.cryptowallet.crypto.Protocol.Account.Frozen.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(frozenBalanceForEnergy_);
                                    frozenBalanceForEnergy_ = subBuilder.buildPartial();
                                }

                                break;
                            }
                            case 24: {

                                latestConsumeTimeForEnergy_ = input.readInt64();
                                break;
                            }
                            case 32: {

                                acquiredDelegatedFrozenBalanceForEnergy_ = input.readInt64();
                                break;
                            }
                            case 40: {

                                delegatedFrozenBalanceForEnergy_ = input.readInt64();
                                break;
                            }
                            case 48: {

                                storageLimit_ = input.readInt64();
                                break;
                            }
                            case 56: {

                                storageUsage_ = input.readInt64();
                                break;
                            }
                            case 64: {

                                latestExchangeStorageTime_ = input.readInt64();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_AccountResource_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_AccountResource_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Account.AccountResource.class, com.cryptowallet.crypto.Protocol.Account.AccountResource.Builder.class);
            }

            public static final int ENERGY_USAGE_FIELD_NUMBER = 1;
            private long energyUsage_;
            /**
             * <pre>
             * energy resource, get from frozen
             * </pre>
             *
             * <code>int64 energy_usage = 1;</code>
             */
            public long getEnergyUsage() {
                return energyUsage_;
            }

            public static final int FROZEN_BALANCE_FOR_ENERGY_FIELD_NUMBER = 2;
            private com.cryptowallet.crypto.Protocol.Account.Frozen frozenBalanceForEnergy_;
            /**
             * <pre>
             * the frozen balance for energy
             * </pre>
             *
             * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
             */
            public boolean hasFrozenBalanceForEnergy() {
                return frozenBalanceForEnergy_ != null;
            }
            /**
             * <pre>
             * the frozen balance for energy
             * </pre>
             *
             * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.Frozen getFrozenBalanceForEnergy() {
                return frozenBalanceForEnergy_ == null ? com.cryptowallet.crypto.Protocol.Account.Frozen.getDefaultInstance() : frozenBalanceForEnergy_;
            }
            /**
             * <pre>
             * the frozen balance for energy
             * </pre>
             *
             * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder getFrozenBalanceForEnergyOrBuilder() {
                return getFrozenBalanceForEnergy();
            }

            public static final int LATEST_CONSUME_TIME_FOR_ENERGY_FIELD_NUMBER = 3;
            private long latestConsumeTimeForEnergy_;
            /**
             * <code>int64 latest_consume_time_for_energy = 3;</code>
             */
            public long getLatestConsumeTimeForEnergy() {
                return latestConsumeTimeForEnergy_;
            }

            public static final int ACQUIRED_DELEGATED_FROZEN_BALANCE_FOR_ENERGY_FIELD_NUMBER = 4;
            private long acquiredDelegatedFrozenBalanceForEnergy_;
            /**
             * <pre>
             *Frozen balance provided by other accounts to this account
             * </pre>
             *
             * <code>int64 acquired_delegated_frozen_balance_for_energy = 4;</code>
             */
            public long getAcquiredDelegatedFrozenBalanceForEnergy() {
                return acquiredDelegatedFrozenBalanceForEnergy_;
            }

            public static final int DELEGATED_FROZEN_BALANCE_FOR_ENERGY_FIELD_NUMBER = 5;
            private long delegatedFrozenBalanceForEnergy_;
            /**
             * <pre>
             *Frozen balances provided to other accounts
             * </pre>
             *
             * <code>int64 delegated_frozen_balance_for_energy = 5;</code>
             */
            public long getDelegatedFrozenBalanceForEnergy() {
                return delegatedFrozenBalanceForEnergy_;
            }

            public static final int STORAGE_LIMIT_FIELD_NUMBER = 6;
            private long storageLimit_;
            /**
             * <pre>
             * storage resource, get from market
             * </pre>
             *
             * <code>int64 storage_limit = 6;</code>
             */
            public long getStorageLimit() {
                return storageLimit_;
            }

            public static final int STORAGE_USAGE_FIELD_NUMBER = 7;
            private long storageUsage_;
            /**
             * <code>int64 storage_usage = 7;</code>
             */
            public long getStorageUsage() {
                return storageUsage_;
            }

            public static final int LATEST_EXCHANGE_STORAGE_TIME_FIELD_NUMBER = 8;
            private long latestExchangeStorageTime_;
            /**
             * <code>int64 latest_exchange_storage_time = 8;</code>
             */
            public long getLatestExchangeStorageTime() {
                return latestExchangeStorageTime_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (energyUsage_ != 0L) {
                    output.writeInt64(1, energyUsage_);
                }
                if (frozenBalanceForEnergy_ != null) {
                    output.writeMessage(2, getFrozenBalanceForEnergy());
                }
                if (latestConsumeTimeForEnergy_ != 0L) {
                    output.writeInt64(3, latestConsumeTimeForEnergy_);
                }
                if (acquiredDelegatedFrozenBalanceForEnergy_ != 0L) {
                    output.writeInt64(4, acquiredDelegatedFrozenBalanceForEnergy_);
                }
                if (delegatedFrozenBalanceForEnergy_ != 0L) {
                    output.writeInt64(5, delegatedFrozenBalanceForEnergy_);
                }
                if (storageLimit_ != 0L) {
                    output.writeInt64(6, storageLimit_);
                }
                if (storageUsage_ != 0L) {
                    output.writeInt64(7, storageUsage_);
                }
                if (latestExchangeStorageTime_ != 0L) {
                    output.writeInt64(8, latestExchangeStorageTime_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (energyUsage_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(1, energyUsage_);
                }
                if (frozenBalanceForEnergy_ != null) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(2, getFrozenBalanceForEnergy());
                }
                if (latestConsumeTimeForEnergy_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(3, latestConsumeTimeForEnergy_);
                }
                if (acquiredDelegatedFrozenBalanceForEnergy_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(4, acquiredDelegatedFrozenBalanceForEnergy_);
                }
                if (delegatedFrozenBalanceForEnergy_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(5, delegatedFrozenBalanceForEnergy_);
                }
                if (storageLimit_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(6, storageLimit_);
                }
                if (storageUsage_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(7, storageUsage_);
                }
                if (latestExchangeStorageTime_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(8, latestExchangeStorageTime_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.Account.AccountResource)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.Account.AccountResource other = (com.cryptowallet.crypto.Protocol.Account.AccountResource) obj;

                boolean result = true;
                result = result && (getEnergyUsage()
                        == other.getEnergyUsage());
                result = result && (hasFrozenBalanceForEnergy() == other.hasFrozenBalanceForEnergy());
                if (hasFrozenBalanceForEnergy()) {
                    result = result && getFrozenBalanceForEnergy()
                            .equals(other.getFrozenBalanceForEnergy());
                }
                result = result && (getLatestConsumeTimeForEnergy()
                        == other.getLatestConsumeTimeForEnergy());
                result = result && (getAcquiredDelegatedFrozenBalanceForEnergy()
                        == other.getAcquiredDelegatedFrozenBalanceForEnergy());
                result = result && (getDelegatedFrozenBalanceForEnergy()
                        == other.getDelegatedFrozenBalanceForEnergy());
                result = result && (getStorageLimit()
                        == other.getStorageLimit());
                result = result && (getStorageUsage()
                        == other.getStorageUsage());
                result = result && (getLatestExchangeStorageTime()
                        == other.getLatestExchangeStorageTime());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + ENERGY_USAGE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getEnergyUsage());
                if (hasFrozenBalanceForEnergy()) {
                    hash = (37 * hash) + FROZEN_BALANCE_FOR_ENERGY_FIELD_NUMBER;
                    hash = (53 * hash) + getFrozenBalanceForEnergy().hashCode();
                }
                hash = (37 * hash) + LATEST_CONSUME_TIME_FOR_ENERGY_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLatestConsumeTimeForEnergy());
                hash = (37 * hash) + ACQUIRED_DELEGATED_FROZEN_BALANCE_FOR_ENERGY_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getAcquiredDelegatedFrozenBalanceForEnergy());
                hash = (37 * hash) + DELEGATED_FROZEN_BALANCE_FOR_ENERGY_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getDelegatedFrozenBalanceForEnergy());
                hash = (37 * hash) + STORAGE_LIMIT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getStorageLimit());
                hash = (37 * hash) + STORAGE_USAGE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getStorageUsage());
                hash = (37 * hash) + LATEST_EXCHANGE_STORAGE_TIME_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getLatestExchangeStorageTime());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Account.AccountResource parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Account.AccountResource prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.Account.AccountResource}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.Account.AccountResource)
                    com.cryptowallet.crypto.Protocol.Account.AccountResourceOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_AccountResource_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_AccountResource_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.Account.AccountResource.class, com.cryptowallet.crypto.Protocol.Account.AccountResource.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.Account.AccountResource.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    energyUsage_ = 0L;

                    if (frozenBalanceForEnergyBuilder_ == null) {
                        frozenBalanceForEnergy_ = null;
                    } else {
                        frozenBalanceForEnergy_ = null;
                        frozenBalanceForEnergyBuilder_ = null;
                    }
                    latestConsumeTimeForEnergy_ = 0L;

                    acquiredDelegatedFrozenBalanceForEnergy_ = 0L;

                    delegatedFrozenBalanceForEnergy_ = 0L;

                    storageLimit_ = 0L;

                    storageUsage_ = 0L;

                    latestExchangeStorageTime_ = 0L;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_AccountResource_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.Account.AccountResource getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.Account.AccountResource.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.Account.AccountResource build() {
                    com.cryptowallet.crypto.Protocol.Account.AccountResource result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.Account.AccountResource buildPartial() {
                    com.cryptowallet.crypto.Protocol.Account.AccountResource result = new com.cryptowallet.crypto.Protocol.Account.AccountResource(this);
                    result.energyUsage_ = energyUsage_;
                    if (frozenBalanceForEnergyBuilder_ == null) {
                        result.frozenBalanceForEnergy_ = frozenBalanceForEnergy_;
                    } else {
                        result.frozenBalanceForEnergy_ = frozenBalanceForEnergyBuilder_.build();
                    }
                    result.latestConsumeTimeForEnergy_ = latestConsumeTimeForEnergy_;
                    result.acquiredDelegatedFrozenBalanceForEnergy_ = acquiredDelegatedFrozenBalanceForEnergy_;
                    result.delegatedFrozenBalanceForEnergy_ = delegatedFrozenBalanceForEnergy_;
                    result.storageLimit_ = storageLimit_;
                    result.storageUsage_ = storageUsage_;
                    result.latestExchangeStorageTime_ = latestExchangeStorageTime_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.Account.AccountResource) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.Account.AccountResource)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Account.AccountResource other) {
                    if (other == com.cryptowallet.crypto.Protocol.Account.AccountResource.getDefaultInstance()) return this;
                    if (other.getEnergyUsage() != 0L) {
                        setEnergyUsage(other.getEnergyUsage());
                    }
                    if (other.hasFrozenBalanceForEnergy()) {
                        mergeFrozenBalanceForEnergy(other.getFrozenBalanceForEnergy());
                    }
                    if (other.getLatestConsumeTimeForEnergy() != 0L) {
                        setLatestConsumeTimeForEnergy(other.getLatestConsumeTimeForEnergy());
                    }
                    if (other.getAcquiredDelegatedFrozenBalanceForEnergy() != 0L) {
                        setAcquiredDelegatedFrozenBalanceForEnergy(other.getAcquiredDelegatedFrozenBalanceForEnergy());
                    }
                    if (other.getDelegatedFrozenBalanceForEnergy() != 0L) {
                        setDelegatedFrozenBalanceForEnergy(other.getDelegatedFrozenBalanceForEnergy());
                    }
                    if (other.getStorageLimit() != 0L) {
                        setStorageLimit(other.getStorageLimit());
                    }
                    if (other.getStorageUsage() != 0L) {
                        setStorageUsage(other.getStorageUsage());
                    }
                    if (other.getLatestExchangeStorageTime() != 0L) {
                        setLatestExchangeStorageTime(other.getLatestExchangeStorageTime());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.Account.AccountResource parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.Account.AccountResource) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private long energyUsage_ ;
                /**
                 * <pre>
                 * energy resource, get from frozen
                 * </pre>
                 *
                 * <code>int64 energy_usage = 1;</code>
                 */
                public long getEnergyUsage() {
                    return energyUsage_;
                }
                /**
                 * <pre>
                 * energy resource, get from frozen
                 * </pre>
                 *
                 * <code>int64 energy_usage = 1;</code>
                 */
                public Builder setEnergyUsage(long value) {

                    energyUsage_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 * energy resource, get from frozen
                 * </pre>
                 *
                 * <code>int64 energy_usage = 1;</code>
                 */
                public Builder clearEnergyUsage() {

                    energyUsage_ = 0L;
                    onChanged();
                    return this;
                }

                private com.cryptowallet.crypto.Protocol.Account.Frozen frozenBalanceForEnergy_ = null;
                private com.google.protobuf.SingleFieldBuilderV3<
                        com.cryptowallet.crypto.Protocol.Account.Frozen, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder, com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder> frozenBalanceForEnergyBuilder_;
                /**
                 * <pre>
                 * the frozen balance for energy
                 * </pre>
                 *
                 * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
                 */
                public boolean hasFrozenBalanceForEnergy() {
                    return frozenBalanceForEnergyBuilder_ != null || frozenBalanceForEnergy_ != null;
                }
                /**
                 * <pre>
                 * the frozen balance for energy
                 * </pre>
                 *
                 * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Account.Frozen getFrozenBalanceForEnergy() {
                    if (frozenBalanceForEnergyBuilder_ == null) {
                        return frozenBalanceForEnergy_ == null ? com.cryptowallet.crypto.Protocol.Account.Frozen.getDefaultInstance() : frozenBalanceForEnergy_;
                    } else {
                        return frozenBalanceForEnergyBuilder_.getMessage();
                    }
                }
                /**
                 * <pre>
                 * the frozen balance for energy
                 * </pre>
                 *
                 * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
                 */
                public Builder setFrozenBalanceForEnergy(com.cryptowallet.crypto.Protocol.Account.Frozen value) {
                    if (frozenBalanceForEnergyBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        frozenBalanceForEnergy_ = value;
                        onChanged();
                    } else {
                        frozenBalanceForEnergyBuilder_.setMessage(value);
                    }

                    return this;
                }
                /**
                 * <pre>
                 * the frozen balance for energy
                 * </pre>
                 *
                 * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
                 */
                public Builder setFrozenBalanceForEnergy(
                        com.cryptowallet.crypto.Protocol.Account.Frozen.Builder builderForValue) {
                    if (frozenBalanceForEnergyBuilder_ == null) {
                        frozenBalanceForEnergy_ = builderForValue.build();
                        onChanged();
                    } else {
                        frozenBalanceForEnergyBuilder_.setMessage(builderForValue.build());
                    }

                    return this;
                }
                /**
                 * <pre>
                 * the frozen balance for energy
                 * </pre>
                 *
                 * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
                 */
                public Builder mergeFrozenBalanceForEnergy(com.cryptowallet.crypto.Protocol.Account.Frozen value) {
                    if (frozenBalanceForEnergyBuilder_ == null) {
                        if (frozenBalanceForEnergy_ != null) {
                            frozenBalanceForEnergy_ =
                                    com.cryptowallet.crypto.Protocol.Account.Frozen.newBuilder(frozenBalanceForEnergy_).mergeFrom(value).buildPartial();
                        } else {
                            frozenBalanceForEnergy_ = value;
                        }
                        onChanged();
                    } else {
                        frozenBalanceForEnergyBuilder_.mergeFrom(value);
                    }

                    return this;
                }
                /**
                 * <pre>
                 * the frozen balance for energy
                 * </pre>
                 *
                 * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
                 */
                public Builder clearFrozenBalanceForEnergy() {
                    if (frozenBalanceForEnergyBuilder_ == null) {
                        frozenBalanceForEnergy_ = null;
                        onChanged();
                    } else {
                        frozenBalanceForEnergy_ = null;
                        frozenBalanceForEnergyBuilder_ = null;
                    }

                    return this;
                }
                /**
                 * <pre>
                 * the frozen balance for energy
                 * </pre>
                 *
                 * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Account.Frozen.Builder getFrozenBalanceForEnergyBuilder() {

                    onChanged();
                    return getFrozenBalanceForEnergyFieldBuilder().getBuilder();
                }
                /**
                 * <pre>
                 * the frozen balance for energy
                 * </pre>
                 *
                 * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder getFrozenBalanceForEnergyOrBuilder() {
                    if (frozenBalanceForEnergyBuilder_ != null) {
                        return frozenBalanceForEnergyBuilder_.getMessageOrBuilder();
                    } else {
                        return frozenBalanceForEnergy_ == null ?
                                com.cryptowallet.crypto.Protocol.Account.Frozen.getDefaultInstance() : frozenBalanceForEnergy_;
                    }
                }
                /**
                 * <pre>
                 * the frozen balance for energy
                 * </pre>
                 *
                 * <code>.protocol.Account.Frozen frozen_balance_for_energy = 2;</code>
                 */
                private com.google.protobuf.SingleFieldBuilderV3<
                        com.cryptowallet.crypto.Protocol.Account.Frozen, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder, com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>
                getFrozenBalanceForEnergyFieldBuilder() {
                    if (frozenBalanceForEnergyBuilder_ == null) {
                        frozenBalanceForEnergyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                                com.cryptowallet.crypto.Protocol.Account.Frozen, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder, com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>(
                                getFrozenBalanceForEnergy(),
                                getParentForChildren(),
                                isClean());
                        frozenBalanceForEnergy_ = null;
                    }
                    return frozenBalanceForEnergyBuilder_;
                }

                private long latestConsumeTimeForEnergy_ ;
                /**
                 * <code>int64 latest_consume_time_for_energy = 3;</code>
                 */
                public long getLatestConsumeTimeForEnergy() {
                    return latestConsumeTimeForEnergy_;
                }
                /**
                 * <code>int64 latest_consume_time_for_energy = 3;</code>
                 */
                public Builder setLatestConsumeTimeForEnergy(long value) {

                    latestConsumeTimeForEnergy_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 latest_consume_time_for_energy = 3;</code>
                 */
                public Builder clearLatestConsumeTimeForEnergy() {

                    latestConsumeTimeForEnergy_ = 0L;
                    onChanged();
                    return this;
                }

                private long acquiredDelegatedFrozenBalanceForEnergy_ ;
                /**
                 * <pre>
                 *Frozen balance provided by other accounts to this account
                 * </pre>
                 *
                 * <code>int64 acquired_delegated_frozen_balance_for_energy = 4;</code>
                 */
                public long getAcquiredDelegatedFrozenBalanceForEnergy() {
                    return acquiredDelegatedFrozenBalanceForEnergy_;
                }
                /**
                 * <pre>
                 *Frozen balance provided by other accounts to this account
                 * </pre>
                 *
                 * <code>int64 acquired_delegated_frozen_balance_for_energy = 4;</code>
                 */
                public Builder setAcquiredDelegatedFrozenBalanceForEnergy(long value) {

                    acquiredDelegatedFrozenBalanceForEnergy_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *Frozen balance provided by other accounts to this account
                 * </pre>
                 *
                 * <code>int64 acquired_delegated_frozen_balance_for_energy = 4;</code>
                 */
                public Builder clearAcquiredDelegatedFrozenBalanceForEnergy() {

                    acquiredDelegatedFrozenBalanceForEnergy_ = 0L;
                    onChanged();
                    return this;
                }

                private long delegatedFrozenBalanceForEnergy_ ;
                /**
                 * <pre>
                 *Frozen balances provided to other accounts
                 * </pre>
                 *
                 * <code>int64 delegated_frozen_balance_for_energy = 5;</code>
                 */
                public long getDelegatedFrozenBalanceForEnergy() {
                    return delegatedFrozenBalanceForEnergy_;
                }
                /**
                 * <pre>
                 *Frozen balances provided to other accounts
                 * </pre>
                 *
                 * <code>int64 delegated_frozen_balance_for_energy = 5;</code>
                 */
                public Builder setDelegatedFrozenBalanceForEnergy(long value) {

                    delegatedFrozenBalanceForEnergy_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *Frozen balances provided to other accounts
                 * </pre>
                 *
                 * <code>int64 delegated_frozen_balance_for_energy = 5;</code>
                 */
                public Builder clearDelegatedFrozenBalanceForEnergy() {

                    delegatedFrozenBalanceForEnergy_ = 0L;
                    onChanged();
                    return this;
                }

                private long storageLimit_ ;
                /**
                 * <pre>
                 * storage resource, get from market
                 * </pre>
                 *
                 * <code>int64 storage_limit = 6;</code>
                 */
                public long getStorageLimit() {
                    return storageLimit_;
                }
                /**
                 * <pre>
                 * storage resource, get from market
                 * </pre>
                 *
                 * <code>int64 storage_limit = 6;</code>
                 */
                public Builder setStorageLimit(long value) {

                    storageLimit_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 * storage resource, get from market
                 * </pre>
                 *
                 * <code>int64 storage_limit = 6;</code>
                 */
                public Builder clearStorageLimit() {

                    storageLimit_ = 0L;
                    onChanged();
                    return this;
                }

                private long storageUsage_ ;
                /**
                 * <code>int64 storage_usage = 7;</code>
                 */
                public long getStorageUsage() {
                    return storageUsage_;
                }
                /**
                 * <code>int64 storage_usage = 7;</code>
                 */
                public Builder setStorageUsage(long value) {

                    storageUsage_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 storage_usage = 7;</code>
                 */
                public Builder clearStorageUsage() {

                    storageUsage_ = 0L;
                    onChanged();
                    return this;
                }

                private long latestExchangeStorageTime_ ;
                /**
                 * <code>int64 latest_exchange_storage_time = 8;</code>
                 */
                public long getLatestExchangeStorageTime() {
                    return latestExchangeStorageTime_;
                }
                /**
                 * <code>int64 latest_exchange_storage_time = 8;</code>
                 */
                public Builder setLatestExchangeStorageTime(long value) {

                    latestExchangeStorageTime_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 latest_exchange_storage_time = 8;</code>
                 */
                public Builder clearLatestExchangeStorageTime() {

                    latestExchangeStorageTime_ = 0L;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.Account.AccountResource)
            }

            // @@protoc_insertion_point(class_scope:protocol.Account.AccountResource)
            private static final com.cryptowallet.crypto.Protocol.Account.AccountResource DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Account.AccountResource();
            }

            public static com.cryptowallet.crypto.Protocol.Account.AccountResource getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<AccountResource>
                    PARSER = new com.google.protobuf.AbstractParser<AccountResource>() {
                public AccountResource parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new AccountResource(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<AccountResource> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<AccountResource> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.Account.AccountResource getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int ACCOUNT_NAME_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString accountName_;
        /**
         * <pre>
         * account nick name
         * </pre>
         *
         * <code>bytes account_name = 1;</code>
         */
        public com.google.protobuf.ByteString getAccountName() {
            return accountName_;
        }

        public static final int TYPE_FIELD_NUMBER = 2;
        private int type_;
        /**
         * <code>.protocol.AccountType type = 2;</code>
         */
        public int getTypeValue() {
            return type_;
        }
        /**
         * <code>.protocol.AccountType type = 2;</code>
         */
        public com.cryptowallet.crypto.Protocol.AccountType getType() {
            com.cryptowallet.crypto.Protocol.AccountType result = com.cryptowallet.crypto.Protocol.AccountType.valueOf(type_);
            return result == null ? com.cryptowallet.crypto.Protocol.AccountType.UNRECOGNIZED : result;
        }

        public static final int ADDRESS_FIELD_NUMBER = 3;
        private com.google.protobuf.ByteString address_;
        /**
         * <pre>
         * the create address
         * </pre>
         *
         * <code>bytes address = 3;</code>
         */
        public com.google.protobuf.ByteString getAddress() {
            return address_;
        }

        public static final int BALANCE_FIELD_NUMBER = 4;
        private long balance_;
        /**
         * <pre>
         * the trx balance
         * </pre>
         *
         * <code>int64 balance = 4;</code>
         */
        public long getBalance() {
            return balance_;
        }

        public static final int VOTES_FIELD_NUMBER = 5;
        private java.util.List<com.cryptowallet.crypto.Protocol.Vote> votes_;
        /**
         * <pre>
         * the votes
         * </pre>
         *
         * <code>repeated .protocol.Vote votes = 5;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.Vote> getVotesList() {
            return votes_;
        }
        /**
         * <pre>
         * the votes
         * </pre>
         *
         * <code>repeated .protocol.Vote votes = 5;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.VoteOrBuilder>
        getVotesOrBuilderList() {
            return votes_;
        }
        /**
         * <pre>
         * the votes
         * </pre>
         *
         * <code>repeated .protocol.Vote votes = 5;</code>
         */
        public int getVotesCount() {
            return votes_.size();
        }
        /**
         * <pre>
         * the votes
         * </pre>
         *
         * <code>repeated .protocol.Vote votes = 5;</code>
         */
        public com.cryptowallet.crypto.Protocol.Vote getVotes(int index) {
            return votes_.get(index);
        }
        /**
         * <pre>
         * the votes
         * </pre>
         *
         * <code>repeated .protocol.Vote votes = 5;</code>
         */
        public com.cryptowallet.crypto.Protocol.VoteOrBuilder getVotesOrBuilder(
                int index) {
            return votes_.get(index);
        }

        public static final int ASSET_FIELD_NUMBER = 6;
        private static final class AssetDefaultEntryHolder {
            static final com.google.protobuf.MapEntry<
                    java.lang.String, java.lang.Long> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<java.lang.String, java.lang.Long>newDefaultInstance(
                                    com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_AssetEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.INT64,
                                    0L);
        }
        private com.google.protobuf.MapField<
                java.lang.String, java.lang.Long> asset_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
        internalGetAsset() {
            if (asset_ == null) {
                return com.google.protobuf.MapField.emptyMapField(
                        AssetDefaultEntryHolder.defaultEntry);
            }
            return asset_;
        }

        public int getAssetCount() {
            return internalGetAsset().getMap().size();
        }
        /**
         * <pre>
         * the other asset owned by this account
         * </pre>
         *
         * <code>map&lt;string, int64&gt; asset = 6;</code>
         */

        public boolean containsAsset(
                java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetAsset().getMap().containsKey(key);
        }
        /**
         * Use {@link #getAssetMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Long> getAsset() {
            return getAssetMap();
        }
        /**
         * <pre>
         * the other asset owned by this account
         * </pre>
         *
         * <code>map&lt;string, int64&gt; asset = 6;</code>
         */

        public java.util.Map<java.lang.String, java.lang.Long> getAssetMap() {
            return internalGetAsset().getMap();
        }
        /**
         * <pre>
         * the other asset owned by this account
         * </pre>
         *
         * <code>map&lt;string, int64&gt; asset = 6;</code>
         */

        public long getAssetOrDefault(
                java.lang.String key,
                long defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.Long> map =
                    internalGetAsset().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         * the other asset owned by this account
         * </pre>
         *
         * <code>map&lt;string, int64&gt; asset = 6;</code>
         */

        public long getAssetOrThrow(
                java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.Long> map =
                    internalGetAsset().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        public static final int FROZEN_FIELD_NUMBER = 7;
        private java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen> frozen_;
        /**
         * <pre>
         * the frozen balance for bandwidth
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen> getFrozenList() {
            return frozen_;
        }
        /**
         * <pre>
         * the frozen balance for bandwidth
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>
        getFrozenOrBuilderList() {
            return frozen_;
        }
        /**
         * <pre>
         * the frozen balance for bandwidth
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
         */
        public int getFrozenCount() {
            return frozen_.size();
        }
        /**
         * <pre>
         * the frozen balance for bandwidth
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
         */
        public com.cryptowallet.crypto.Protocol.Account.Frozen getFrozen(int index) {
            return frozen_.get(index);
        }
        /**
         * <pre>
         * the frozen balance for bandwidth
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
         */
        public com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder getFrozenOrBuilder(
                int index) {
            return frozen_.get(index);
        }

        public static final int NET_USAGE_FIELD_NUMBER = 8;
        private long netUsage_;
        /**
         * <pre>
         * bandwidth, get from frozen
         * </pre>
         *
         * <code>int64 net_usage = 8;</code>
         */
        public long getNetUsage() {
            return netUsage_;
        }

        public static final int ACQUIRED_DELEGATED_FROZEN_BALANCE_FOR_BANDWIDTH_FIELD_NUMBER = 41;
        private long acquiredDelegatedFrozenBalanceForBandwidth_;
        /**
         * <pre>
         *Frozen balance provided by other accounts to this account
         * </pre>
         *
         * <code>int64 acquired_delegated_frozen_balance_for_bandwidth = 41;</code>
         */
        public long getAcquiredDelegatedFrozenBalanceForBandwidth() {
            return acquiredDelegatedFrozenBalanceForBandwidth_;
        }

        public static final int DELEGATED_FROZEN_BALANCE_FOR_BANDWIDTH_FIELD_NUMBER = 42;
        private long delegatedFrozenBalanceForBandwidth_;
        /**
         * <pre>
         *Freeze and provide balances to other accounts
         * </pre>
         *
         * <code>int64 delegated_frozen_balance_for_bandwidth = 42;</code>
         */
        public long getDelegatedFrozenBalanceForBandwidth() {
            return delegatedFrozenBalanceForBandwidth_;
        }

        public static final int CREATE_TIME_FIELD_NUMBER = 9;
        private long createTime_;
        /**
         * <pre>
         * this account create time
         * </pre>
         *
         * <code>int64 create_time = 9;</code>
         */
        public long getCreateTime() {
            return createTime_;
        }

        public static final int LATEST_OPRATION_TIME_FIELD_NUMBER = 10;
        private long latestOprationTime_;
        /**
         * <pre>
         * this last operation time, including transfer, voting and so on. //FIXME fix grammar
         * </pre>
         *
         * <code>int64 latest_opration_time = 10;</code>
         */
        public long getLatestOprationTime() {
            return latestOprationTime_;
        }

        public static final int ALLOWANCE_FIELD_NUMBER = 11;
        private long allowance_;
        /**
         * <pre>
         * witness block producing allowance
         * </pre>
         *
         * <code>int64 allowance = 11;</code>
         */
        public long getAllowance() {
            return allowance_;
        }

        public static final int LATEST_WITHDRAW_TIME_FIELD_NUMBER = 12;
        private long latestWithdrawTime_;
        /**
         * <pre>
         * last withdraw time
         * </pre>
         *
         * <code>int64 latest_withdraw_time = 12;</code>
         */
        public long getLatestWithdrawTime() {
            return latestWithdrawTime_;
        }

        public static final int CODE_FIELD_NUMBER = 13;
        private com.google.protobuf.ByteString code_;
        /**
         * <pre>
         * not used so far
         * </pre>
         *
         * <code>bytes code = 13;</code>
         */
        public com.google.protobuf.ByteString getCode() {
            return code_;
        }

        public static final int IS_WITNESS_FIELD_NUMBER = 14;
        private boolean isWitness_;
        /**
         * <code>bool is_witness = 14;</code>
         */
        public boolean getIsWitness() {
            return isWitness_;
        }

        public static final int IS_COMMITTEE_FIELD_NUMBER = 15;
        private boolean isCommittee_;
        /**
         * <code>bool is_committee = 15;</code>
         */
        public boolean getIsCommittee() {
            return isCommittee_;
        }

        public static final int FROZEN_SUPPLY_FIELD_NUMBER = 16;
        private java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen> frozenSupply_;
        /**
         * <pre>
         * frozen asset(for asset issuer)
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen> getFrozenSupplyList() {
            return frozenSupply_;
        }
        /**
         * <pre>
         * frozen asset(for asset issuer)
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>
        getFrozenSupplyOrBuilderList() {
            return frozenSupply_;
        }
        /**
         * <pre>
         * frozen asset(for asset issuer)
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
         */
        public int getFrozenSupplyCount() {
            return frozenSupply_.size();
        }
        /**
         * <pre>
         * frozen asset(for asset issuer)
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
         */
        public com.cryptowallet.crypto.Protocol.Account.Frozen getFrozenSupply(int index) {
            return frozenSupply_.get(index);
        }
        /**
         * <pre>
         * frozen asset(for asset issuer)
         * </pre>
         *
         * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
         */
        public com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder getFrozenSupplyOrBuilder(
                int index) {
            return frozenSupply_.get(index);
        }

        public static final int ASSET_ISSUED_NAME_FIELD_NUMBER = 17;
        private com.google.protobuf.ByteString assetIssuedName_;
        /**
         * <pre>
         * asset_issued_name
         * </pre>
         *
         * <code>bytes asset_issued_name = 17;</code>
         */
        public com.google.protobuf.ByteString getAssetIssuedName() {
            return assetIssuedName_;
        }

        public static final int LATEST_ASSET_OPERATION_TIME_FIELD_NUMBER = 18;
        private static final class LatestAssetOperationTimeDefaultEntryHolder {
            static final com.google.protobuf.MapEntry<
                    java.lang.String, java.lang.Long> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<java.lang.String, java.lang.Long>newDefaultInstance(
                                    com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_LatestAssetOperationTimeEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.INT64,
                                    0L);
        }
        private com.google.protobuf.MapField<
                java.lang.String, java.lang.Long> latestAssetOperationTime_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
        internalGetLatestAssetOperationTime() {
            if (latestAssetOperationTime_ == null) {
                return com.google.protobuf.MapField.emptyMapField(
                        LatestAssetOperationTimeDefaultEntryHolder.defaultEntry);
            }
            return latestAssetOperationTime_;
        }

        public int getLatestAssetOperationTimeCount() {
            return internalGetLatestAssetOperationTime().getMap().size();
        }
        /**
         * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
         */

        public boolean containsLatestAssetOperationTime(
                java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetLatestAssetOperationTime().getMap().containsKey(key);
        }
        /**
         * Use {@link #getLatestAssetOperationTimeMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Long> getLatestAssetOperationTime() {
            return getLatestAssetOperationTimeMap();
        }
        /**
         * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
         */

        public java.util.Map<java.lang.String, java.lang.Long> getLatestAssetOperationTimeMap() {
            return internalGetLatestAssetOperationTime().getMap();
        }
        /**
         * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
         */

        public long getLatestAssetOperationTimeOrDefault(
                java.lang.String key,
                long defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.Long> map =
                    internalGetLatestAssetOperationTime().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
         */

        public long getLatestAssetOperationTimeOrThrow(
                java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.Long> map =
                    internalGetLatestAssetOperationTime().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        public static final int FREE_NET_USAGE_FIELD_NUMBER = 19;
        private long freeNetUsage_;
        /**
         * <code>int64 free_net_usage = 19;</code>
         */
        public long getFreeNetUsage() {
            return freeNetUsage_;
        }

        public static final int FREE_ASSET_NET_USAGE_FIELD_NUMBER = 20;
        private static final class FreeAssetNetUsageDefaultEntryHolder {
            static final com.google.protobuf.MapEntry<
                    java.lang.String, java.lang.Long> defaultEntry =
                    com.google.protobuf.MapEntry
                            .<java.lang.String, java.lang.Long>newDefaultInstance(
                                    com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_FreeAssetNetUsageEntry_descriptor,
                                    com.google.protobuf.WireFormat.FieldType.STRING,
                                    "",
                                    com.google.protobuf.WireFormat.FieldType.INT64,
                                    0L);
        }
        private com.google.protobuf.MapField<
                java.lang.String, java.lang.Long> freeAssetNetUsage_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
        internalGetFreeAssetNetUsage() {
            if (freeAssetNetUsage_ == null) {
                return com.google.protobuf.MapField.emptyMapField(
                        FreeAssetNetUsageDefaultEntryHolder.defaultEntry);
            }
            return freeAssetNetUsage_;
        }

        public int getFreeAssetNetUsageCount() {
            return internalGetFreeAssetNetUsage().getMap().size();
        }
        /**
         * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
         */

        public boolean containsFreeAssetNetUsage(
                java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            return internalGetFreeAssetNetUsage().getMap().containsKey(key);
        }
        /**
         * Use {@link #getFreeAssetNetUsageMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Long> getFreeAssetNetUsage() {
            return getFreeAssetNetUsageMap();
        }
        /**
         * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
         */

        public java.util.Map<java.lang.String, java.lang.Long> getFreeAssetNetUsageMap() {
            return internalGetFreeAssetNetUsage().getMap();
        }
        /**
         * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
         */

        public long getFreeAssetNetUsageOrDefault(
                java.lang.String key,
                long defaultValue) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.Long> map =
                    internalGetFreeAssetNetUsage().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
         */

        public long getFreeAssetNetUsageOrThrow(
                java.lang.String key) {
            if (key == null) { throw new java.lang.NullPointerException(); }
            java.util.Map<java.lang.String, java.lang.Long> map =
                    internalGetFreeAssetNetUsage().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        public static final int LATEST_CONSUME_TIME_FIELD_NUMBER = 21;
        private long latestConsumeTime_;
        /**
         * <code>int64 latest_consume_time = 21;</code>
         */
        public long getLatestConsumeTime() {
            return latestConsumeTime_;
        }

        public static final int LATEST_CONSUME_FREE_TIME_FIELD_NUMBER = 22;
        private long latestConsumeFreeTime_;
        /**
         * <code>int64 latest_consume_free_time = 22;</code>
         */
        public long getLatestConsumeFreeTime() {
            return latestConsumeFreeTime_;
        }

        public static final int ACCOUNT_ID_FIELD_NUMBER = 23;
        private com.google.protobuf.ByteString accountId_;
        /**
         * <pre>
         * the identity of this account, case insensitive
         * </pre>
         *
         * <code>bytes account_id = 23;</code>
         */
        public com.google.protobuf.ByteString getAccountId() {
            return accountId_;
        }

        public static final int ACCOUNT_RESOURCE_FIELD_NUMBER = 26;
        private com.cryptowallet.crypto.Protocol.Account.AccountResource accountResource_;
        /**
         * <code>.protocol.Account.AccountResource account_resource = 26;</code>
         */
        public boolean hasAccountResource() {
            return accountResource_ != null;
        }
        /**
         * <code>.protocol.Account.AccountResource account_resource = 26;</code>
         */
        public com.cryptowallet.crypto.Protocol.Account.AccountResource getAccountResource() {
            return accountResource_ == null ? com.cryptowallet.crypto.Protocol.Account.AccountResource.getDefaultInstance() : accountResource_;
        }
        /**
         * <code>.protocol.Account.AccountResource account_resource = 26;</code>
         */
        public com.cryptowallet.crypto.Protocol.Account.AccountResourceOrBuilder getAccountResourceOrBuilder() {
            return getAccountResource();
        }

        public static final int CODEHASH_FIELD_NUMBER = 30;
        private com.google.protobuf.ByteString codeHash_;
        /**
         * <code>bytes codeHash = 30;</code>
         */
        public com.google.protobuf.ByteString getCodeHash() {
            return codeHash_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!accountName_.isEmpty()) {
                output.writeBytes(1, accountName_);
            }
            if (type_ != com.cryptowallet.crypto.Protocol.AccountType.Normal.getNumber()) {
                output.writeEnum(2, type_);
            }
            if (!address_.isEmpty()) {
                output.writeBytes(3, address_);
            }
            if (balance_ != 0L) {
                output.writeInt64(4, balance_);
            }
            for (int i = 0; i < votes_.size(); i++) {
                output.writeMessage(5, votes_.get(i));
            }
            com.google.protobuf.GeneratedMessageV3
                    .serializeStringMapTo(
                            output,
                            internalGetAsset(),
                            AssetDefaultEntryHolder.defaultEntry,
                            6);
            for (int i = 0; i < frozen_.size(); i++) {
                output.writeMessage(7, frozen_.get(i));
            }
            if (netUsage_ != 0L) {
                output.writeInt64(8, netUsage_);
            }
            if (createTime_ != 0L) {
                output.writeInt64(9, createTime_);
            }
            if (latestOprationTime_ != 0L) {
                output.writeInt64(10, latestOprationTime_);
            }
            if (allowance_ != 0L) {
                output.writeInt64(11, allowance_);
            }
            if (latestWithdrawTime_ != 0L) {
                output.writeInt64(12, latestWithdrawTime_);
            }
            if (!code_.isEmpty()) {
                output.writeBytes(13, code_);
            }
            if (isWitness_ != false) {
                output.writeBool(14, isWitness_);
            }
            if (isCommittee_ != false) {
                output.writeBool(15, isCommittee_);
            }
            for (int i = 0; i < frozenSupply_.size(); i++) {
                output.writeMessage(16, frozenSupply_.get(i));
            }
            if (!assetIssuedName_.isEmpty()) {
                output.writeBytes(17, assetIssuedName_);
            }
            com.google.protobuf.GeneratedMessageV3
                    .serializeStringMapTo(
                            output,
                            internalGetLatestAssetOperationTime(),
                            LatestAssetOperationTimeDefaultEntryHolder.defaultEntry,
                            18);
            if (freeNetUsage_ != 0L) {
                output.writeInt64(19, freeNetUsage_);
            }
            com.google.protobuf.GeneratedMessageV3
                    .serializeStringMapTo(
                            output,
                            internalGetFreeAssetNetUsage(),
                            FreeAssetNetUsageDefaultEntryHolder.defaultEntry,
                            20);
            if (latestConsumeTime_ != 0L) {
                output.writeInt64(21, latestConsumeTime_);
            }
            if (latestConsumeFreeTime_ != 0L) {
                output.writeInt64(22, latestConsumeFreeTime_);
            }
            if (!accountId_.isEmpty()) {
                output.writeBytes(23, accountId_);
            }
            if (accountResource_ != null) {
                output.writeMessage(26, getAccountResource());
            }
            if (!codeHash_.isEmpty()) {
                output.writeBytes(30, codeHash_);
            }
            if (acquiredDelegatedFrozenBalanceForBandwidth_ != 0L) {
                output.writeInt64(41, acquiredDelegatedFrozenBalanceForBandwidth_);
            }
            if (delegatedFrozenBalanceForBandwidth_ != 0L) {
                output.writeInt64(42, delegatedFrozenBalanceForBandwidth_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!accountName_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, accountName_);
            }
            if (type_ != com.cryptowallet.crypto.Protocol.AccountType.Normal.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, type_);
            }
            if (!address_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, address_);
            }
            if (balance_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, balance_);
            }
            for (int i = 0; i < votes_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, votes_.get(i));
            }
            for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
                    : internalGetAsset().getMap().entrySet()) {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
                        asset__ = AssetDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(6, asset__);
            }
            for (int i = 0; i < frozen_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(7, frozen_.get(i));
            }
            if (netUsage_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(8, netUsage_);
            }
            if (createTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(9, createTime_);
            }
            if (latestOprationTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(10, latestOprationTime_);
            }
            if (allowance_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(11, allowance_);
            }
            if (latestWithdrawTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(12, latestWithdrawTime_);
            }
            if (!code_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(13, code_);
            }
            if (isWitness_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(14, isWitness_);
            }
            if (isCommittee_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(15, isCommittee_);
            }
            for (int i = 0; i < frozenSupply_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(16, frozenSupply_.get(i));
            }
            if (!assetIssuedName_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(17, assetIssuedName_);
            }
            for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
                    : internalGetLatestAssetOperationTime().getMap().entrySet()) {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
                        latestAssetOperationTime__ = LatestAssetOperationTimeDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(18, latestAssetOperationTime__);
            }
            if (freeNetUsage_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(19, freeNetUsage_);
            }
            for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
                    : internalGetFreeAssetNetUsage().getMap().entrySet()) {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
                        freeAssetNetUsage__ = FreeAssetNetUsageDefaultEntryHolder.defaultEntry.newBuilderForType()
                        .setKey(entry.getKey())
                        .setValue(entry.getValue())
                        .build();
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(20, freeAssetNetUsage__);
            }
            if (latestConsumeTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(21, latestConsumeTime_);
            }
            if (latestConsumeFreeTime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(22, latestConsumeFreeTime_);
            }
            if (!accountId_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(23, accountId_);
            }
            if (accountResource_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(26, getAccountResource());
            }
            if (!codeHash_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(30, codeHash_);
            }
            if (acquiredDelegatedFrozenBalanceForBandwidth_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(41, acquiredDelegatedFrozenBalanceForBandwidth_);
            }
            if (delegatedFrozenBalanceForBandwidth_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(42, delegatedFrozenBalanceForBandwidth_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Account)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Account other = (com.cryptowallet.crypto.Protocol.Account) obj;

            boolean result = true;
            result = result && getAccountName()
                    .equals(other.getAccountName());
            result = result && type_ == other.type_;
            result = result && getAddress()
                    .equals(other.getAddress());
            result = result && (getBalance()
                    == other.getBalance());
            result = result && getVotesList()
                    .equals(other.getVotesList());
            result = result && internalGetAsset().equals(
                    other.internalGetAsset());
            result = result && getFrozenList()
                    .equals(other.getFrozenList());
            result = result && (getNetUsage()
                    == other.getNetUsage());
            result = result && (getAcquiredDelegatedFrozenBalanceForBandwidth()
                    == other.getAcquiredDelegatedFrozenBalanceForBandwidth());
            result = result && (getDelegatedFrozenBalanceForBandwidth()
                    == other.getDelegatedFrozenBalanceForBandwidth());
            result = result && (getCreateTime()
                    == other.getCreateTime());
            result = result && (getLatestOprationTime()
                    == other.getLatestOprationTime());
            result = result && (getAllowance()
                    == other.getAllowance());
            result = result && (getLatestWithdrawTime()
                    == other.getLatestWithdrawTime());
            result = result && getCode()
                    .equals(other.getCode());
            result = result && (getIsWitness()
                    == other.getIsWitness());
            result = result && (getIsCommittee()
                    == other.getIsCommittee());
            result = result && getFrozenSupplyList()
                    .equals(other.getFrozenSupplyList());
            result = result && getAssetIssuedName()
                    .equals(other.getAssetIssuedName());
            result = result && internalGetLatestAssetOperationTime().equals(
                    other.internalGetLatestAssetOperationTime());
            result = result && (getFreeNetUsage()
                    == other.getFreeNetUsage());
            result = result && internalGetFreeAssetNetUsage().equals(
                    other.internalGetFreeAssetNetUsage());
            result = result && (getLatestConsumeTime()
                    == other.getLatestConsumeTime());
            result = result && (getLatestConsumeFreeTime()
                    == other.getLatestConsumeFreeTime());
            result = result && getAccountId()
                    .equals(other.getAccountId());
            result = result && (hasAccountResource() == other.hasAccountResource());
            if (hasAccountResource()) {
                result = result && getAccountResource()
                        .equals(other.getAccountResource());
            }
            result = result && getCodeHash()
                    .equals(other.getCodeHash());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ACCOUNT_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getAccountName().hashCode();
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + type_;
            hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getAddress().hashCode();
            hash = (37 * hash) + BALANCE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getBalance());
            if (getVotesCount() > 0) {
                hash = (37 * hash) + VOTES_FIELD_NUMBER;
                hash = (53 * hash) + getVotesList().hashCode();
            }
            if (!internalGetAsset().getMap().isEmpty()) {
                hash = (37 * hash) + ASSET_FIELD_NUMBER;
                hash = (53 * hash) + internalGetAsset().hashCode();
            }
            if (getFrozenCount() > 0) {
                hash = (37 * hash) + FROZEN_FIELD_NUMBER;
                hash = (53 * hash) + getFrozenList().hashCode();
            }
            hash = (37 * hash) + NET_USAGE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getNetUsage());
            hash = (37 * hash) + ACQUIRED_DELEGATED_FROZEN_BALANCE_FOR_BANDWIDTH_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getAcquiredDelegatedFrozenBalanceForBandwidth());
            hash = (37 * hash) + DELEGATED_FROZEN_BALANCE_FOR_BANDWIDTH_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getDelegatedFrozenBalanceForBandwidth());
            hash = (37 * hash) + CREATE_TIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getCreateTime());
            hash = (37 * hash) + LATEST_OPRATION_TIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getLatestOprationTime());
            hash = (37 * hash) + ALLOWANCE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getAllowance());
            hash = (37 * hash) + LATEST_WITHDRAW_TIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getLatestWithdrawTime());
            hash = (37 * hash) + CODE_FIELD_NUMBER;
            hash = (53 * hash) + getCode().hashCode();
            hash = (37 * hash) + IS_WITNESS_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsWitness());
            hash = (37 * hash) + IS_COMMITTEE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsCommittee());
            if (getFrozenSupplyCount() > 0) {
                hash = (37 * hash) + FROZEN_SUPPLY_FIELD_NUMBER;
                hash = (53 * hash) + getFrozenSupplyList().hashCode();
            }
            hash = (37 * hash) + ASSET_ISSUED_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getAssetIssuedName().hashCode();
            if (!internalGetLatestAssetOperationTime().getMap().isEmpty()) {
                hash = (37 * hash) + LATEST_ASSET_OPERATION_TIME_FIELD_NUMBER;
                hash = (53 * hash) + internalGetLatestAssetOperationTime().hashCode();
            }
            hash = (37 * hash) + FREE_NET_USAGE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getFreeNetUsage());
            if (!internalGetFreeAssetNetUsage().getMap().isEmpty()) {
                hash = (37 * hash) + FREE_ASSET_NET_USAGE_FIELD_NUMBER;
                hash = (53 * hash) + internalGetFreeAssetNetUsage().hashCode();
            }
            hash = (37 * hash) + LATEST_CONSUME_TIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getLatestConsumeTime());
            hash = (37 * hash) + LATEST_CONSUME_FREE_TIME_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getLatestConsumeFreeTime());
            hash = (37 * hash) + ACCOUNT_ID_FIELD_NUMBER;
            hash = (53 * hash) + getAccountId().hashCode();
            if (hasAccountResource()) {
                hash = (37 * hash) + ACCOUNT_RESOURCE_FIELD_NUMBER;
                hash = (53 * hash) + getAccountResource().hashCode();
            }
            hash = (37 * hash) + CODEHASH_FIELD_NUMBER;
            hash = (53 * hash) + getCodeHash().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Account parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Account parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Account prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         * Account
         * </pre>
         *
         * Protobuf type {@code protocol.Account}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Account)
                com.cryptowallet.crypto.Protocol.AccountOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_descriptor;
            }

            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMapField(
                    int number) {
                switch (number) {
                    case 6:
                        return internalGetAsset();
                    case 18:
                        return internalGetLatestAssetOperationTime();
                    case 20:
                        return internalGetFreeAssetNetUsage();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }
            @SuppressWarnings({"rawtypes"})
            protected com.google.protobuf.MapField internalGetMutableMapField(
                    int number) {
                switch (number) {
                    case 6:
                        return internalGetMutableAsset();
                    case 18:
                        return internalGetMutableLatestAssetOperationTime();
                    case 20:
                        return internalGetMutableFreeAssetNetUsage();
                    default:
                        throw new RuntimeException(
                                "Invalid map field number: " + number);
                }
            }
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Account.class, com.cryptowallet.crypto.Protocol.Account.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Account.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getVotesFieldBuilder();
                    getFrozenFieldBuilder();
                    getFrozenSupplyFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                accountName_ = com.google.protobuf.ByteString.EMPTY;

                type_ = 0;

                address_ = com.google.protobuf.ByteString.EMPTY;

                balance_ = 0L;

                if (votesBuilder_ == null) {
                    votes_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                } else {
                    votesBuilder_.clear();
                }
                internalGetMutableAsset().clear();
                if (frozenBuilder_ == null) {
                    frozen_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000040);
                } else {
                    frozenBuilder_.clear();
                }
                netUsage_ = 0L;

                acquiredDelegatedFrozenBalanceForBandwidth_ = 0L;

                delegatedFrozenBalanceForBandwidth_ = 0L;

                createTime_ = 0L;

                latestOprationTime_ = 0L;

                allowance_ = 0L;

                latestWithdrawTime_ = 0L;

                code_ = com.google.protobuf.ByteString.EMPTY;

                isWitness_ = false;

                isCommittee_ = false;

                if (frozenSupplyBuilder_ == null) {
                    frozenSupply_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00020000);
                } else {
                    frozenSupplyBuilder_.clear();
                }
                assetIssuedName_ = com.google.protobuf.ByteString.EMPTY;

                internalGetMutableLatestAssetOperationTime().clear();
                freeNetUsage_ = 0L;

                internalGetMutableFreeAssetNetUsage().clear();
                latestConsumeTime_ = 0L;

                latestConsumeFreeTime_ = 0L;

                accountId_ = com.google.protobuf.ByteString.EMPTY;

                if (accountResourceBuilder_ == null) {
                    accountResource_ = null;
                } else {
                    accountResource_ = null;
                    accountResourceBuilder_ = null;
                }
                codeHash_ = com.google.protobuf.ByteString.EMPTY;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Account_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Account getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Account.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Account build() {
                com.cryptowallet.crypto.Protocol.Account result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Account buildPartial() {
                com.cryptowallet.crypto.Protocol.Account result = new com.cryptowallet.crypto.Protocol.Account(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.accountName_ = accountName_;
                result.type_ = type_;
                result.address_ = address_;
                result.balance_ = balance_;
                if (votesBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) == 0x00000010)) {
                        votes_ = java.util.Collections.unmodifiableList(votes_);
                        bitField0_ = (bitField0_ & ~0x00000010);
                    }
                    result.votes_ = votes_;
                } else {
                    result.votes_ = votesBuilder_.build();
                }
                result.asset_ = internalGetAsset();
                result.asset_.makeImmutable();
                if (frozenBuilder_ == null) {
                    if (((bitField0_ & 0x00000040) == 0x00000040)) {
                        frozen_ = java.util.Collections.unmodifiableList(frozen_);
                        bitField0_ = (bitField0_ & ~0x00000040);
                    }
                    result.frozen_ = frozen_;
                } else {
                    result.frozen_ = frozenBuilder_.build();
                }
                result.netUsage_ = netUsage_;
                result.acquiredDelegatedFrozenBalanceForBandwidth_ = acquiredDelegatedFrozenBalanceForBandwidth_;
                result.delegatedFrozenBalanceForBandwidth_ = delegatedFrozenBalanceForBandwidth_;
                result.createTime_ = createTime_;
                result.latestOprationTime_ = latestOprationTime_;
                result.allowance_ = allowance_;
                result.latestWithdrawTime_ = latestWithdrawTime_;
                result.code_ = code_;
                result.isWitness_ = isWitness_;
                result.isCommittee_ = isCommittee_;
                if (frozenSupplyBuilder_ == null) {
                    if (((bitField0_ & 0x00020000) == 0x00020000)) {
                        frozenSupply_ = java.util.Collections.unmodifiableList(frozenSupply_);
                        bitField0_ = (bitField0_ & ~0x00020000);
                    }
                    result.frozenSupply_ = frozenSupply_;
                } else {
                    result.frozenSupply_ = frozenSupplyBuilder_.build();
                }
                result.assetIssuedName_ = assetIssuedName_;
                result.latestAssetOperationTime_ = internalGetLatestAssetOperationTime();
                result.latestAssetOperationTime_.makeImmutable();
                result.freeNetUsage_ = freeNetUsage_;
                result.freeAssetNetUsage_ = internalGetFreeAssetNetUsage();
                result.freeAssetNetUsage_.makeImmutable();
                result.latestConsumeTime_ = latestConsumeTime_;
                result.latestConsumeFreeTime_ = latestConsumeFreeTime_;
                result.accountId_ = accountId_;
                if (accountResourceBuilder_ == null) {
                    result.accountResource_ = accountResource_;
                } else {
                    result.accountResource_ = accountResourceBuilder_.build();
                }
                result.codeHash_ = codeHash_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Account) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Account)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Account other) {
                if (other == com.cryptowallet.crypto.Protocol.Account.getDefaultInstance()) return this;
                if (other.getAccountName() != com.google.protobuf.ByteString.EMPTY) {
                    setAccountName(other.getAccountName());
                }
                if (other.type_ != 0) {
                    setTypeValue(other.getTypeValue());
                }
                if (other.getAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setAddress(other.getAddress());
                }
                if (other.getBalance() != 0L) {
                    setBalance(other.getBalance());
                }
                if (votesBuilder_ == null) {
                    if (!other.votes_.isEmpty()) {
                        if (votes_.isEmpty()) {
                            votes_ = other.votes_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                        } else {
                            ensureVotesIsMutable();
                            votes_.addAll(other.votes_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.votes_.isEmpty()) {
                        if (votesBuilder_.isEmpty()) {
                            votesBuilder_.dispose();
                            votesBuilder_ = null;
                            votes_ = other.votes_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                            votesBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getVotesFieldBuilder() : null;
                        } else {
                            votesBuilder_.addAllMessages(other.votes_);
                        }
                    }
                }
                internalGetMutableAsset().mergeFrom(
                        other.internalGetAsset());
                if (frozenBuilder_ == null) {
                    if (!other.frozen_.isEmpty()) {
                        if (frozen_.isEmpty()) {
                            frozen_ = other.frozen_;
                            bitField0_ = (bitField0_ & ~0x00000040);
                        } else {
                            ensureFrozenIsMutable();
                            frozen_.addAll(other.frozen_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.frozen_.isEmpty()) {
                        if (frozenBuilder_.isEmpty()) {
                            frozenBuilder_.dispose();
                            frozenBuilder_ = null;
                            frozen_ = other.frozen_;
                            bitField0_ = (bitField0_ & ~0x00000040);
                            frozenBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getFrozenFieldBuilder() : null;
                        } else {
                            frozenBuilder_.addAllMessages(other.frozen_);
                        }
                    }
                }
                if (other.getNetUsage() != 0L) {
                    setNetUsage(other.getNetUsage());
                }
                if (other.getAcquiredDelegatedFrozenBalanceForBandwidth() != 0L) {
                    setAcquiredDelegatedFrozenBalanceForBandwidth(other.getAcquiredDelegatedFrozenBalanceForBandwidth());
                }
                if (other.getDelegatedFrozenBalanceForBandwidth() != 0L) {
                    setDelegatedFrozenBalanceForBandwidth(other.getDelegatedFrozenBalanceForBandwidth());
                }
                if (other.getCreateTime() != 0L) {
                    setCreateTime(other.getCreateTime());
                }
                if (other.getLatestOprationTime() != 0L) {
                    setLatestOprationTime(other.getLatestOprationTime());
                }
                if (other.getAllowance() != 0L) {
                    setAllowance(other.getAllowance());
                }
                if (other.getLatestWithdrawTime() != 0L) {
                    setLatestWithdrawTime(other.getLatestWithdrawTime());
                }
                if (other.getCode() != com.google.protobuf.ByteString.EMPTY) {
                    setCode(other.getCode());
                }
                if (other.getIsWitness() != false) {
                    setIsWitness(other.getIsWitness());
                }
                if (other.getIsCommittee() != false) {
                    setIsCommittee(other.getIsCommittee());
                }
                if (frozenSupplyBuilder_ == null) {
                    if (!other.frozenSupply_.isEmpty()) {
                        if (frozenSupply_.isEmpty()) {
                            frozenSupply_ = other.frozenSupply_;
                            bitField0_ = (bitField0_ & ~0x00020000);
                        } else {
                            ensureFrozenSupplyIsMutable();
                            frozenSupply_.addAll(other.frozenSupply_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.frozenSupply_.isEmpty()) {
                        if (frozenSupplyBuilder_.isEmpty()) {
                            frozenSupplyBuilder_.dispose();
                            frozenSupplyBuilder_ = null;
                            frozenSupply_ = other.frozenSupply_;
                            bitField0_ = (bitField0_ & ~0x00020000);
                            frozenSupplyBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getFrozenSupplyFieldBuilder() : null;
                        } else {
                            frozenSupplyBuilder_.addAllMessages(other.frozenSupply_);
                        }
                    }
                }
                if (other.getAssetIssuedName() != com.google.protobuf.ByteString.EMPTY) {
                    setAssetIssuedName(other.getAssetIssuedName());
                }
                internalGetMutableLatestAssetOperationTime().mergeFrom(
                        other.internalGetLatestAssetOperationTime());
                if (other.getFreeNetUsage() != 0L) {
                    setFreeNetUsage(other.getFreeNetUsage());
                }
                internalGetMutableFreeAssetNetUsage().mergeFrom(
                        other.internalGetFreeAssetNetUsage());
                if (other.getLatestConsumeTime() != 0L) {
                    setLatestConsumeTime(other.getLatestConsumeTime());
                }
                if (other.getLatestConsumeFreeTime() != 0L) {
                    setLatestConsumeFreeTime(other.getLatestConsumeFreeTime());
                }
                if (other.getAccountId() != com.google.protobuf.ByteString.EMPTY) {
                    setAccountId(other.getAccountId());
                }
                if (other.hasAccountResource()) {
                    mergeAccountResource(other.getAccountResource());
                }
                if (other.getCodeHash() != com.google.protobuf.ByteString.EMPTY) {
                    setCodeHash(other.getCodeHash());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Account parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Account) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private com.google.protobuf.ByteString accountName_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <pre>
             * account nick name
             * </pre>
             *
             * <code>bytes account_name = 1;</code>
             */
            public com.google.protobuf.ByteString getAccountName() {
                return accountName_;
            }
            /**
             * <pre>
             * account nick name
             * </pre>
             *
             * <code>bytes account_name = 1;</code>
             */
            public Builder setAccountName(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                accountName_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * account nick name
             * </pre>
             *
             * <code>bytes account_name = 1;</code>
             */
            public Builder clearAccountName() {

                accountName_ = getDefaultInstance().getAccountName();
                onChanged();
                return this;
            }

            private int type_ = 0;
            /**
             * <code>.protocol.AccountType type = 2;</code>
             */
            public int getTypeValue() {
                return type_;
            }
            /**
             * <code>.protocol.AccountType type = 2;</code>
             */
            public Builder setTypeValue(int value) {
                type_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.AccountType type = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.AccountType getType() {
                com.cryptowallet.crypto.Protocol.AccountType result = com.cryptowallet.crypto.Protocol.AccountType.valueOf(type_);
                return result == null ? com.cryptowallet.crypto.Protocol.AccountType.UNRECOGNIZED : result;
            }
            /**
             * <code>.protocol.AccountType type = 2;</code>
             */
            public Builder setType(com.cryptowallet.crypto.Protocol.AccountType value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                type_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.AccountType type = 2;</code>
             */
            public Builder clearType() {

                type_ = 0;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString address_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <pre>
             * the create address
             * </pre>
             *
             * <code>bytes address = 3;</code>
             */
            public com.google.protobuf.ByteString getAddress() {
                return address_;
            }
            /**
             * <pre>
             * the create address
             * </pre>
             *
             * <code>bytes address = 3;</code>
             */
            public Builder setAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                address_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * the create address
             * </pre>
             *
             * <code>bytes address = 3;</code>
             */
            public Builder clearAddress() {

                address_ = getDefaultInstance().getAddress();
                onChanged();
                return this;
            }

            private long balance_ ;
            /**
             * <pre>
             * the trx balance
             * </pre>
             *
             * <code>int64 balance = 4;</code>
             */
            public long getBalance() {
                return balance_;
            }
            /**
             * <pre>
             * the trx balance
             * </pre>
             *
             * <code>int64 balance = 4;</code>
             */
            public Builder setBalance(long value) {

                balance_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * the trx balance
             * </pre>
             *
             * <code>int64 balance = 4;</code>
             */
            public Builder clearBalance() {

                balance_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.Vote> votes_ =
                    java.util.Collections.emptyList();
            private void ensureVotesIsMutable() {
                if (!((bitField0_ & 0x00000010) == 0x00000010)) {
                    votes_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Vote>(votes_);
                    bitField0_ |= 0x00000010;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Vote, com.cryptowallet.crypto.Protocol.Vote.Builder, com.cryptowallet.crypto.Protocol.VoteOrBuilder> votesBuilder_;

            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Vote> getVotesList() {
                if (votesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(votes_);
                } else {
                    return votesBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public int getVotesCount() {
                if (votesBuilder_ == null) {
                    return votes_.size();
                } else {
                    return votesBuilder_.getCount();
                }
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote getVotes(int index) {
                if (votesBuilder_ == null) {
                    return votes_.get(index);
                } else {
                    return votesBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public Builder setVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote value) {
                if (votesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureVotesIsMutable();
                    votes_.set(index, value);
                    onChanged();
                } else {
                    votesBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public Builder setVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote.Builder builderForValue) {
                if (votesBuilder_ == null) {
                    ensureVotesIsMutable();
                    votes_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    votesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public Builder addVotes(com.cryptowallet.crypto.Protocol.Vote value) {
                if (votesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureVotesIsMutable();
                    votes_.add(value);
                    onChanged();
                } else {
                    votesBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public Builder addVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote value) {
                if (votesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureVotesIsMutable();
                    votes_.add(index, value);
                    onChanged();
                } else {
                    votesBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public Builder addVotes(
                    com.cryptowallet.crypto.Protocol.Vote.Builder builderForValue) {
                if (votesBuilder_ == null) {
                    ensureVotesIsMutable();
                    votes_.add(builderForValue.build());
                    onChanged();
                } else {
                    votesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public Builder addVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote.Builder builderForValue) {
                if (votesBuilder_ == null) {
                    ensureVotesIsMutable();
                    votes_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    votesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public Builder addAllVotes(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Vote> values) {
                if (votesBuilder_ == null) {
                    ensureVotesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, votes_);
                    onChanged();
                } else {
                    votesBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public Builder clearVotes() {
                if (votesBuilder_ == null) {
                    votes_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                    onChanged();
                } else {
                    votesBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public Builder removeVotes(int index) {
                if (votesBuilder_ == null) {
                    ensureVotesIsMutable();
                    votes_.remove(index);
                    onChanged();
                } else {
                    votesBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote.Builder getVotesBuilder(
                    int index) {
                return getVotesFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.VoteOrBuilder getVotesOrBuilder(
                    int index) {
                if (votesBuilder_ == null) {
                    return votes_.get(index);  } else {
                    return votesBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.VoteOrBuilder>
            getVotesOrBuilderList() {
                if (votesBuilder_ != null) {
                    return votesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(votes_);
                }
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote.Builder addVotesBuilder() {
                return getVotesFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.Vote.getDefaultInstance());
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote.Builder addVotesBuilder(
                    int index) {
                return getVotesFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.Vote.getDefaultInstance());
            }
            /**
             * <pre>
             * the votes
             * </pre>
             *
             * <code>repeated .protocol.Vote votes = 5;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Vote.Builder>
            getVotesBuilderList() {
                return getVotesFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Vote, com.cryptowallet.crypto.Protocol.Vote.Builder, com.cryptowallet.crypto.Protocol.VoteOrBuilder>
            getVotesFieldBuilder() {
                if (votesBuilder_ == null) {
                    votesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Vote, com.cryptowallet.crypto.Protocol.Vote.Builder, com.cryptowallet.crypto.Protocol.VoteOrBuilder>(
                            votes_,
                            ((bitField0_ & 0x00000010) == 0x00000010),
                            getParentForChildren(),
                            isClean());
                    votes_ = null;
                }
                return votesBuilder_;
            }

            private com.google.protobuf.MapField<
                    java.lang.String, java.lang.Long> asset_;
            private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
            internalGetAsset() {
                if (asset_ == null) {
                    return com.google.protobuf.MapField.emptyMapField(
                            AssetDefaultEntryHolder.defaultEntry);
                }
                return asset_;
            }
            private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
            internalGetMutableAsset() {
                onChanged();;
                if (asset_ == null) {
                    asset_ = com.google.protobuf.MapField.newMapField(
                            AssetDefaultEntryHolder.defaultEntry);
                }
                if (!asset_.isMutable()) {
                    asset_ = asset_.copy();
                }
                return asset_;
            }

            public int getAssetCount() {
                return internalGetAsset().getMap().size();
            }
            /**
             * <pre>
             * the other asset owned by this account
             * </pre>
             *
             * <code>map&lt;string, int64&gt; asset = 6;</code>
             */

            public boolean containsAsset(
                    java.lang.String key) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                return internalGetAsset().getMap().containsKey(key);
            }
            /**
             * Use {@link #getAssetMap()} instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.String, java.lang.Long> getAsset() {
                return getAssetMap();
            }
            /**
             * <pre>
             * the other asset owned by this account
             * </pre>
             *
             * <code>map&lt;string, int64&gt; asset = 6;</code>
             */

            public java.util.Map<java.lang.String, java.lang.Long> getAssetMap() {
                return internalGetAsset().getMap();
            }
            /**
             * <pre>
             * the other asset owned by this account
             * </pre>
             *
             * <code>map&lt;string, int64&gt; asset = 6;</code>
             */

            public long getAssetOrDefault(
                    java.lang.String key,
                    long defaultValue) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                java.util.Map<java.lang.String, java.lang.Long> map =
                        internalGetAsset().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }
            /**
             * <pre>
             * the other asset owned by this account
             * </pre>
             *
             * <code>map&lt;string, int64&gt; asset = 6;</code>
             */

            public long getAssetOrThrow(
                    java.lang.String key) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                java.util.Map<java.lang.String, java.lang.Long> map =
                        internalGetAsset().getMap();
                if (!map.containsKey(key)) {
                    throw new java.lang.IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearAsset() {
                internalGetMutableAsset().getMutableMap()
                        .clear();
                return this;
            }
            /**
             * <pre>
             * the other asset owned by this account
             * </pre>
             *
             * <code>map&lt;string, int64&gt; asset = 6;</code>
             */

            public Builder removeAsset(
                    java.lang.String key) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                internalGetMutableAsset().getMutableMap()
                        .remove(key);
                return this;
            }
            /**
             * Use alternate mutation accessors instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.String, java.lang.Long>
            getMutableAsset() {
                return internalGetMutableAsset().getMutableMap();
            }
            /**
             * <pre>
             * the other asset owned by this account
             * </pre>
             *
             * <code>map&lt;string, int64&gt; asset = 6;</code>
             */
            public Builder putAsset(
                    java.lang.String key,
                    long value) {
                if (key == null) { throw new java.lang.NullPointerException(); }

                internalGetMutableAsset().getMutableMap()
                        .put(key, value);
                return this;
            }
            /**
             * <pre>
             * the other asset owned by this account
             * </pre>
             *
             * <code>map&lt;string, int64&gt; asset = 6;</code>
             */

            public Builder putAllAsset(
                    java.util.Map<java.lang.String, java.lang.Long> values) {
                internalGetMutableAsset().getMutableMap()
                        .putAll(values);
                return this;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen> frozen_ =
                    java.util.Collections.emptyList();
            private void ensureFrozenIsMutable() {
                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    frozen_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Account.Frozen>(frozen_);
                    bitField0_ |= 0x00000040;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Account.Frozen, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder, com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder> frozenBuilder_;

            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen> getFrozenList() {
                if (frozenBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(frozen_);
                } else {
                    return frozenBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public int getFrozenCount() {
                if (frozenBuilder_ == null) {
                    return frozen_.size();
                } else {
                    return frozenBuilder_.getCount();
                }
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.Frozen getFrozen(int index) {
                if (frozenBuilder_ == null) {
                    return frozen_.get(index);
                } else {
                    return frozenBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public Builder setFrozen(
                    int index, com.cryptowallet.crypto.Protocol.Account.Frozen value) {
                if (frozenBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureFrozenIsMutable();
                    frozen_.set(index, value);
                    onChanged();
                } else {
                    frozenBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public Builder setFrozen(
                    int index, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder builderForValue) {
                if (frozenBuilder_ == null) {
                    ensureFrozenIsMutable();
                    frozen_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    frozenBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public Builder addFrozen(com.cryptowallet.crypto.Protocol.Account.Frozen value) {
                if (frozenBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureFrozenIsMutable();
                    frozen_.add(value);
                    onChanged();
                } else {
                    frozenBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public Builder addFrozen(
                    int index, com.cryptowallet.crypto.Protocol.Account.Frozen value) {
                if (frozenBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureFrozenIsMutable();
                    frozen_.add(index, value);
                    onChanged();
                } else {
                    frozenBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public Builder addFrozen(
                    com.cryptowallet.crypto.Protocol.Account.Frozen.Builder builderForValue) {
                if (frozenBuilder_ == null) {
                    ensureFrozenIsMutable();
                    frozen_.add(builderForValue.build());
                    onChanged();
                } else {
                    frozenBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public Builder addFrozen(
                    int index, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder builderForValue) {
                if (frozenBuilder_ == null) {
                    ensureFrozenIsMutable();
                    frozen_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    frozenBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public Builder addAllFrozen(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Account.Frozen> values) {
                if (frozenBuilder_ == null) {
                    ensureFrozenIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, frozen_);
                    onChanged();
                } else {
                    frozenBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public Builder clearFrozen() {
                if (frozenBuilder_ == null) {
                    frozen_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000040);
                    onChanged();
                } else {
                    frozenBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public Builder removeFrozen(int index) {
                if (frozenBuilder_ == null) {
                    ensureFrozenIsMutable();
                    frozen_.remove(index);
                    onChanged();
                } else {
                    frozenBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.Frozen.Builder getFrozenBuilder(
                    int index) {
                return getFrozenFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder getFrozenOrBuilder(
                    int index) {
                if (frozenBuilder_ == null) {
                    return frozen_.get(index);  } else {
                    return frozenBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>
            getFrozenOrBuilderList() {
                if (frozenBuilder_ != null) {
                    return frozenBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(frozen_);
                }
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.Frozen.Builder addFrozenBuilder() {
                return getFrozenFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.Account.Frozen.getDefaultInstance());
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.Frozen.Builder addFrozenBuilder(
                    int index) {
                return getFrozenFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.Account.Frozen.getDefaultInstance());
            }
            /**
             * <pre>
             * the frozen balance for bandwidth
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen = 7;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen.Builder>
            getFrozenBuilderList() {
                return getFrozenFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Account.Frozen, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder, com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>
            getFrozenFieldBuilder() {
                if (frozenBuilder_ == null) {
                    frozenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Account.Frozen, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder, com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>(
                            frozen_,
                            ((bitField0_ & 0x00000040) == 0x00000040),
                            getParentForChildren(),
                            isClean());
                    frozen_ = null;
                }
                return frozenBuilder_;
            }

            private long netUsage_ ;
            /**
             * <pre>
             * bandwidth, get from frozen
             * </pre>
             *
             * <code>int64 net_usage = 8;</code>
             */
            public long getNetUsage() {
                return netUsage_;
            }
            /**
             * <pre>
             * bandwidth, get from frozen
             * </pre>
             *
             * <code>int64 net_usage = 8;</code>
             */
            public Builder setNetUsage(long value) {

                netUsage_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * bandwidth, get from frozen
             * </pre>
             *
             * <code>int64 net_usage = 8;</code>
             */
            public Builder clearNetUsage() {

                netUsage_ = 0L;
                onChanged();
                return this;
            }

            private long acquiredDelegatedFrozenBalanceForBandwidth_ ;
            /**
             * <pre>
             *Frozen balance provided by other accounts to this account
             * </pre>
             *
             * <code>int64 acquired_delegated_frozen_balance_for_bandwidth = 41;</code>
             */
            public long getAcquiredDelegatedFrozenBalanceForBandwidth() {
                return acquiredDelegatedFrozenBalanceForBandwidth_;
            }
            /**
             * <pre>
             *Frozen balance provided by other accounts to this account
             * </pre>
             *
             * <code>int64 acquired_delegated_frozen_balance_for_bandwidth = 41;</code>
             */
            public Builder setAcquiredDelegatedFrozenBalanceForBandwidth(long value) {

                acquiredDelegatedFrozenBalanceForBandwidth_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *Frozen balance provided by other accounts to this account
             * </pre>
             *
             * <code>int64 acquired_delegated_frozen_balance_for_bandwidth = 41;</code>
             */
            public Builder clearAcquiredDelegatedFrozenBalanceForBandwidth() {

                acquiredDelegatedFrozenBalanceForBandwidth_ = 0L;
                onChanged();
                return this;
            }

            private long delegatedFrozenBalanceForBandwidth_ ;
            /**
             * <pre>
             *Freeze and provide balances to other accounts
             * </pre>
             *
             * <code>int64 delegated_frozen_balance_for_bandwidth = 42;</code>
             */
            public long getDelegatedFrozenBalanceForBandwidth() {
                return delegatedFrozenBalanceForBandwidth_;
            }
            /**
             * <pre>
             *Freeze and provide balances to other accounts
             * </pre>
             *
             * <code>int64 delegated_frozen_balance_for_bandwidth = 42;</code>
             */
            public Builder setDelegatedFrozenBalanceForBandwidth(long value) {

                delegatedFrozenBalanceForBandwidth_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *Freeze and provide balances to other accounts
             * </pre>
             *
             * <code>int64 delegated_frozen_balance_for_bandwidth = 42;</code>
             */
            public Builder clearDelegatedFrozenBalanceForBandwidth() {

                delegatedFrozenBalanceForBandwidth_ = 0L;
                onChanged();
                return this;
            }

            private long createTime_ ;
            /**
             * <pre>
             * this account create time
             * </pre>
             *
             * <code>int64 create_time = 9;</code>
             */
            public long getCreateTime() {
                return createTime_;
            }
            /**
             * <pre>
             * this account create time
             * </pre>
             *
             * <code>int64 create_time = 9;</code>
             */
            public Builder setCreateTime(long value) {

                createTime_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * this account create time
             * </pre>
             *
             * <code>int64 create_time = 9;</code>
             */
            public Builder clearCreateTime() {

                createTime_ = 0L;
                onChanged();
                return this;
            }

            private long latestOprationTime_ ;
            /**
             * <pre>
             * this last operation time, including transfer, voting and so on. //FIXME fix grammar
             * </pre>
             *
             * <code>int64 latest_opration_time = 10;</code>
             */
            public long getLatestOprationTime() {
                return latestOprationTime_;
            }
            /**
             * <pre>
             * this last operation time, including transfer, voting and so on. //FIXME fix grammar
             * </pre>
             *
             * <code>int64 latest_opration_time = 10;</code>
             */
            public Builder setLatestOprationTime(long value) {

                latestOprationTime_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * this last operation time, including transfer, voting and so on. //FIXME fix grammar
             * </pre>
             *
             * <code>int64 latest_opration_time = 10;</code>
             */
            public Builder clearLatestOprationTime() {

                latestOprationTime_ = 0L;
                onChanged();
                return this;
            }

            private long allowance_ ;
            /**
             * <pre>
             * witness block producing allowance
             * </pre>
             *
             * <code>int64 allowance = 11;</code>
             */
            public long getAllowance() {
                return allowance_;
            }
            /**
             * <pre>
             * witness block producing allowance
             * </pre>
             *
             * <code>int64 allowance = 11;</code>
             */
            public Builder setAllowance(long value) {

                allowance_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * witness block producing allowance
             * </pre>
             *
             * <code>int64 allowance = 11;</code>
             */
            public Builder clearAllowance() {

                allowance_ = 0L;
                onChanged();
                return this;
            }

            private long latestWithdrawTime_ ;
            /**
             * <pre>
             * last withdraw time
             * </pre>
             *
             * <code>int64 latest_withdraw_time = 12;</code>
             */
            public long getLatestWithdrawTime() {
                return latestWithdrawTime_;
            }
            /**
             * <pre>
             * last withdraw time
             * </pre>
             *
             * <code>int64 latest_withdraw_time = 12;</code>
             */
            public Builder setLatestWithdrawTime(long value) {

                latestWithdrawTime_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * last withdraw time
             * </pre>
             *
             * <code>int64 latest_withdraw_time = 12;</code>
             */
            public Builder clearLatestWithdrawTime() {

                latestWithdrawTime_ = 0L;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString code_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <pre>
             * not used so far
             * </pre>
             *
             * <code>bytes code = 13;</code>
             */
            public com.google.protobuf.ByteString getCode() {
                return code_;
            }
            /**
             * <pre>
             * not used so far
             * </pre>
             *
             * <code>bytes code = 13;</code>
             */
            public Builder setCode(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                code_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * not used so far
             * </pre>
             *
             * <code>bytes code = 13;</code>
             */
            public Builder clearCode() {

                code_ = getDefaultInstance().getCode();
                onChanged();
                return this;
            }

            private boolean isWitness_ ;
            /**
             * <code>bool is_witness = 14;</code>
             */
            public boolean getIsWitness() {
                return isWitness_;
            }
            /**
             * <code>bool is_witness = 14;</code>
             */
            public Builder setIsWitness(boolean value) {

                isWitness_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bool is_witness = 14;</code>
             */
            public Builder clearIsWitness() {

                isWitness_ = false;
                onChanged();
                return this;
            }

            private boolean isCommittee_ ;
            /**
             * <code>bool is_committee = 15;</code>
             */
            public boolean getIsCommittee() {
                return isCommittee_;
            }
            /**
             * <code>bool is_committee = 15;</code>
             */
            public Builder setIsCommittee(boolean value) {

                isCommittee_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bool is_committee = 15;</code>
             */
            public Builder clearIsCommittee() {

                isCommittee_ = false;
                onChanged();
                return this;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen> frozenSupply_ =
                    java.util.Collections.emptyList();
            private void ensureFrozenSupplyIsMutable() {
                if (!((bitField0_ & 0x00020000) == 0x00020000)) {
                    frozenSupply_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Account.Frozen>(frozenSupply_);
                    bitField0_ |= 0x00020000;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Account.Frozen, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder, com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder> frozenSupplyBuilder_;

            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen> getFrozenSupplyList() {
                if (frozenSupplyBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(frozenSupply_);
                } else {
                    return frozenSupplyBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public int getFrozenSupplyCount() {
                if (frozenSupplyBuilder_ == null) {
                    return frozenSupply_.size();
                } else {
                    return frozenSupplyBuilder_.getCount();
                }
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.Frozen getFrozenSupply(int index) {
                if (frozenSupplyBuilder_ == null) {
                    return frozenSupply_.get(index);
                } else {
                    return frozenSupplyBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public Builder setFrozenSupply(
                    int index, com.cryptowallet.crypto.Protocol.Account.Frozen value) {
                if (frozenSupplyBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureFrozenSupplyIsMutable();
                    frozenSupply_.set(index, value);
                    onChanged();
                } else {
                    frozenSupplyBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public Builder setFrozenSupply(
                    int index, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder builderForValue) {
                if (frozenSupplyBuilder_ == null) {
                    ensureFrozenSupplyIsMutable();
                    frozenSupply_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    frozenSupplyBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public Builder addFrozenSupply(com.cryptowallet.crypto.Protocol.Account.Frozen value) {
                if (frozenSupplyBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureFrozenSupplyIsMutable();
                    frozenSupply_.add(value);
                    onChanged();
                } else {
                    frozenSupplyBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public Builder addFrozenSupply(
                    int index, com.cryptowallet.crypto.Protocol.Account.Frozen value) {
                if (frozenSupplyBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureFrozenSupplyIsMutable();
                    frozenSupply_.add(index, value);
                    onChanged();
                } else {
                    frozenSupplyBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public Builder addFrozenSupply(
                    com.cryptowallet.crypto.Protocol.Account.Frozen.Builder builderForValue) {
                if (frozenSupplyBuilder_ == null) {
                    ensureFrozenSupplyIsMutable();
                    frozenSupply_.add(builderForValue.build());
                    onChanged();
                } else {
                    frozenSupplyBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public Builder addFrozenSupply(
                    int index, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder builderForValue) {
                if (frozenSupplyBuilder_ == null) {
                    ensureFrozenSupplyIsMutable();
                    frozenSupply_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    frozenSupplyBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public Builder addAllFrozenSupply(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Account.Frozen> values) {
                if (frozenSupplyBuilder_ == null) {
                    ensureFrozenSupplyIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, frozenSupply_);
                    onChanged();
                } else {
                    frozenSupplyBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public Builder clearFrozenSupply() {
                if (frozenSupplyBuilder_ == null) {
                    frozenSupply_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00020000);
                    onChanged();
                } else {
                    frozenSupplyBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public Builder removeFrozenSupply(int index) {
                if (frozenSupplyBuilder_ == null) {
                    ensureFrozenSupplyIsMutable();
                    frozenSupply_.remove(index);
                    onChanged();
                } else {
                    frozenSupplyBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.Frozen.Builder getFrozenSupplyBuilder(
                    int index) {
                return getFrozenSupplyFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder getFrozenSupplyOrBuilder(
                    int index) {
                if (frozenSupplyBuilder_ == null) {
                    return frozenSupply_.get(index);  } else {
                    return frozenSupplyBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>
            getFrozenSupplyOrBuilderList() {
                if (frozenSupplyBuilder_ != null) {
                    return frozenSupplyBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(frozenSupply_);
                }
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.Frozen.Builder addFrozenSupplyBuilder() {
                return getFrozenSupplyFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.Account.Frozen.getDefaultInstance());
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.Frozen.Builder addFrozenSupplyBuilder(
                    int index) {
                return getFrozenSupplyFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.Account.Frozen.getDefaultInstance());
            }
            /**
             * <pre>
             * frozen asset(for asset issuer)
             * </pre>
             *
             * <code>repeated .protocol.Account.Frozen frozen_supply = 16;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Account.Frozen.Builder>
            getFrozenSupplyBuilderList() {
                return getFrozenSupplyFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Account.Frozen, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder, com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>
            getFrozenSupplyFieldBuilder() {
                if (frozenSupplyBuilder_ == null) {
                    frozenSupplyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Account.Frozen, com.cryptowallet.crypto.Protocol.Account.Frozen.Builder, com.cryptowallet.crypto.Protocol.Account.FrozenOrBuilder>(
                            frozenSupply_,
                            ((bitField0_ & 0x00020000) == 0x00020000),
                            getParentForChildren(),
                            isClean());
                    frozenSupply_ = null;
                }
                return frozenSupplyBuilder_;
            }

            private com.google.protobuf.ByteString assetIssuedName_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <pre>
             * asset_issued_name
             * </pre>
             *
             * <code>bytes asset_issued_name = 17;</code>
             */
            public com.google.protobuf.ByteString getAssetIssuedName() {
                return assetIssuedName_;
            }
            /**
             * <pre>
             * asset_issued_name
             * </pre>
             *
             * <code>bytes asset_issued_name = 17;</code>
             */
            public Builder setAssetIssuedName(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                assetIssuedName_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * asset_issued_name
             * </pre>
             *
             * <code>bytes asset_issued_name = 17;</code>
             */
            public Builder clearAssetIssuedName() {

                assetIssuedName_ = getDefaultInstance().getAssetIssuedName();
                onChanged();
                return this;
            }

            private com.google.protobuf.MapField<
                    java.lang.String, java.lang.Long> latestAssetOperationTime_;
            private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
            internalGetLatestAssetOperationTime() {
                if (latestAssetOperationTime_ == null) {
                    return com.google.protobuf.MapField.emptyMapField(
                            LatestAssetOperationTimeDefaultEntryHolder.defaultEntry);
                }
                return latestAssetOperationTime_;
            }
            private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
            internalGetMutableLatestAssetOperationTime() {
                onChanged();;
                if (latestAssetOperationTime_ == null) {
                    latestAssetOperationTime_ = com.google.protobuf.MapField.newMapField(
                            LatestAssetOperationTimeDefaultEntryHolder.defaultEntry);
                }
                if (!latestAssetOperationTime_.isMutable()) {
                    latestAssetOperationTime_ = latestAssetOperationTime_.copy();
                }
                return latestAssetOperationTime_;
            }

            public int getLatestAssetOperationTimeCount() {
                return internalGetLatestAssetOperationTime().getMap().size();
            }
            /**
             * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
             */

            public boolean containsLatestAssetOperationTime(
                    java.lang.String key) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                return internalGetLatestAssetOperationTime().getMap().containsKey(key);
            }
            /**
             * Use {@link #getLatestAssetOperationTimeMap()} instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.String, java.lang.Long> getLatestAssetOperationTime() {
                return getLatestAssetOperationTimeMap();
            }
            /**
             * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
             */

            public java.util.Map<java.lang.String, java.lang.Long> getLatestAssetOperationTimeMap() {
                return internalGetLatestAssetOperationTime().getMap();
            }
            /**
             * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
             */

            public long getLatestAssetOperationTimeOrDefault(
                    java.lang.String key,
                    long defaultValue) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                java.util.Map<java.lang.String, java.lang.Long> map =
                        internalGetLatestAssetOperationTime().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }
            /**
             * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
             */

            public long getLatestAssetOperationTimeOrThrow(
                    java.lang.String key) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                java.util.Map<java.lang.String, java.lang.Long> map =
                        internalGetLatestAssetOperationTime().getMap();
                if (!map.containsKey(key)) {
                    throw new java.lang.IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearLatestAssetOperationTime() {
                internalGetMutableLatestAssetOperationTime().getMutableMap()
                        .clear();
                return this;
            }
            /**
             * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
             */

            public Builder removeLatestAssetOperationTime(
                    java.lang.String key) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                internalGetMutableLatestAssetOperationTime().getMutableMap()
                        .remove(key);
                return this;
            }
            /**
             * Use alternate mutation accessors instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.String, java.lang.Long>
            getMutableLatestAssetOperationTime() {
                return internalGetMutableLatestAssetOperationTime().getMutableMap();
            }
            /**
             * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
             */
            public Builder putLatestAssetOperationTime(
                    java.lang.String key,
                    long value) {
                if (key == null) { throw new java.lang.NullPointerException(); }

                internalGetMutableLatestAssetOperationTime().getMutableMap()
                        .put(key, value);
                return this;
            }
            /**
             * <code>map&lt;string, int64&gt; latest_asset_operation_time = 18;</code>
             */

            public Builder putAllLatestAssetOperationTime(
                    java.util.Map<java.lang.String, java.lang.Long> values) {
                internalGetMutableLatestAssetOperationTime().getMutableMap()
                        .putAll(values);
                return this;
            }

            private long freeNetUsage_ ;
            /**
             * <code>int64 free_net_usage = 19;</code>
             */
            public long getFreeNetUsage() {
                return freeNetUsage_;
            }
            /**
             * <code>int64 free_net_usage = 19;</code>
             */
            public Builder setFreeNetUsage(long value) {

                freeNetUsage_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 free_net_usage = 19;</code>
             */
            public Builder clearFreeNetUsage() {

                freeNetUsage_ = 0L;
                onChanged();
                return this;
            }

            private com.google.protobuf.MapField<
                    java.lang.String, java.lang.Long> freeAssetNetUsage_;
            private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
            internalGetFreeAssetNetUsage() {
                if (freeAssetNetUsage_ == null) {
                    return com.google.protobuf.MapField.emptyMapField(
                            FreeAssetNetUsageDefaultEntryHolder.defaultEntry);
                }
                return freeAssetNetUsage_;
            }
            private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
            internalGetMutableFreeAssetNetUsage() {
                onChanged();;
                if (freeAssetNetUsage_ == null) {
                    freeAssetNetUsage_ = com.google.protobuf.MapField.newMapField(
                            FreeAssetNetUsageDefaultEntryHolder.defaultEntry);
                }
                if (!freeAssetNetUsage_.isMutable()) {
                    freeAssetNetUsage_ = freeAssetNetUsage_.copy();
                }
                return freeAssetNetUsage_;
            }

            public int getFreeAssetNetUsageCount() {
                return internalGetFreeAssetNetUsage().getMap().size();
            }
            /**
             * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
             */

            public boolean containsFreeAssetNetUsage(
                    java.lang.String key) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                return internalGetFreeAssetNetUsage().getMap().containsKey(key);
            }
            /**
             * Use {@link #getFreeAssetNetUsageMap()} instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.String, java.lang.Long> getFreeAssetNetUsage() {
                return getFreeAssetNetUsageMap();
            }
            /**
             * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
             */

            public java.util.Map<java.lang.String, java.lang.Long> getFreeAssetNetUsageMap() {
                return internalGetFreeAssetNetUsage().getMap();
            }
            /**
             * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
             */

            public long getFreeAssetNetUsageOrDefault(
                    java.lang.String key,
                    long defaultValue) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                java.util.Map<java.lang.String, java.lang.Long> map =
                        internalGetFreeAssetNetUsage().getMap();
                return map.containsKey(key) ? map.get(key) : defaultValue;
            }
            /**
             * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
             */

            public long getFreeAssetNetUsageOrThrow(
                    java.lang.String key) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                java.util.Map<java.lang.String, java.lang.Long> map =
                        internalGetFreeAssetNetUsage().getMap();
                if (!map.containsKey(key)) {
                    throw new java.lang.IllegalArgumentException();
                }
                return map.get(key);
            }

            public Builder clearFreeAssetNetUsage() {
                internalGetMutableFreeAssetNetUsage().getMutableMap()
                        .clear();
                return this;
            }
            /**
             * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
             */

            public Builder removeFreeAssetNetUsage(
                    java.lang.String key) {
                if (key == null) { throw new java.lang.NullPointerException(); }
                internalGetMutableFreeAssetNetUsage().getMutableMap()
                        .remove(key);
                return this;
            }
            /**
             * Use alternate mutation accessors instead.
             */
            @java.lang.Deprecated
            public java.util.Map<java.lang.String, java.lang.Long>
            getMutableFreeAssetNetUsage() {
                return internalGetMutableFreeAssetNetUsage().getMutableMap();
            }
            /**
             * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
             */
            public Builder putFreeAssetNetUsage(
                    java.lang.String key,
                    long value) {
                if (key == null) { throw new java.lang.NullPointerException(); }

                internalGetMutableFreeAssetNetUsage().getMutableMap()
                        .put(key, value);
                return this;
            }
            /**
             * <code>map&lt;string, int64&gt; free_asset_net_usage = 20;</code>
             */

            public Builder putAllFreeAssetNetUsage(
                    java.util.Map<java.lang.String, java.lang.Long> values) {
                internalGetMutableFreeAssetNetUsage().getMutableMap()
                        .putAll(values);
                return this;
            }

            private long latestConsumeTime_ ;
            /**
             * <code>int64 latest_consume_time = 21;</code>
             */
            public long getLatestConsumeTime() {
                return latestConsumeTime_;
            }
            /**
             * <code>int64 latest_consume_time = 21;</code>
             */
            public Builder setLatestConsumeTime(long value) {

                latestConsumeTime_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 latest_consume_time = 21;</code>
             */
            public Builder clearLatestConsumeTime() {

                latestConsumeTime_ = 0L;
                onChanged();
                return this;
            }

            private long latestConsumeFreeTime_ ;
            /**
             * <code>int64 latest_consume_free_time = 22;</code>
             */
            public long getLatestConsumeFreeTime() {
                return latestConsumeFreeTime_;
            }
            /**
             * <code>int64 latest_consume_free_time = 22;</code>
             */
            public Builder setLatestConsumeFreeTime(long value) {

                latestConsumeFreeTime_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 latest_consume_free_time = 22;</code>
             */
            public Builder clearLatestConsumeFreeTime() {

                latestConsumeFreeTime_ = 0L;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString accountId_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <pre>
             * the identity of this account, case insensitive
             * </pre>
             *
             * <code>bytes account_id = 23;</code>
             */
            public com.google.protobuf.ByteString getAccountId() {
                return accountId_;
            }
            /**
             * <pre>
             * the identity of this account, case insensitive
             * </pre>
             *
             * <code>bytes account_id = 23;</code>
             */
            public Builder setAccountId(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                accountId_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * the identity of this account, case insensitive
             * </pre>
             *
             * <code>bytes account_id = 23;</code>
             */
            public Builder clearAccountId() {

                accountId_ = getDefaultInstance().getAccountId();
                onChanged();
                return this;
            }

            private com.cryptowallet.crypto.Protocol.Account.AccountResource accountResource_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Account.AccountResource, com.cryptowallet.crypto.Protocol.Account.AccountResource.Builder, com.cryptowallet.crypto.Protocol.Account.AccountResourceOrBuilder> accountResourceBuilder_;
            /**
             * <code>.protocol.Account.AccountResource account_resource = 26;</code>
             */
            public boolean hasAccountResource() {
                return accountResourceBuilder_ != null || accountResource_ != null;
            }
            /**
             * <code>.protocol.Account.AccountResource account_resource = 26;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.AccountResource getAccountResource() {
                if (accountResourceBuilder_ == null) {
                    return accountResource_ == null ? com.cryptowallet.crypto.Protocol.Account.AccountResource.getDefaultInstance() : accountResource_;
                } else {
                    return accountResourceBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.Account.AccountResource account_resource = 26;</code>
             */
            public Builder setAccountResource(com.cryptowallet.crypto.Protocol.Account.AccountResource value) {
                if (accountResourceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    accountResource_ = value;
                    onChanged();
                } else {
                    accountResourceBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.Account.AccountResource account_resource = 26;</code>
             */
            public Builder setAccountResource(
                    com.cryptowallet.crypto.Protocol.Account.AccountResource.Builder builderForValue) {
                if (accountResourceBuilder_ == null) {
                    accountResource_ = builderForValue.build();
                    onChanged();
                } else {
                    accountResourceBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.Account.AccountResource account_resource = 26;</code>
             */
            public Builder mergeAccountResource(com.cryptowallet.crypto.Protocol.Account.AccountResource value) {
                if (accountResourceBuilder_ == null) {
                    if (accountResource_ != null) {
                        accountResource_ =
                                com.cryptowallet.crypto.Protocol.Account.AccountResource.newBuilder(accountResource_).mergeFrom(value).buildPartial();
                    } else {
                        accountResource_ = value;
                    }
                    onChanged();
                } else {
                    accountResourceBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.Account.AccountResource account_resource = 26;</code>
             */
            public Builder clearAccountResource() {
                if (accountResourceBuilder_ == null) {
                    accountResource_ = null;
                    onChanged();
                } else {
                    accountResource_ = null;
                    accountResourceBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.Account.AccountResource account_resource = 26;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.AccountResource.Builder getAccountResourceBuilder() {

                onChanged();
                return getAccountResourceFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.Account.AccountResource account_resource = 26;</code>
             */
            public com.cryptowallet.crypto.Protocol.Account.AccountResourceOrBuilder getAccountResourceOrBuilder() {
                if (accountResourceBuilder_ != null) {
                    return accountResourceBuilder_.getMessageOrBuilder();
                } else {
                    return accountResource_ == null ?
                            com.cryptowallet.crypto.Protocol.Account.AccountResource.getDefaultInstance() : accountResource_;
                }
            }
            /**
             * <code>.protocol.Account.AccountResource account_resource = 26;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Account.AccountResource, com.cryptowallet.crypto.Protocol.Account.AccountResource.Builder, com.cryptowallet.crypto.Protocol.Account.AccountResourceOrBuilder>
            getAccountResourceFieldBuilder() {
                if (accountResourceBuilder_ == null) {
                    accountResourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Account.AccountResource, com.cryptowallet.crypto.Protocol.Account.AccountResource.Builder, com.cryptowallet.crypto.Protocol.Account.AccountResourceOrBuilder>(
                            getAccountResource(),
                            getParentForChildren(),
                            isClean());
                    accountResource_ = null;
                }
                return accountResourceBuilder_;
            }

            private com.google.protobuf.ByteString codeHash_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes codeHash = 30;</code>
             */
            public com.google.protobuf.ByteString getCodeHash() {
                return codeHash_;
            }
            /**
             * <code>bytes codeHash = 30;</code>
             */
            public Builder setCodeHash(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                codeHash_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes codeHash = 30;</code>
             */
            public Builder clearCodeHash() {

                codeHash_ = getDefaultInstance().getCodeHash();
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Account)
        }

        // @@protoc_insertion_point(class_scope:protocol.Account)
        private static final com.cryptowallet.crypto.Protocol.Account DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Account();
        }

        public static com.cryptowallet.crypto.Protocol.Account getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Account>
                PARSER = new com.google.protobuf.AbstractParser<Account>() {
            public Account parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Account(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Account> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Account> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Account getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface DelegatedResourceOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.DelegatedResource)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>bytes from = 1;</code>
         */
        com.google.protobuf.ByteString getFrom();

        /**
         * <code>bytes to = 2;</code>
         */
        com.google.protobuf.ByteString getTo();

        /**
         * <code>int64 frozen_balance_for_bandwidth = 3;</code>
         */
        long getFrozenBalanceForBandwidth();

        /**
         * <code>int64 frozen_balance_for_energy = 4;</code>
         */
        long getFrozenBalanceForEnergy();

        /**
         * <code>int64 expire_time_for_bandwidth = 5;</code>
         */
        long getExpireTimeForBandwidth();

        /**
         * <code>int64 expire_time_for_energy = 6;</code>
         */
        long getExpireTimeForEnergy();
    }
    /**
     * Protobuf type {@code protocol.DelegatedResource}
     */
    public  static final class DelegatedResource extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.DelegatedResource)
            DelegatedResourceOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use DelegatedResource.newBuilder() to construct.
        private DelegatedResource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private DelegatedResource() {
            from_ = com.google.protobuf.ByteString.EMPTY;
            to_ = com.google.protobuf.ByteString.EMPTY;
            frozenBalanceForBandwidth_ = 0L;
            frozenBalanceForEnergy_ = 0L;
            expireTimeForBandwidth_ = 0L;
            expireTimeForEnergy_ = 0L;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private DelegatedResource(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {

                            from_ = input.readBytes();
                            break;
                        }
                        case 18: {

                            to_ = input.readBytes();
                            break;
                        }
                        case 24: {

                            frozenBalanceForBandwidth_ = input.readInt64();
                            break;
                        }
                        case 32: {

                            frozenBalanceForEnergy_ = input.readInt64();
                            break;
                        }
                        case 40: {

                            expireTimeForBandwidth_ = input.readInt64();
                            break;
                        }
                        case 48: {

                            expireTimeForEnergy_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_DelegatedResource_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_DelegatedResource_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.DelegatedResource.class, com.cryptowallet.crypto.Protocol.DelegatedResource.Builder.class);
        }

        public static final int FROM_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString from_;
        /**
         * <code>bytes from = 1;</code>
         */
        public com.google.protobuf.ByteString getFrom() {
            return from_;
        }

        public static final int TO_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString to_;
        /**
         * <code>bytes to = 2;</code>
         */
        public com.google.protobuf.ByteString getTo() {
            return to_;
        }

        public static final int FROZEN_BALANCE_FOR_BANDWIDTH_FIELD_NUMBER = 3;
        private long frozenBalanceForBandwidth_;
        /**
         * <code>int64 frozen_balance_for_bandwidth = 3;</code>
         */
        public long getFrozenBalanceForBandwidth() {
            return frozenBalanceForBandwidth_;
        }

        public static final int FROZEN_BALANCE_FOR_ENERGY_FIELD_NUMBER = 4;
        private long frozenBalanceForEnergy_;
        /**
         * <code>int64 frozen_balance_for_energy = 4;</code>
         */
        public long getFrozenBalanceForEnergy() {
            return frozenBalanceForEnergy_;
        }

        public static final int EXPIRE_TIME_FOR_BANDWIDTH_FIELD_NUMBER = 5;
        private long expireTimeForBandwidth_;
        /**
         * <code>int64 expire_time_for_bandwidth = 5;</code>
         */
        public long getExpireTimeForBandwidth() {
            return expireTimeForBandwidth_;
        }

        public static final int EXPIRE_TIME_FOR_ENERGY_FIELD_NUMBER = 6;
        private long expireTimeForEnergy_;
        /**
         * <code>int64 expire_time_for_energy = 6;</code>
         */
        public long getExpireTimeForEnergy() {
            return expireTimeForEnergy_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!from_.isEmpty()) {
                output.writeBytes(1, from_);
            }
            if (!to_.isEmpty()) {
                output.writeBytes(2, to_);
            }
            if (frozenBalanceForBandwidth_ != 0L) {
                output.writeInt64(3, frozenBalanceForBandwidth_);
            }
            if (frozenBalanceForEnergy_ != 0L) {
                output.writeInt64(4, frozenBalanceForEnergy_);
            }
            if (expireTimeForBandwidth_ != 0L) {
                output.writeInt64(5, expireTimeForBandwidth_);
            }
            if (expireTimeForEnergy_ != 0L) {
                output.writeInt64(6, expireTimeForEnergy_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!from_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, from_);
            }
            if (!to_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, to_);
            }
            if (frozenBalanceForBandwidth_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(3, frozenBalanceForBandwidth_);
            }
            if (frozenBalanceForEnergy_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, frozenBalanceForEnergy_);
            }
            if (expireTimeForBandwidth_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(5, expireTimeForBandwidth_);
            }
            if (expireTimeForEnergy_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(6, expireTimeForEnergy_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.DelegatedResource)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.DelegatedResource other = (com.cryptowallet.crypto.Protocol.DelegatedResource) obj;

            boolean result = true;
            result = result && getFrom()
                    .equals(other.getFrom());
            result = result && getTo()
                    .equals(other.getTo());
            result = result && (getFrozenBalanceForBandwidth()
                    == other.getFrozenBalanceForBandwidth());
            result = result && (getFrozenBalanceForEnergy()
                    == other.getFrozenBalanceForEnergy());
            result = result && (getExpireTimeForBandwidth()
                    == other.getExpireTimeForBandwidth());
            result = result && (getExpireTimeForEnergy()
                    == other.getExpireTimeForEnergy());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + FROM_FIELD_NUMBER;
            hash = (53 * hash) + getFrom().hashCode();
            hash = (37 * hash) + TO_FIELD_NUMBER;
            hash = (53 * hash) + getTo().hashCode();
            hash = (37 * hash) + FROZEN_BALANCE_FOR_BANDWIDTH_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getFrozenBalanceForBandwidth());
            hash = (37 * hash) + FROZEN_BALANCE_FOR_ENERGY_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getFrozenBalanceForEnergy());
            hash = (37 * hash) + EXPIRE_TIME_FOR_BANDWIDTH_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getExpireTimeForBandwidth());
            hash = (37 * hash) + EXPIRE_TIME_FOR_ENERGY_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getExpireTimeForEnergy());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResource parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.DelegatedResource prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.DelegatedResource}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.DelegatedResource)
                com.cryptowallet.crypto.Protocol.DelegatedResourceOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DelegatedResource_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DelegatedResource_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.DelegatedResource.class, com.cryptowallet.crypto.Protocol.DelegatedResource.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.DelegatedResource.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                from_ = com.google.protobuf.ByteString.EMPTY;

                to_ = com.google.protobuf.ByteString.EMPTY;

                frozenBalanceForBandwidth_ = 0L;

                frozenBalanceForEnergy_ = 0L;

                expireTimeForBandwidth_ = 0L;

                expireTimeForEnergy_ = 0L;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DelegatedResource_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.DelegatedResource getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.DelegatedResource.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.DelegatedResource build() {
                com.cryptowallet.crypto.Protocol.DelegatedResource result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.DelegatedResource buildPartial() {
                com.cryptowallet.crypto.Protocol.DelegatedResource result = new com.cryptowallet.crypto.Protocol.DelegatedResource(this);
                result.from_ = from_;
                result.to_ = to_;
                result.frozenBalanceForBandwidth_ = frozenBalanceForBandwidth_;
                result.frozenBalanceForEnergy_ = frozenBalanceForEnergy_;
                result.expireTimeForBandwidth_ = expireTimeForBandwidth_;
                result.expireTimeForEnergy_ = expireTimeForEnergy_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.DelegatedResource) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.DelegatedResource)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.DelegatedResource other) {
                if (other == com.cryptowallet.crypto.Protocol.DelegatedResource.getDefaultInstance()) return this;
                if (other.getFrom() != com.google.protobuf.ByteString.EMPTY) {
                    setFrom(other.getFrom());
                }
                if (other.getTo() != com.google.protobuf.ByteString.EMPTY) {
                    setTo(other.getTo());
                }
                if (other.getFrozenBalanceForBandwidth() != 0L) {
                    setFrozenBalanceForBandwidth(other.getFrozenBalanceForBandwidth());
                }
                if (other.getFrozenBalanceForEnergy() != 0L) {
                    setFrozenBalanceForEnergy(other.getFrozenBalanceForEnergy());
                }
                if (other.getExpireTimeForBandwidth() != 0L) {
                    setExpireTimeForBandwidth(other.getExpireTimeForBandwidth());
                }
                if (other.getExpireTimeForEnergy() != 0L) {
                    setExpireTimeForEnergy(other.getExpireTimeForEnergy());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.DelegatedResource parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.DelegatedResource) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.google.protobuf.ByteString from_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes from = 1;</code>
             */
            public com.google.protobuf.ByteString getFrom() {
                return from_;
            }
            /**
             * <code>bytes from = 1;</code>
             */
            public Builder setFrom(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                from_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes from = 1;</code>
             */
            public Builder clearFrom() {

                from_ = getDefaultInstance().getFrom();
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString to_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes to = 2;</code>
             */
            public com.google.protobuf.ByteString getTo() {
                return to_;
            }
            /**
             * <code>bytes to = 2;</code>
             */
            public Builder setTo(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                to_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes to = 2;</code>
             */
            public Builder clearTo() {

                to_ = getDefaultInstance().getTo();
                onChanged();
                return this;
            }

            private long frozenBalanceForBandwidth_ ;
            /**
             * <code>int64 frozen_balance_for_bandwidth = 3;</code>
             */
            public long getFrozenBalanceForBandwidth() {
                return frozenBalanceForBandwidth_;
            }
            /**
             * <code>int64 frozen_balance_for_bandwidth = 3;</code>
             */
            public Builder setFrozenBalanceForBandwidth(long value) {

                frozenBalanceForBandwidth_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 frozen_balance_for_bandwidth = 3;</code>
             */
            public Builder clearFrozenBalanceForBandwidth() {

                frozenBalanceForBandwidth_ = 0L;
                onChanged();
                return this;
            }

            private long frozenBalanceForEnergy_ ;
            /**
             * <code>int64 frozen_balance_for_energy = 4;</code>
             */
            public long getFrozenBalanceForEnergy() {
                return frozenBalanceForEnergy_;
            }
            /**
             * <code>int64 frozen_balance_for_energy = 4;</code>
             */
            public Builder setFrozenBalanceForEnergy(long value) {

                frozenBalanceForEnergy_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 frozen_balance_for_energy = 4;</code>
             */
            public Builder clearFrozenBalanceForEnergy() {

                frozenBalanceForEnergy_ = 0L;
                onChanged();
                return this;
            }

            private long expireTimeForBandwidth_ ;
            /**
             * <code>int64 expire_time_for_bandwidth = 5;</code>
             */
            public long getExpireTimeForBandwidth() {
                return expireTimeForBandwidth_;
            }
            /**
             * <code>int64 expire_time_for_bandwidth = 5;</code>
             */
            public Builder setExpireTimeForBandwidth(long value) {

                expireTimeForBandwidth_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 expire_time_for_bandwidth = 5;</code>
             */
            public Builder clearExpireTimeForBandwidth() {

                expireTimeForBandwidth_ = 0L;
                onChanged();
                return this;
            }

            private long expireTimeForEnergy_ ;
            /**
             * <code>int64 expire_time_for_energy = 6;</code>
             */
            public long getExpireTimeForEnergy() {
                return expireTimeForEnergy_;
            }
            /**
             * <code>int64 expire_time_for_energy = 6;</code>
             */
            public Builder setExpireTimeForEnergy(long value) {

                expireTimeForEnergy_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 expire_time_for_energy = 6;</code>
             */
            public Builder clearExpireTimeForEnergy() {

                expireTimeForEnergy_ = 0L;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.DelegatedResource)
        }

        // @@protoc_insertion_point(class_scope:protocol.DelegatedResource)
        private static final com.cryptowallet.crypto.Protocol.DelegatedResource DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.DelegatedResource();
        }

        public static com.cryptowallet.crypto.Protocol.DelegatedResource getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<DelegatedResource>
                PARSER = new com.google.protobuf.AbstractParser<DelegatedResource>() {
            public DelegatedResource parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new DelegatedResource(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<DelegatedResource> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<DelegatedResource> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.DelegatedResource getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface authorityOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.authority)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        boolean hasAccount();
        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.AccountId getAccount();
        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.AccountIdOrBuilder getAccountOrBuilder();

        /**
         * <code>bytes permission_name = 2;</code>
         */
        com.google.protobuf.ByteString getPermissionName();
    }
    /**
     * Protobuf type {@code protocol.authority}
     */
    public  static final class authority extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.authority)
            authorityOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use authority.newBuilder() to construct.
        private authority(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private authority() {
            permissionName_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private authority(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.cryptowallet.crypto.Protocol.AccountId.Builder subBuilder = null;
                            if (account_ != null) {
                                subBuilder = account_.toBuilder();
                            }
                            account_ = input.readMessage(com.cryptowallet.crypto.Protocol.AccountId.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(account_);
                                account_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {

                            permissionName_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_authority_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_authority_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.authority.class, com.cryptowallet.crypto.Protocol.authority.Builder.class);
        }

        public static final int ACCOUNT_FIELD_NUMBER = 1;
        private com.cryptowallet.crypto.Protocol.AccountId account_;
        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        public boolean hasAccount() {
            return account_ != null;
        }
        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.AccountId getAccount() {
            return account_ == null ? com.cryptowallet.crypto.Protocol.AccountId.getDefaultInstance() : account_;
        }
        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.AccountIdOrBuilder getAccountOrBuilder() {
            return getAccount();
        }

        public static final int PERMISSION_NAME_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString permissionName_;
        /**
         * <code>bytes permission_name = 2;</code>
         */
        public com.google.protobuf.ByteString getPermissionName() {
            return permissionName_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (account_ != null) {
                output.writeMessage(1, getAccount());
            }
            if (!permissionName_.isEmpty()) {
                output.writeBytes(2, permissionName_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (account_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getAccount());
            }
            if (!permissionName_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, permissionName_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.authority)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.authority other = (com.cryptowallet.crypto.Protocol.authority) obj;

            boolean result = true;
            result = result && (hasAccount() == other.hasAccount());
            if (hasAccount()) {
                result = result && getAccount()
                        .equals(other.getAccount());
            }
            result = result && getPermissionName()
                    .equals(other.getPermissionName());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasAccount()) {
                hash = (37 * hash) + ACCOUNT_FIELD_NUMBER;
                hash = (53 * hash) + getAccount().hashCode();
            }
            hash = (37 * hash) + PERMISSION_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getPermissionName().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.authority parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.authority parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.authority prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.authority}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.authority)
                com.cryptowallet.crypto.Protocol.authorityOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_authority_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_authority_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.authority.class, com.cryptowallet.crypto.Protocol.authority.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.authority.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (accountBuilder_ == null) {
                    account_ = null;
                } else {
                    account_ = null;
                    accountBuilder_ = null;
                }
                permissionName_ = com.google.protobuf.ByteString.EMPTY;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_authority_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.authority getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.authority.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.authority build() {
                com.cryptowallet.crypto.Protocol.authority result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.authority buildPartial() {
                com.cryptowallet.crypto.Protocol.authority result = new com.cryptowallet.crypto.Protocol.authority(this);
                if (accountBuilder_ == null) {
                    result.account_ = account_;
                } else {
                    result.account_ = accountBuilder_.build();
                }
                result.permissionName_ = permissionName_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.authority) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.authority)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.authority other) {
                if (other == com.cryptowallet.crypto.Protocol.authority.getDefaultInstance()) return this;
                if (other.hasAccount()) {
                    mergeAccount(other.getAccount());
                }
                if (other.getPermissionName() != com.google.protobuf.ByteString.EMPTY) {
                    setPermissionName(other.getPermissionName());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.authority parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.authority) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.cryptowallet.crypto.Protocol.AccountId account_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.AccountId, com.cryptowallet.crypto.Protocol.AccountId.Builder, com.cryptowallet.crypto.Protocol.AccountIdOrBuilder> accountBuilder_;
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public boolean hasAccount() {
                return accountBuilder_ != null || account_ != null;
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.AccountId getAccount() {
                if (accountBuilder_ == null) {
                    return account_ == null ? com.cryptowallet.crypto.Protocol.AccountId.getDefaultInstance() : account_;
                } else {
                    return accountBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public Builder setAccount(com.cryptowallet.crypto.Protocol.AccountId value) {
                if (accountBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    account_ = value;
                    onChanged();
                } else {
                    accountBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public Builder setAccount(
                    com.cryptowallet.crypto.Protocol.AccountId.Builder builderForValue) {
                if (accountBuilder_ == null) {
                    account_ = builderForValue.build();
                    onChanged();
                } else {
                    accountBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public Builder mergeAccount(com.cryptowallet.crypto.Protocol.AccountId value) {
                if (accountBuilder_ == null) {
                    if (account_ != null) {
                        account_ =
                                com.cryptowallet.crypto.Protocol.AccountId.newBuilder(account_).mergeFrom(value).buildPartial();
                    } else {
                        account_ = value;
                    }
                    onChanged();
                } else {
                    accountBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public Builder clearAccount() {
                if (accountBuilder_ == null) {
                    account_ = null;
                    onChanged();
                } else {
                    account_ = null;
                    accountBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.AccountId.Builder getAccountBuilder() {

                onChanged();
                return getAccountFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.AccountIdOrBuilder getAccountOrBuilder() {
                if (accountBuilder_ != null) {
                    return accountBuilder_.getMessageOrBuilder();
                } else {
                    return account_ == null ?
                            com.cryptowallet.crypto.Protocol.AccountId.getDefaultInstance() : account_;
                }
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.AccountId, com.cryptowallet.crypto.Protocol.AccountId.Builder, com.cryptowallet.crypto.Protocol.AccountIdOrBuilder>
            getAccountFieldBuilder() {
                if (accountBuilder_ == null) {
                    accountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.AccountId, com.cryptowallet.crypto.Protocol.AccountId.Builder, com.cryptowallet.crypto.Protocol.AccountIdOrBuilder>(
                            getAccount(),
                            getParentForChildren(),
                            isClean());
                    account_ = null;
                }
                return accountBuilder_;
            }

            private com.google.protobuf.ByteString permissionName_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes permission_name = 2;</code>
             */
            public com.google.protobuf.ByteString getPermissionName() {
                return permissionName_;
            }
            /**
             * <code>bytes permission_name = 2;</code>
             */
            public Builder setPermissionName(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                permissionName_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes permission_name = 2;</code>
             */
            public Builder clearPermissionName() {

                permissionName_ = getDefaultInstance().getPermissionName();
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.authority)
        }

        // @@protoc_insertion_point(class_scope:protocol.authority)
        private static final com.cryptowallet.crypto.Protocol.authority DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.authority();
        }

        public static com.cryptowallet.crypto.Protocol.authority getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<authority>
                PARSER = new com.google.protobuf.AbstractParser<authority>() {
            public authority parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new authority(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<authority> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<authority> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.authority getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface permissionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.permission)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        boolean hasAccount();
        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.AccountId getAccount();
        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.AccountIdOrBuilder getAccountOrBuilder();
    }
    /**
     * Protobuf type {@code protocol.permission}
     */
    public  static final class permission extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.permission)
            permissionOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use permission.newBuilder() to construct.
        private permission(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private permission() {
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private permission(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.cryptowallet.crypto.Protocol.AccountId.Builder subBuilder = null;
                            if (account_ != null) {
                                subBuilder = account_.toBuilder();
                            }
                            account_ = input.readMessage(com.cryptowallet.crypto.Protocol.AccountId.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(account_);
                                account_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_permission_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_permission_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.permission.class, com.cryptowallet.crypto.Protocol.permission.Builder.class);
        }

        public static final int ACCOUNT_FIELD_NUMBER = 1;
        private com.cryptowallet.crypto.Protocol.AccountId account_;
        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        public boolean hasAccount() {
            return account_ != null;
        }
        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.AccountId getAccount() {
            return account_ == null ? com.cryptowallet.crypto.Protocol.AccountId.getDefaultInstance() : account_;
        }
        /**
         * <code>.protocol.AccountId account = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.AccountIdOrBuilder getAccountOrBuilder() {
            return getAccount();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (account_ != null) {
                output.writeMessage(1, getAccount());
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (account_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getAccount());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.permission)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.permission other = (com.cryptowallet.crypto.Protocol.permission) obj;

            boolean result = true;
            result = result && (hasAccount() == other.hasAccount());
            if (hasAccount()) {
                result = result && getAccount()
                        .equals(other.getAccount());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasAccount()) {
                hash = (37 * hash) + ACCOUNT_FIELD_NUMBER;
                hash = (53 * hash) + getAccount().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.permission parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.permission parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.permission prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.permission}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.permission)
                com.cryptowallet.crypto.Protocol.permissionOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_permission_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_permission_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.permission.class, com.cryptowallet.crypto.Protocol.permission.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.permission.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (accountBuilder_ == null) {
                    account_ = null;
                } else {
                    account_ = null;
                    accountBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_permission_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.permission getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.permission.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.permission build() {
                com.cryptowallet.crypto.Protocol.permission result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.permission buildPartial() {
                com.cryptowallet.crypto.Protocol.permission result = new com.cryptowallet.crypto.Protocol.permission(this);
                if (accountBuilder_ == null) {
                    result.account_ = account_;
                } else {
                    result.account_ = accountBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.permission) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.permission)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.permission other) {
                if (other == com.cryptowallet.crypto.Protocol.permission.getDefaultInstance()) return this;
                if (other.hasAccount()) {
                    mergeAccount(other.getAccount());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.permission parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.permission) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.cryptowallet.crypto.Protocol.AccountId account_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.AccountId, com.cryptowallet.crypto.Protocol.AccountId.Builder, com.cryptowallet.crypto.Protocol.AccountIdOrBuilder> accountBuilder_;
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public boolean hasAccount() {
                return accountBuilder_ != null || account_ != null;
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.AccountId getAccount() {
                if (accountBuilder_ == null) {
                    return account_ == null ? com.cryptowallet.crypto.Protocol.AccountId.getDefaultInstance() : account_;
                } else {
                    return accountBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public Builder setAccount(com.cryptowallet.crypto.Protocol.AccountId value) {
                if (accountBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    account_ = value;
                    onChanged();
                } else {
                    accountBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public Builder setAccount(
                    com.cryptowallet.crypto.Protocol.AccountId.Builder builderForValue) {
                if (accountBuilder_ == null) {
                    account_ = builderForValue.build();
                    onChanged();
                } else {
                    accountBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public Builder mergeAccount(com.cryptowallet.crypto.Protocol.AccountId value) {
                if (accountBuilder_ == null) {
                    if (account_ != null) {
                        account_ =
                                com.cryptowallet.crypto.Protocol.AccountId.newBuilder(account_).mergeFrom(value).buildPartial();
                    } else {
                        account_ = value;
                    }
                    onChanged();
                } else {
                    accountBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public Builder clearAccount() {
                if (accountBuilder_ == null) {
                    account_ = null;
                    onChanged();
                } else {
                    account_ = null;
                    accountBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.AccountId.Builder getAccountBuilder() {

                onChanged();
                return getAccountFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.AccountIdOrBuilder getAccountOrBuilder() {
                if (accountBuilder_ != null) {
                    return accountBuilder_.getMessageOrBuilder();
                } else {
                    return account_ == null ?
                            com.cryptowallet.crypto.Protocol.AccountId.getDefaultInstance() : account_;
                }
            }
            /**
             * <code>.protocol.AccountId account = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.AccountId, com.cryptowallet.crypto.Protocol.AccountId.Builder, com.cryptowallet.crypto.Protocol.AccountIdOrBuilder>
            getAccountFieldBuilder() {
                if (accountBuilder_ == null) {
                    accountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.AccountId, com.cryptowallet.crypto.Protocol.AccountId.Builder, com.cryptowallet.crypto.Protocol.AccountIdOrBuilder>(
                            getAccount(),
                            getParentForChildren(),
                            isClean());
                    account_ = null;
                }
                return accountBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.permission)
        }

        // @@protoc_insertion_point(class_scope:protocol.permission)
        private static final com.cryptowallet.crypto.Protocol.permission DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.permission();
        }

        public static com.cryptowallet.crypto.Protocol.permission getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<permission>
                PARSER = new com.google.protobuf.AbstractParser<permission>() {
            public permission parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new permission(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<permission> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<permission> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.permission getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface WitnessOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Witness)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>bytes address = 1;</code>
         */
        com.google.protobuf.ByteString getAddress();

        /**
         * <code>int64 voteCount = 2;</code>
         */
        long getVoteCount();

        /**
         * <code>bytes pubKey = 3;</code>
         */
        com.google.protobuf.ByteString getPubKey();

        /**
         * <code>string url = 4;</code>
         */
        java.lang.String getUrl();
        /**
         * <code>string url = 4;</code>
         */
        com.google.protobuf.ByteString
        getUrlBytes();

        /**
         * <code>int64 totalProduced = 5;</code>
         */
        long getTotalProduced();

        /**
         * <code>int64 totalMissed = 6;</code>
         */
        long getTotalMissed();

        /**
         * <code>int64 latestBlockNum = 7;</code>
         */
        long getLatestBlockNum();

        /**
         * <code>int64 latestSlotNum = 8;</code>
         */
        long getLatestSlotNum();

        /**
         * <code>bool isJobs = 9;</code>
         */
        boolean getIsJobs();
    }
    /**
     * <pre>
     * Witness
     * </pre>
     *
     * Protobuf type {@code protocol.Witness}
     */
    public  static final class Witness extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Witness)
            WitnessOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Witness.newBuilder() to construct.
        private Witness(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Witness() {
            address_ = com.google.protobuf.ByteString.EMPTY;
            voteCount_ = 0L;
            pubKey_ = com.google.protobuf.ByteString.EMPTY;
            url_ = "";
            totalProduced_ = 0L;
            totalMissed_ = 0L;
            latestBlockNum_ = 0L;
            latestSlotNum_ = 0L;
            isJobs_ = false;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Witness(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {

                            address_ = input.readBytes();
                            break;
                        }
                        case 16: {

                            voteCount_ = input.readInt64();
                            break;
                        }
                        case 26: {

                            pubKey_ = input.readBytes();
                            break;
                        }
                        case 34: {
                            java.lang.String s = input.readStringRequireUtf8();

                            url_ = s;
                            break;
                        }
                        case 40: {

                            totalProduced_ = input.readInt64();
                            break;
                        }
                        case 48: {

                            totalMissed_ = input.readInt64();
                            break;
                        }
                        case 56: {

                            latestBlockNum_ = input.readInt64();
                            break;
                        }
                        case 64: {

                            latestSlotNum_ = input.readInt64();
                            break;
                        }
                        case 72: {

                            isJobs_ = input.readBool();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Witness_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Witness_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Witness.class, com.cryptowallet.crypto.Protocol.Witness.Builder.class);
        }

        public static final int ADDRESS_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString address_;
        /**
         * <code>bytes address = 1;</code>
         */
        public com.google.protobuf.ByteString getAddress() {
            return address_;
        }

        public static final int VOTECOUNT_FIELD_NUMBER = 2;
        private long voteCount_;
        /**
         * <code>int64 voteCount = 2;</code>
         */
        public long getVoteCount() {
            return voteCount_;
        }

        public static final int PUBKEY_FIELD_NUMBER = 3;
        private com.google.protobuf.ByteString pubKey_;
        /**
         * <code>bytes pubKey = 3;</code>
         */
        public com.google.protobuf.ByteString getPubKey() {
            return pubKey_;
        }

        public static final int URL_FIELD_NUMBER = 4;
        private volatile java.lang.Object url_;
        /**
         * <code>string url = 4;</code>
         */
        public java.lang.String getUrl() {
            java.lang.Object ref = url_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                url_ = s;
                return s;
            }
        }
        /**
         * <code>string url = 4;</code>
         */
        public com.google.protobuf.ByteString
        getUrlBytes() {
            java.lang.Object ref = url_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                url_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int TOTALPRODUCED_FIELD_NUMBER = 5;
        private long totalProduced_;
        /**
         * <code>int64 totalProduced = 5;</code>
         */
        public long getTotalProduced() {
            return totalProduced_;
        }

        public static final int TOTALMISSED_FIELD_NUMBER = 6;
        private long totalMissed_;
        /**
         * <code>int64 totalMissed = 6;</code>
         */
        public long getTotalMissed() {
            return totalMissed_;
        }

        public static final int LATESTBLOCKNUM_FIELD_NUMBER = 7;
        private long latestBlockNum_;
        /**
         * <code>int64 latestBlockNum = 7;</code>
         */
        public long getLatestBlockNum() {
            return latestBlockNum_;
        }

        public static final int LATESTSLOTNUM_FIELD_NUMBER = 8;
        private long latestSlotNum_;
        /**
         * <code>int64 latestSlotNum = 8;</code>
         */
        public long getLatestSlotNum() {
            return latestSlotNum_;
        }

        public static final int ISJOBS_FIELD_NUMBER = 9;
        private boolean isJobs_;
        /**
         * <code>bool isJobs = 9;</code>
         */
        public boolean getIsJobs() {
            return isJobs_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!address_.isEmpty()) {
                output.writeBytes(1, address_);
            }
            if (voteCount_ != 0L) {
                output.writeInt64(2, voteCount_);
            }
            if (!pubKey_.isEmpty()) {
                output.writeBytes(3, pubKey_);
            }
            if (!getUrlBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, url_);
            }
            if (totalProduced_ != 0L) {
                output.writeInt64(5, totalProduced_);
            }
            if (totalMissed_ != 0L) {
                output.writeInt64(6, totalMissed_);
            }
            if (latestBlockNum_ != 0L) {
                output.writeInt64(7, latestBlockNum_);
            }
            if (latestSlotNum_ != 0L) {
                output.writeInt64(8, latestSlotNum_);
            }
            if (isJobs_ != false) {
                output.writeBool(9, isJobs_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!address_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, address_);
            }
            if (voteCount_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, voteCount_);
            }
            if (!pubKey_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, pubKey_);
            }
            if (!getUrlBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, url_);
            }
            if (totalProduced_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(5, totalProduced_);
            }
            if (totalMissed_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(6, totalMissed_);
            }
            if (latestBlockNum_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(7, latestBlockNum_);
            }
            if (latestSlotNum_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(8, latestSlotNum_);
            }
            if (isJobs_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(9, isJobs_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Witness)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Witness other = (com.cryptowallet.crypto.Protocol.Witness) obj;

            boolean result = true;
            result = result && getAddress()
                    .equals(other.getAddress());
            result = result && (getVoteCount()
                    == other.getVoteCount());
            result = result && getPubKey()
                    .equals(other.getPubKey());
            result = result && getUrl()
                    .equals(other.getUrl());
            result = result && (getTotalProduced()
                    == other.getTotalProduced());
            result = result && (getTotalMissed()
                    == other.getTotalMissed());
            result = result && (getLatestBlockNum()
                    == other.getLatestBlockNum());
            result = result && (getLatestSlotNum()
                    == other.getLatestSlotNum());
            result = result && (getIsJobs()
                    == other.getIsJobs());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getAddress().hashCode();
            hash = (37 * hash) + VOTECOUNT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getVoteCount());
            hash = (37 * hash) + PUBKEY_FIELD_NUMBER;
            hash = (53 * hash) + getPubKey().hashCode();
            hash = (37 * hash) + URL_FIELD_NUMBER;
            hash = (53 * hash) + getUrl().hashCode();
            hash = (37 * hash) + TOTALPRODUCED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getTotalProduced());
            hash = (37 * hash) + TOTALMISSED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getTotalMissed());
            hash = (37 * hash) + LATESTBLOCKNUM_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getLatestBlockNum());
            hash = (37 * hash) + LATESTSLOTNUM_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getLatestSlotNum());
            hash = (37 * hash) + ISJOBS_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsJobs());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Witness parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Witness parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Witness prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         * Witness
         * </pre>
         *
         * Protobuf type {@code protocol.Witness}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Witness)
                com.cryptowallet.crypto.Protocol.WitnessOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Witness_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Witness_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Witness.class, com.cryptowallet.crypto.Protocol.Witness.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Witness.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                address_ = com.google.protobuf.ByteString.EMPTY;

                voteCount_ = 0L;

                pubKey_ = com.google.protobuf.ByteString.EMPTY;

                url_ = "";

                totalProduced_ = 0L;

                totalMissed_ = 0L;

                latestBlockNum_ = 0L;

                latestSlotNum_ = 0L;

                isJobs_ = false;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Witness_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Witness getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Witness.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Witness build() {
                com.cryptowallet.crypto.Protocol.Witness result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Witness buildPartial() {
                com.cryptowallet.crypto.Protocol.Witness result = new com.cryptowallet.crypto.Protocol.Witness(this);
                result.address_ = address_;
                result.voteCount_ = voteCount_;
                result.pubKey_ = pubKey_;
                result.url_ = url_;
                result.totalProduced_ = totalProduced_;
                result.totalMissed_ = totalMissed_;
                result.latestBlockNum_ = latestBlockNum_;
                result.latestSlotNum_ = latestSlotNum_;
                result.isJobs_ = isJobs_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Witness) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Witness)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Witness other) {
                if (other == com.cryptowallet.crypto.Protocol.Witness.getDefaultInstance()) return this;
                if (other.getAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setAddress(other.getAddress());
                }
                if (other.getVoteCount() != 0L) {
                    setVoteCount(other.getVoteCount());
                }
                if (other.getPubKey() != com.google.protobuf.ByteString.EMPTY) {
                    setPubKey(other.getPubKey());
                }
                if (!other.getUrl().isEmpty()) {
                    url_ = other.url_;
                    onChanged();
                }
                if (other.getTotalProduced() != 0L) {
                    setTotalProduced(other.getTotalProduced());
                }
                if (other.getTotalMissed() != 0L) {
                    setTotalMissed(other.getTotalMissed());
                }
                if (other.getLatestBlockNum() != 0L) {
                    setLatestBlockNum(other.getLatestBlockNum());
                }
                if (other.getLatestSlotNum() != 0L) {
                    setLatestSlotNum(other.getLatestSlotNum());
                }
                if (other.getIsJobs() != false) {
                    setIsJobs(other.getIsJobs());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Witness parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Witness) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.google.protobuf.ByteString address_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes address = 1;</code>
             */
            public com.google.protobuf.ByteString getAddress() {
                return address_;
            }
            /**
             * <code>bytes address = 1;</code>
             */
            public Builder setAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                address_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes address = 1;</code>
             */
            public Builder clearAddress() {

                address_ = getDefaultInstance().getAddress();
                onChanged();
                return this;
            }

            private long voteCount_ ;
            /**
             * <code>int64 voteCount = 2;</code>
             */
            public long getVoteCount() {
                return voteCount_;
            }
            /**
             * <code>int64 voteCount = 2;</code>
             */
            public Builder setVoteCount(long value) {

                voteCount_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 voteCount = 2;</code>
             */
            public Builder clearVoteCount() {

                voteCount_ = 0L;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString pubKey_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes pubKey = 3;</code>
             */
            public com.google.protobuf.ByteString getPubKey() {
                return pubKey_;
            }
            /**
             * <code>bytes pubKey = 3;</code>
             */
            public Builder setPubKey(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                pubKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes pubKey = 3;</code>
             */
            public Builder clearPubKey() {

                pubKey_ = getDefaultInstance().getPubKey();
                onChanged();
                return this;
            }

            private java.lang.Object url_ = "";
            /**
             * <code>string url = 4;</code>
             */
            public java.lang.String getUrl() {
                java.lang.Object ref = url_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    url_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>string url = 4;</code>
             */
            public com.google.protobuf.ByteString
            getUrlBytes() {
                java.lang.Object ref = url_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    url_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>string url = 4;</code>
             */
            public Builder setUrl(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                url_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>string url = 4;</code>
             */
            public Builder clearUrl() {

                url_ = getDefaultInstance().getUrl();
                onChanged();
                return this;
            }
            /**
             * <code>string url = 4;</code>
             */
            public Builder setUrlBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                url_ = value;
                onChanged();
                return this;
            }

            private long totalProduced_ ;
            /**
             * <code>int64 totalProduced = 5;</code>
             */
            public long getTotalProduced() {
                return totalProduced_;
            }
            /**
             * <code>int64 totalProduced = 5;</code>
             */
            public Builder setTotalProduced(long value) {

                totalProduced_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 totalProduced = 5;</code>
             */
            public Builder clearTotalProduced() {

                totalProduced_ = 0L;
                onChanged();
                return this;
            }

            private long totalMissed_ ;
            /**
             * <code>int64 totalMissed = 6;</code>
             */
            public long getTotalMissed() {
                return totalMissed_;
            }
            /**
             * <code>int64 totalMissed = 6;</code>
             */
            public Builder setTotalMissed(long value) {

                totalMissed_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 totalMissed = 6;</code>
             */
            public Builder clearTotalMissed() {

                totalMissed_ = 0L;
                onChanged();
                return this;
            }

            private long latestBlockNum_ ;
            /**
             * <code>int64 latestBlockNum = 7;</code>
             */
            public long getLatestBlockNum() {
                return latestBlockNum_;
            }
            /**
             * <code>int64 latestBlockNum = 7;</code>
             */
            public Builder setLatestBlockNum(long value) {

                latestBlockNum_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 latestBlockNum = 7;</code>
             */
            public Builder clearLatestBlockNum() {

                latestBlockNum_ = 0L;
                onChanged();
                return this;
            }

            private long latestSlotNum_ ;
            /**
             * <code>int64 latestSlotNum = 8;</code>
             */
            public long getLatestSlotNum() {
                return latestSlotNum_;
            }
            /**
             * <code>int64 latestSlotNum = 8;</code>
             */
            public Builder setLatestSlotNum(long value) {

                latestSlotNum_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 latestSlotNum = 8;</code>
             */
            public Builder clearLatestSlotNum() {

                latestSlotNum_ = 0L;
                onChanged();
                return this;
            }

            private boolean isJobs_ ;
            /**
             * <code>bool isJobs = 9;</code>
             */
            public boolean getIsJobs() {
                return isJobs_;
            }
            /**
             * <code>bool isJobs = 9;</code>
             */
            public Builder setIsJobs(boolean value) {

                isJobs_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bool isJobs = 9;</code>
             */
            public Builder clearIsJobs() {

                isJobs_ = false;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Witness)
        }

        // @@protoc_insertion_point(class_scope:protocol.Witness)
        private static final com.cryptowallet.crypto.Protocol.Witness DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Witness();
        }

        public static com.cryptowallet.crypto.Protocol.Witness getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Witness>
                PARSER = new com.google.protobuf.AbstractParser<Witness>() {
            public Witness parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Witness(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Witness> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Witness> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Witness getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface VotesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Votes)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>bytes address = 1;</code>
         */
        com.google.protobuf.ByteString getAddress();

        /**
         * <code>repeated .protocol.Vote old_votes = 2;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.Vote>
        getOldVotesList();
        /**
         * <code>repeated .protocol.Vote old_votes = 2;</code>
         */
        com.cryptowallet.crypto.Protocol.Vote getOldVotes(int index);
        /**
         * <code>repeated .protocol.Vote old_votes = 2;</code>
         */
        int getOldVotesCount();
        /**
         * <code>repeated .protocol.Vote old_votes = 2;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.VoteOrBuilder>
        getOldVotesOrBuilderList();
        /**
         * <code>repeated .protocol.Vote old_votes = 2;</code>
         */
        com.cryptowallet.crypto.Protocol.VoteOrBuilder getOldVotesOrBuilder(
                int index);

        /**
         * <code>repeated .protocol.Vote new_votes = 3;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.Vote>
        getNewVotesList();
        /**
         * <code>repeated .protocol.Vote new_votes = 3;</code>
         */
        com.cryptowallet.crypto.Protocol.Vote getNewVotes(int index);
        /**
         * <code>repeated .protocol.Vote new_votes = 3;</code>
         */
        int getNewVotesCount();
        /**
         * <code>repeated .protocol.Vote new_votes = 3;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.VoteOrBuilder>
        getNewVotesOrBuilderList();
        /**
         * <code>repeated .protocol.Vote new_votes = 3;</code>
         */
        com.cryptowallet.crypto.Protocol.VoteOrBuilder getNewVotesOrBuilder(
                int index);
    }
    /**
     * <pre>
     * Vote Change
     * </pre>
     *
     * Protobuf type {@code protocol.Votes}
     */
    public  static final class Votes extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Votes)
            VotesOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Votes.newBuilder() to construct.
        private Votes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Votes() {
            address_ = com.google.protobuf.ByteString.EMPTY;
            oldVotes_ = java.util.Collections.emptyList();
            newVotes_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Votes(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {

                            address_ = input.readBytes();
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                oldVotes_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Vote>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            oldVotes_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.Vote.parser(), extensionRegistry));
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                newVotes_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Vote>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            newVotes_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.Vote.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    oldVotes_ = java.util.Collections.unmodifiableList(oldVotes_);
                }
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    newVotes_ = java.util.Collections.unmodifiableList(newVotes_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Votes_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Votes_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Votes.class, com.cryptowallet.crypto.Protocol.Votes.Builder.class);
        }

        private int bitField0_;
        public static final int ADDRESS_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString address_;
        /**
         * <code>bytes address = 1;</code>
         */
        public com.google.protobuf.ByteString getAddress() {
            return address_;
        }

        public static final int OLD_VOTES_FIELD_NUMBER = 2;
        private java.util.List<com.cryptowallet.crypto.Protocol.Vote> oldVotes_;
        /**
         * <code>repeated .protocol.Vote old_votes = 2;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.Vote> getOldVotesList() {
            return oldVotes_;
        }
        /**
         * <code>repeated .protocol.Vote old_votes = 2;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.VoteOrBuilder>
        getOldVotesOrBuilderList() {
            return oldVotes_;
        }
        /**
         * <code>repeated .protocol.Vote old_votes = 2;</code>
         */
        public int getOldVotesCount() {
            return oldVotes_.size();
        }
        /**
         * <code>repeated .protocol.Vote old_votes = 2;</code>
         */
        public com.cryptowallet.crypto.Protocol.Vote getOldVotes(int index) {
            return oldVotes_.get(index);
        }
        /**
         * <code>repeated .protocol.Vote old_votes = 2;</code>
         */
        public com.cryptowallet.crypto.Protocol.VoteOrBuilder getOldVotesOrBuilder(
                int index) {
            return oldVotes_.get(index);
        }

        public static final int NEW_VOTES_FIELD_NUMBER = 3;
        private java.util.List<com.cryptowallet.crypto.Protocol.Vote> newVotes_;
        /**
         * <code>repeated .protocol.Vote new_votes = 3;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.Vote> getNewVotesList() {
            return newVotes_;
        }
        /**
         * <code>repeated .protocol.Vote new_votes = 3;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.VoteOrBuilder>
        getNewVotesOrBuilderList() {
            return newVotes_;
        }
        /**
         * <code>repeated .protocol.Vote new_votes = 3;</code>
         */
        public int getNewVotesCount() {
            return newVotes_.size();
        }
        /**
         * <code>repeated .protocol.Vote new_votes = 3;</code>
         */
        public com.cryptowallet.crypto.Protocol.Vote getNewVotes(int index) {
            return newVotes_.get(index);
        }
        /**
         * <code>repeated .protocol.Vote new_votes = 3;</code>
         */
        public com.cryptowallet.crypto.Protocol.VoteOrBuilder getNewVotesOrBuilder(
                int index) {
            return newVotes_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!address_.isEmpty()) {
                output.writeBytes(1, address_);
            }
            for (int i = 0; i < oldVotes_.size(); i++) {
                output.writeMessage(2, oldVotes_.get(i));
            }
            for (int i = 0; i < newVotes_.size(); i++) {
                output.writeMessage(3, newVotes_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!address_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, address_);
            }
            for (int i = 0; i < oldVotes_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, oldVotes_.get(i));
            }
            for (int i = 0; i < newVotes_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, newVotes_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Votes)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Votes other = (com.cryptowallet.crypto.Protocol.Votes) obj;

            boolean result = true;
            result = result && getAddress()
                    .equals(other.getAddress());
            result = result && getOldVotesList()
                    .equals(other.getOldVotesList());
            result = result && getNewVotesList()
                    .equals(other.getNewVotesList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getAddress().hashCode();
            if (getOldVotesCount() > 0) {
                hash = (37 * hash) + OLD_VOTES_FIELD_NUMBER;
                hash = (53 * hash) + getOldVotesList().hashCode();
            }
            if (getNewVotesCount() > 0) {
                hash = (37 * hash) + NEW_VOTES_FIELD_NUMBER;
                hash = (53 * hash) + getNewVotesList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Votes parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Votes parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Votes prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         * Vote Change
         * </pre>
         *
         * Protobuf type {@code protocol.Votes}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Votes)
                com.cryptowallet.crypto.Protocol.VotesOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Votes_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Votes_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Votes.class, com.cryptowallet.crypto.Protocol.Votes.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Votes.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getOldVotesFieldBuilder();
                    getNewVotesFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                address_ = com.google.protobuf.ByteString.EMPTY;

                if (oldVotesBuilder_ == null) {
                    oldVotes_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    oldVotesBuilder_.clear();
                }
                if (newVotesBuilder_ == null) {
                    newVotes_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    newVotesBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Votes_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Votes getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Votes.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Votes build() {
                com.cryptowallet.crypto.Protocol.Votes result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Votes buildPartial() {
                com.cryptowallet.crypto.Protocol.Votes result = new com.cryptowallet.crypto.Protocol.Votes(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.address_ = address_;
                if (oldVotesBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        oldVotes_ = java.util.Collections.unmodifiableList(oldVotes_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.oldVotes_ = oldVotes_;
                } else {
                    result.oldVotes_ = oldVotesBuilder_.build();
                }
                if (newVotesBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004)) {
                        newVotes_ = java.util.Collections.unmodifiableList(newVotes_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.newVotes_ = newVotes_;
                } else {
                    result.newVotes_ = newVotesBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Votes) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Votes)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Votes other) {
                if (other == com.cryptowallet.crypto.Protocol.Votes.getDefaultInstance()) return this;
                if (other.getAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setAddress(other.getAddress());
                }
                if (oldVotesBuilder_ == null) {
                    if (!other.oldVotes_.isEmpty()) {
                        if (oldVotes_.isEmpty()) {
                            oldVotes_ = other.oldVotes_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureOldVotesIsMutable();
                            oldVotes_.addAll(other.oldVotes_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.oldVotes_.isEmpty()) {
                        if (oldVotesBuilder_.isEmpty()) {
                            oldVotesBuilder_.dispose();
                            oldVotesBuilder_ = null;
                            oldVotes_ = other.oldVotes_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            oldVotesBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getOldVotesFieldBuilder() : null;
                        } else {
                            oldVotesBuilder_.addAllMessages(other.oldVotes_);
                        }
                    }
                }
                if (newVotesBuilder_ == null) {
                    if (!other.newVotes_.isEmpty()) {
                        if (newVotes_.isEmpty()) {
                            newVotes_ = other.newVotes_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureNewVotesIsMutable();
                            newVotes_.addAll(other.newVotes_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.newVotes_.isEmpty()) {
                        if (newVotesBuilder_.isEmpty()) {
                            newVotesBuilder_.dispose();
                            newVotesBuilder_ = null;
                            newVotes_ = other.newVotes_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            newVotesBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getNewVotesFieldBuilder() : null;
                        } else {
                            newVotesBuilder_.addAllMessages(other.newVotes_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Votes parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Votes) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private com.google.protobuf.ByteString address_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes address = 1;</code>
             */
            public com.google.protobuf.ByteString getAddress() {
                return address_;
            }
            /**
             * <code>bytes address = 1;</code>
             */
            public Builder setAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                address_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes address = 1;</code>
             */
            public Builder clearAddress() {

                address_ = getDefaultInstance().getAddress();
                onChanged();
                return this;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.Vote> oldVotes_ =
                    java.util.Collections.emptyList();
            private void ensureOldVotesIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    oldVotes_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Vote>(oldVotes_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Vote, com.cryptowallet.crypto.Protocol.Vote.Builder, com.cryptowallet.crypto.Protocol.VoteOrBuilder> oldVotesBuilder_;

            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Vote> getOldVotesList() {
                if (oldVotesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(oldVotes_);
                } else {
                    return oldVotesBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public int getOldVotesCount() {
                if (oldVotesBuilder_ == null) {
                    return oldVotes_.size();
                } else {
                    return oldVotesBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote getOldVotes(int index) {
                if (oldVotesBuilder_ == null) {
                    return oldVotes_.get(index);
                } else {
                    return oldVotesBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public Builder setOldVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote value) {
                if (oldVotesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOldVotesIsMutable();
                    oldVotes_.set(index, value);
                    onChanged();
                } else {
                    oldVotesBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public Builder setOldVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote.Builder builderForValue) {
                if (oldVotesBuilder_ == null) {
                    ensureOldVotesIsMutable();
                    oldVotes_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    oldVotesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public Builder addOldVotes(com.cryptowallet.crypto.Protocol.Vote value) {
                if (oldVotesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOldVotesIsMutable();
                    oldVotes_.add(value);
                    onChanged();
                } else {
                    oldVotesBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public Builder addOldVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote value) {
                if (oldVotesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOldVotesIsMutable();
                    oldVotes_.add(index, value);
                    onChanged();
                } else {
                    oldVotesBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public Builder addOldVotes(
                    com.cryptowallet.crypto.Protocol.Vote.Builder builderForValue) {
                if (oldVotesBuilder_ == null) {
                    ensureOldVotesIsMutable();
                    oldVotes_.add(builderForValue.build());
                    onChanged();
                } else {
                    oldVotesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public Builder addOldVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote.Builder builderForValue) {
                if (oldVotesBuilder_ == null) {
                    ensureOldVotesIsMutable();
                    oldVotes_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    oldVotesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public Builder addAllOldVotes(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Vote> values) {
                if (oldVotesBuilder_ == null) {
                    ensureOldVotesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, oldVotes_);
                    onChanged();
                } else {
                    oldVotesBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public Builder clearOldVotes() {
                if (oldVotesBuilder_ == null) {
                    oldVotes_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    oldVotesBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public Builder removeOldVotes(int index) {
                if (oldVotesBuilder_ == null) {
                    ensureOldVotesIsMutable();
                    oldVotes_.remove(index);
                    onChanged();
                } else {
                    oldVotesBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote.Builder getOldVotesBuilder(
                    int index) {
                return getOldVotesFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.VoteOrBuilder getOldVotesOrBuilder(
                    int index) {
                if (oldVotesBuilder_ == null) {
                    return oldVotes_.get(index);  } else {
                    return oldVotesBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.VoteOrBuilder>
            getOldVotesOrBuilderList() {
                if (oldVotesBuilder_ != null) {
                    return oldVotesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(oldVotes_);
                }
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote.Builder addOldVotesBuilder() {
                return getOldVotesFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.Vote.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote.Builder addOldVotesBuilder(
                    int index) {
                return getOldVotesFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.Vote.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Vote old_votes = 2;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Vote.Builder>
            getOldVotesBuilderList() {
                return getOldVotesFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Vote, com.cryptowallet.crypto.Protocol.Vote.Builder, com.cryptowallet.crypto.Protocol.VoteOrBuilder>
            getOldVotesFieldBuilder() {
                if (oldVotesBuilder_ == null) {
                    oldVotesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Vote, com.cryptowallet.crypto.Protocol.Vote.Builder, com.cryptowallet.crypto.Protocol.VoteOrBuilder>(
                            oldVotes_,
                            ((bitField0_ & 0x00000002) == 0x00000002),
                            getParentForChildren(),
                            isClean());
                    oldVotes_ = null;
                }
                return oldVotesBuilder_;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.Vote> newVotes_ =
                    java.util.Collections.emptyList();
            private void ensureNewVotesIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    newVotes_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Vote>(newVotes_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Vote, com.cryptowallet.crypto.Protocol.Vote.Builder, com.cryptowallet.crypto.Protocol.VoteOrBuilder> newVotesBuilder_;

            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Vote> getNewVotesList() {
                if (newVotesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(newVotes_);
                } else {
                    return newVotesBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public int getNewVotesCount() {
                if (newVotesBuilder_ == null) {
                    return newVotes_.size();
                } else {
                    return newVotesBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote getNewVotes(int index) {
                if (newVotesBuilder_ == null) {
                    return newVotes_.get(index);
                } else {
                    return newVotesBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public Builder setNewVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote value) {
                if (newVotesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureNewVotesIsMutable();
                    newVotes_.set(index, value);
                    onChanged();
                } else {
                    newVotesBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public Builder setNewVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote.Builder builderForValue) {
                if (newVotesBuilder_ == null) {
                    ensureNewVotesIsMutable();
                    newVotes_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    newVotesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public Builder addNewVotes(com.cryptowallet.crypto.Protocol.Vote value) {
                if (newVotesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureNewVotesIsMutable();
                    newVotes_.add(value);
                    onChanged();
                } else {
                    newVotesBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public Builder addNewVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote value) {
                if (newVotesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureNewVotesIsMutable();
                    newVotes_.add(index, value);
                    onChanged();
                } else {
                    newVotesBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public Builder addNewVotes(
                    com.cryptowallet.crypto.Protocol.Vote.Builder builderForValue) {
                if (newVotesBuilder_ == null) {
                    ensureNewVotesIsMutable();
                    newVotes_.add(builderForValue.build());
                    onChanged();
                } else {
                    newVotesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public Builder addNewVotes(
                    int index, com.cryptowallet.crypto.Protocol.Vote.Builder builderForValue) {
                if (newVotesBuilder_ == null) {
                    ensureNewVotesIsMutable();
                    newVotes_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    newVotesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public Builder addAllNewVotes(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Vote> values) {
                if (newVotesBuilder_ == null) {
                    ensureNewVotesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, newVotes_);
                    onChanged();
                } else {
                    newVotesBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public Builder clearNewVotes() {
                if (newVotesBuilder_ == null) {
                    newVotes_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    newVotesBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public Builder removeNewVotes(int index) {
                if (newVotesBuilder_ == null) {
                    ensureNewVotesIsMutable();
                    newVotes_.remove(index);
                    onChanged();
                } else {
                    newVotesBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote.Builder getNewVotesBuilder(
                    int index) {
                return getNewVotesFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.VoteOrBuilder getNewVotesOrBuilder(
                    int index) {
                if (newVotesBuilder_ == null) {
                    return newVotes_.get(index);  } else {
                    return newVotesBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.VoteOrBuilder>
            getNewVotesOrBuilderList() {
                if (newVotesBuilder_ != null) {
                    return newVotesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(newVotes_);
                }
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote.Builder addNewVotesBuilder() {
                return getNewVotesFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.Vote.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.Vote.Builder addNewVotesBuilder(
                    int index) {
                return getNewVotesFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.Vote.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Vote new_votes = 3;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Vote.Builder>
            getNewVotesBuilderList() {
                return getNewVotesFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Vote, com.cryptowallet.crypto.Protocol.Vote.Builder, com.cryptowallet.crypto.Protocol.VoteOrBuilder>
            getNewVotesFieldBuilder() {
                if (newVotesBuilder_ == null) {
                    newVotesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Vote, com.cryptowallet.crypto.Protocol.Vote.Builder, com.cryptowallet.crypto.Protocol.VoteOrBuilder>(
                            newVotes_,
                            ((bitField0_ & 0x00000004) == 0x00000004),
                            getParentForChildren(),
                            isClean());
                    newVotes_ = null;
                }
                return newVotesBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Votes)
        }

        // @@protoc_insertion_point(class_scope:protocol.Votes)
        private static final com.cryptowallet.crypto.Protocol.Votes DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Votes();
        }

        public static com.cryptowallet.crypto.Protocol.Votes getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Votes>
                PARSER = new com.google.protobuf.AbstractParser<Votes>() {
            public Votes parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Votes(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Votes> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Votes> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Votes getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface TXOutputOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.TXOutput)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int64 value = 1;</code>
         */
        long getValue();

        /**
         * <code>bytes pubKeyHash = 2;</code>
         */
        com.google.protobuf.ByteString getPubKeyHash();
    }
    /**
     * Protobuf type {@code protocol.TXOutput}
     */
    public  static final class TXOutput extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.TXOutput)
            TXOutputOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use TXOutput.newBuilder() to construct.
        private TXOutput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private TXOutput() {
            value_ = 0L;
            pubKeyHash_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private TXOutput(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            value_ = input.readInt64();
                            break;
                        }
                        case 18: {

                            pubKeyHash_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXOutput_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXOutput_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.TXOutput.class, com.cryptowallet.crypto.Protocol.TXOutput.Builder.class);
        }

        public static final int VALUE_FIELD_NUMBER = 1;
        private long value_;
        /**
         * <code>int64 value = 1;</code>
         */
        public long getValue() {
            return value_;
        }

        public static final int PUBKEYHASH_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString pubKeyHash_;
        /**
         * <code>bytes pubKeyHash = 2;</code>
         */
        public com.google.protobuf.ByteString getPubKeyHash() {
            return pubKeyHash_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (value_ != 0L) {
                output.writeInt64(1, value_);
            }
            if (!pubKeyHash_.isEmpty()) {
                output.writeBytes(2, pubKeyHash_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (value_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, value_);
            }
            if (!pubKeyHash_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, pubKeyHash_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.TXOutput)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.TXOutput other = (com.cryptowallet.crypto.Protocol.TXOutput) obj;

            boolean result = true;
            result = result && (getValue()
                    == other.getValue());
            result = result && getPubKeyHash()
                    .equals(other.getPubKeyHash());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + VALUE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getValue());
            hash = (37 * hash) + PUBKEYHASH_FIELD_NUMBER;
            hash = (53 * hash) + getPubKeyHash().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.TXOutput parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutput parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.TXOutput prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.TXOutput}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.TXOutput)
                com.cryptowallet.crypto.Protocol.TXOutputOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXOutput_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXOutput_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.TXOutput.class, com.cryptowallet.crypto.Protocol.TXOutput.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.TXOutput.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                value_ = 0L;

                pubKeyHash_ = com.google.protobuf.ByteString.EMPTY;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXOutput_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.TXOutput getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.TXOutput.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.TXOutput build() {
                com.cryptowallet.crypto.Protocol.TXOutput result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.TXOutput buildPartial() {
                com.cryptowallet.crypto.Protocol.TXOutput result = new com.cryptowallet.crypto.Protocol.TXOutput(this);
                result.value_ = value_;
                result.pubKeyHash_ = pubKeyHash_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.TXOutput) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.TXOutput)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.TXOutput other) {
                if (other == com.cryptowallet.crypto.Protocol.TXOutput.getDefaultInstance()) return this;
                if (other.getValue() != 0L) {
                    setValue(other.getValue());
                }
                if (other.getPubKeyHash() != com.google.protobuf.ByteString.EMPTY) {
                    setPubKeyHash(other.getPubKeyHash());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.TXOutput parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.TXOutput) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private long value_ ;
            /**
             * <code>int64 value = 1;</code>
             */
            public long getValue() {
                return value_;
            }
            /**
             * <code>int64 value = 1;</code>
             */
            public Builder setValue(long value) {

                value_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 value = 1;</code>
             */
            public Builder clearValue() {

                value_ = 0L;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString pubKeyHash_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes pubKeyHash = 2;</code>
             */
            public com.google.protobuf.ByteString getPubKeyHash() {
                return pubKeyHash_;
            }
            /**
             * <code>bytes pubKeyHash = 2;</code>
             */
            public Builder setPubKeyHash(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                pubKeyHash_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes pubKeyHash = 2;</code>
             */
            public Builder clearPubKeyHash() {

                pubKeyHash_ = getDefaultInstance().getPubKeyHash();
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.TXOutput)
        }

        // @@protoc_insertion_point(class_scope:protocol.TXOutput)
        private static final com.cryptowallet.crypto.Protocol.TXOutput DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.TXOutput();
        }

        public static com.cryptowallet.crypto.Protocol.TXOutput getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<TXOutput>
                PARSER = new com.google.protobuf.AbstractParser<TXOutput>() {
            public TXOutput parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new TXOutput(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<TXOutput> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TXOutput> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.TXOutput getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface TXInputOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.TXInput)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.protocol.TXInput.raw raw_data = 1;</code>
         */
        boolean hasRawData();
        /**
         * <code>.protocol.TXInput.raw raw_data = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.TXInput.raw getRawData();
        /**
         * <code>.protocol.TXInput.raw raw_data = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.TXInput.rawOrBuilder getRawDataOrBuilder();

        /**
         * <code>bytes signature = 4;</code>
         */
        com.google.protobuf.ByteString getSignature();
    }
    /**
     * Protobuf type {@code protocol.TXInput}
     */
    public  static final class TXInput extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.TXInput)
            TXInputOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use TXInput.newBuilder() to construct.
        private TXInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private TXInput() {
            signature_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private TXInput(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.cryptowallet.crypto.Protocol.TXInput.raw.Builder subBuilder = null;
                            if (rawData_ != null) {
                                subBuilder = rawData_.toBuilder();
                            }
                            rawData_ = input.readMessage(com.cryptowallet.crypto.Protocol.TXInput.raw.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(rawData_);
                                rawData_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 34: {

                            signature_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXInput_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXInput_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.TXInput.class, com.cryptowallet.crypto.Protocol.TXInput.Builder.class);
        }

        public interface rawOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.TXInput.raw)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>bytes txID = 1;</code>
             */
            com.google.protobuf.ByteString getTxID();

            /**
             * <code>int64 vout = 2;</code>
             */
            long getVout();

            /**
             * <code>bytes pubKey = 3;</code>
             */
            com.google.protobuf.ByteString getPubKey();
        }
        /**
         * Protobuf type {@code protocol.TXInput.raw}
         */
        public  static final class raw extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.TXInput.raw)
                rawOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use raw.newBuilder() to construct.
            private raw(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private raw() {
                txID_ = com.google.protobuf.ByteString.EMPTY;
                vout_ = 0L;
                pubKey_ = com.google.protobuf.ByteString.EMPTY;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private raw(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {

                                txID_ = input.readBytes();
                                break;
                            }
                            case 16: {

                                vout_ = input.readInt64();
                                break;
                            }
                            case 26: {

                                pubKey_ = input.readBytes();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXInput_raw_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXInput_raw_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.TXInput.raw.class, com.cryptowallet.crypto.Protocol.TXInput.raw.Builder.class);
            }

            public static final int TXID_FIELD_NUMBER = 1;
            private com.google.protobuf.ByteString txID_;
            /**
             * <code>bytes txID = 1;</code>
             */
            public com.google.protobuf.ByteString getTxID() {
                return txID_;
            }

            public static final int VOUT_FIELD_NUMBER = 2;
            private long vout_;
            /**
             * <code>int64 vout = 2;</code>
             */
            public long getVout() {
                return vout_;
            }

            public static final int PUBKEY_FIELD_NUMBER = 3;
            private com.google.protobuf.ByteString pubKey_;
            /**
             * <code>bytes pubKey = 3;</code>
             */
            public com.google.protobuf.ByteString getPubKey() {
                return pubKey_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (!txID_.isEmpty()) {
                    output.writeBytes(1, txID_);
                }
                if (vout_ != 0L) {
                    output.writeInt64(2, vout_);
                }
                if (!pubKey_.isEmpty()) {
                    output.writeBytes(3, pubKey_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!txID_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(1, txID_);
                }
                if (vout_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(2, vout_);
                }
                if (!pubKey_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(3, pubKey_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.TXInput.raw)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.TXInput.raw other = (com.cryptowallet.crypto.Protocol.TXInput.raw) obj;

                boolean result = true;
                result = result && getTxID()
                        .equals(other.getTxID());
                result = result && (getVout()
                        == other.getVout());
                result = result && getPubKey()
                        .equals(other.getPubKey());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + TXID_FIELD_NUMBER;
                hash = (53 * hash) + getTxID().hashCode();
                hash = (37 * hash) + VOUT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getVout());
                hash = (37 * hash) + PUBKEY_FIELD_NUMBER;
                hash = (53 * hash) + getPubKey().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.TXInput.raw parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.TXInput.raw prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.TXInput.raw}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.TXInput.raw)
                    com.cryptowallet.crypto.Protocol.TXInput.rawOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXInput_raw_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXInput_raw_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.TXInput.raw.class, com.cryptowallet.crypto.Protocol.TXInput.raw.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.TXInput.raw.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    txID_ = com.google.protobuf.ByteString.EMPTY;

                    vout_ = 0L;

                    pubKey_ = com.google.protobuf.ByteString.EMPTY;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXInput_raw_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.TXInput.raw getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.TXInput.raw.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.TXInput.raw build() {
                    com.cryptowallet.crypto.Protocol.TXInput.raw result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.TXInput.raw buildPartial() {
                    com.cryptowallet.crypto.Protocol.TXInput.raw result = new com.cryptowallet.crypto.Protocol.TXInput.raw(this);
                    result.txID_ = txID_;
                    result.vout_ = vout_;
                    result.pubKey_ = pubKey_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.TXInput.raw) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.TXInput.raw)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.TXInput.raw other) {
                    if (other == com.cryptowallet.crypto.Protocol.TXInput.raw.getDefaultInstance()) return this;
                    if (other.getTxID() != com.google.protobuf.ByteString.EMPTY) {
                        setTxID(other.getTxID());
                    }
                    if (other.getVout() != 0L) {
                        setVout(other.getVout());
                    }
                    if (other.getPubKey() != com.google.protobuf.ByteString.EMPTY) {
                        setPubKey(other.getPubKey());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.TXInput.raw parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.TXInput.raw) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private com.google.protobuf.ByteString txID_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes txID = 1;</code>
                 */
                public com.google.protobuf.ByteString getTxID() {
                    return txID_;
                }
                /**
                 * <code>bytes txID = 1;</code>
                 */
                public Builder setTxID(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    txID_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes txID = 1;</code>
                 */
                public Builder clearTxID() {

                    txID_ = getDefaultInstance().getTxID();
                    onChanged();
                    return this;
                }

                private long vout_ ;
                /**
                 * <code>int64 vout = 2;</code>
                 */
                public long getVout() {
                    return vout_;
                }
                /**
                 * <code>int64 vout = 2;</code>
                 */
                public Builder setVout(long value) {

                    vout_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 vout = 2;</code>
                 */
                public Builder clearVout() {

                    vout_ = 0L;
                    onChanged();
                    return this;
                }

                private com.google.protobuf.ByteString pubKey_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes pubKey = 3;</code>
                 */
                public com.google.protobuf.ByteString getPubKey() {
                    return pubKey_;
                }
                /**
                 * <code>bytes pubKey = 3;</code>
                 */
                public Builder setPubKey(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    pubKey_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes pubKey = 3;</code>
                 */
                public Builder clearPubKey() {

                    pubKey_ = getDefaultInstance().getPubKey();
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.TXInput.raw)
            }

            // @@protoc_insertion_point(class_scope:protocol.TXInput.raw)
            private static final com.cryptowallet.crypto.Protocol.TXInput.raw DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.TXInput.raw();
            }

            public static com.cryptowallet.crypto.Protocol.TXInput.raw getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<raw>
                    PARSER = new com.google.protobuf.AbstractParser<raw>() {
                public raw parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new raw(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<raw> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<raw> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.TXInput.raw getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        public static final int RAW_DATA_FIELD_NUMBER = 1;
        private com.cryptowallet.crypto.Protocol.TXInput.raw rawData_;
        /**
         * <code>.protocol.TXInput.raw raw_data = 1;</code>
         */
        public boolean hasRawData() {
            return rawData_ != null;
        }
        /**
         * <code>.protocol.TXInput.raw raw_data = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.TXInput.raw getRawData() {
            return rawData_ == null ? com.cryptowallet.crypto.Protocol.TXInput.raw.getDefaultInstance() : rawData_;
        }
        /**
         * <code>.protocol.TXInput.raw raw_data = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.TXInput.rawOrBuilder getRawDataOrBuilder() {
            return getRawData();
        }

        public static final int SIGNATURE_FIELD_NUMBER = 4;
        private com.google.protobuf.ByteString signature_;
        /**
         * <code>bytes signature = 4;</code>
         */
        public com.google.protobuf.ByteString getSignature() {
            return signature_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (rawData_ != null) {
                output.writeMessage(1, getRawData());
            }
            if (!signature_.isEmpty()) {
                output.writeBytes(4, signature_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (rawData_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getRawData());
            }
            if (!signature_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(4, signature_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.TXInput)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.TXInput other = (com.cryptowallet.crypto.Protocol.TXInput) obj;

            boolean result = true;
            result = result && (hasRawData() == other.hasRawData());
            if (hasRawData()) {
                result = result && getRawData()
                        .equals(other.getRawData());
            }
            result = result && getSignature()
                    .equals(other.getSignature());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasRawData()) {
                hash = (37 * hash) + RAW_DATA_FIELD_NUMBER;
                hash = (53 * hash) + getRawData().hashCode();
            }
            hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
            hash = (53 * hash) + getSignature().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.TXInput parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TXInput parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.TXInput prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.TXInput}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.TXInput)
                com.cryptowallet.crypto.Protocol.TXInputOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXInput_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXInput_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.TXInput.class, com.cryptowallet.crypto.Protocol.TXInput.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.TXInput.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (rawDataBuilder_ == null) {
                    rawData_ = null;
                } else {
                    rawData_ = null;
                    rawDataBuilder_ = null;
                }
                signature_ = com.google.protobuf.ByteString.EMPTY;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXInput_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.TXInput getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.TXInput.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.TXInput build() {
                com.cryptowallet.crypto.Protocol.TXInput result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.TXInput buildPartial() {
                com.cryptowallet.crypto.Protocol.TXInput result = new com.cryptowallet.crypto.Protocol.TXInput(this);
                if (rawDataBuilder_ == null) {
                    result.rawData_ = rawData_;
                } else {
                    result.rawData_ = rawDataBuilder_.build();
                }
                result.signature_ = signature_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.TXInput) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.TXInput)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.TXInput other) {
                if (other == com.cryptowallet.crypto.Protocol.TXInput.getDefaultInstance()) return this;
                if (other.hasRawData()) {
                    mergeRawData(other.getRawData());
                }
                if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
                    setSignature(other.getSignature());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.TXInput parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.TXInput) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.cryptowallet.crypto.Protocol.TXInput.raw rawData_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.TXInput.raw, com.cryptowallet.crypto.Protocol.TXInput.raw.Builder, com.cryptowallet.crypto.Protocol.TXInput.rawOrBuilder> rawDataBuilder_;
            /**
             * <code>.protocol.TXInput.raw raw_data = 1;</code>
             */
            public boolean hasRawData() {
                return rawDataBuilder_ != null || rawData_ != null;
            }
            /**
             * <code>.protocol.TXInput.raw raw_data = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TXInput.raw getRawData() {
                if (rawDataBuilder_ == null) {
                    return rawData_ == null ? com.cryptowallet.crypto.Protocol.TXInput.raw.getDefaultInstance() : rawData_;
                } else {
                    return rawDataBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.TXInput.raw raw_data = 1;</code>
             */
            public Builder setRawData(com.cryptowallet.crypto.Protocol.TXInput.raw value) {
                if (rawDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    rawData_ = value;
                    onChanged();
                } else {
                    rawDataBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.TXInput.raw raw_data = 1;</code>
             */
            public Builder setRawData(
                    com.cryptowallet.crypto.Protocol.TXInput.raw.Builder builderForValue) {
                if (rawDataBuilder_ == null) {
                    rawData_ = builderForValue.build();
                    onChanged();
                } else {
                    rawDataBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.TXInput.raw raw_data = 1;</code>
             */
            public Builder mergeRawData(com.cryptowallet.crypto.Protocol.TXInput.raw value) {
                if (rawDataBuilder_ == null) {
                    if (rawData_ != null) {
                        rawData_ =
                                com.cryptowallet.crypto.Protocol.TXInput.raw.newBuilder(rawData_).mergeFrom(value).buildPartial();
                    } else {
                        rawData_ = value;
                    }
                    onChanged();
                } else {
                    rawDataBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.TXInput.raw raw_data = 1;</code>
             */
            public Builder clearRawData() {
                if (rawDataBuilder_ == null) {
                    rawData_ = null;
                    onChanged();
                } else {
                    rawData_ = null;
                    rawDataBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.TXInput.raw raw_data = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TXInput.raw.Builder getRawDataBuilder() {

                onChanged();
                return getRawDataFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.TXInput.raw raw_data = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TXInput.rawOrBuilder getRawDataOrBuilder() {
                if (rawDataBuilder_ != null) {
                    return rawDataBuilder_.getMessageOrBuilder();
                } else {
                    return rawData_ == null ?
                            com.cryptowallet.crypto.Protocol.TXInput.raw.getDefaultInstance() : rawData_;
                }
            }
            /**
             * <code>.protocol.TXInput.raw raw_data = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.TXInput.raw, com.cryptowallet.crypto.Protocol.TXInput.raw.Builder, com.cryptowallet.crypto.Protocol.TXInput.rawOrBuilder>
            getRawDataFieldBuilder() {
                if (rawDataBuilder_ == null) {
                    rawDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.TXInput.raw, com.cryptowallet.crypto.Protocol.TXInput.raw.Builder, com.cryptowallet.crypto.Protocol.TXInput.rawOrBuilder>(
                            getRawData(),
                            getParentForChildren(),
                            isClean());
                    rawData_ = null;
                }
                return rawDataBuilder_;
            }

            private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes signature = 4;</code>
             */
            public com.google.protobuf.ByteString getSignature() {
                return signature_;
            }
            /**
             * <code>bytes signature = 4;</code>
             */
            public Builder setSignature(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                signature_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes signature = 4;</code>
             */
            public Builder clearSignature() {

                signature_ = getDefaultInstance().getSignature();
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.TXInput)
        }

        // @@protoc_insertion_point(class_scope:protocol.TXInput)
        private static final com.cryptowallet.crypto.Protocol.TXInput DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.TXInput();
        }

        public static com.cryptowallet.crypto.Protocol.TXInput getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<TXInput>
                PARSER = new com.google.protobuf.AbstractParser<TXInput>() {
            public TXInput parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new TXInput(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<TXInput> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TXInput> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.TXInput getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface TXOutputsOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.TXOutputs)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .protocol.TXOutput outputs = 1;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.TXOutput>
        getOutputsList();
        /**
         * <code>repeated .protocol.TXOutput outputs = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.TXOutput getOutputs(int index);
        /**
         * <code>repeated .protocol.TXOutput outputs = 1;</code>
         */
        int getOutputsCount();
        /**
         * <code>repeated .protocol.TXOutput outputs = 1;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.TXOutputOrBuilder>
        getOutputsOrBuilderList();
        /**
         * <code>repeated .protocol.TXOutput outputs = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.TXOutputOrBuilder getOutputsOrBuilder(
                int index);
    }
    /**
     * Protobuf type {@code protocol.TXOutputs}
     */
    public  static final class TXOutputs extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.TXOutputs)
            TXOutputsOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use TXOutputs.newBuilder() to construct.
        private TXOutputs(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private TXOutputs() {
            outputs_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private TXOutputs(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                outputs_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.TXOutput>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            outputs_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.TXOutput.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    outputs_ = java.util.Collections.unmodifiableList(outputs_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXOutputs_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXOutputs_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.TXOutputs.class, com.cryptowallet.crypto.Protocol.TXOutputs.Builder.class);
        }

        public static final int OUTPUTS_FIELD_NUMBER = 1;
        private java.util.List<com.cryptowallet.crypto.Protocol.TXOutput> outputs_;
        /**
         * <code>repeated .protocol.TXOutput outputs = 1;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.TXOutput> getOutputsList() {
            return outputs_;
        }
        /**
         * <code>repeated .protocol.TXOutput outputs = 1;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.TXOutputOrBuilder>
        getOutputsOrBuilderList() {
            return outputs_;
        }
        /**
         * <code>repeated .protocol.TXOutput outputs = 1;</code>
         */
        public int getOutputsCount() {
            return outputs_.size();
        }
        /**
         * <code>repeated .protocol.TXOutput outputs = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.TXOutput getOutputs(int index) {
            return outputs_.get(index);
        }
        /**
         * <code>repeated .protocol.TXOutput outputs = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.TXOutputOrBuilder getOutputsOrBuilder(
                int index) {
            return outputs_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < outputs_.size(); i++) {
                output.writeMessage(1, outputs_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < outputs_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, outputs_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.TXOutputs)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.TXOutputs other = (com.cryptowallet.crypto.Protocol.TXOutputs) obj;

            boolean result = true;
            result = result && getOutputsList()
                    .equals(other.getOutputsList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getOutputsCount() > 0) {
                hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
                hash = (53 * hash) + getOutputsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.TXOutputs parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TXOutputs parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.TXOutputs prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.TXOutputs}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.TXOutputs)
                com.cryptowallet.crypto.Protocol.TXOutputsOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXOutputs_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXOutputs_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.TXOutputs.class, com.cryptowallet.crypto.Protocol.TXOutputs.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.TXOutputs.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getOutputsFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (outputsBuilder_ == null) {
                    outputs_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    outputsBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TXOutputs_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.TXOutputs getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.TXOutputs.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.TXOutputs build() {
                com.cryptowallet.crypto.Protocol.TXOutputs result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.TXOutputs buildPartial() {
                com.cryptowallet.crypto.Protocol.TXOutputs result = new com.cryptowallet.crypto.Protocol.TXOutputs(this);
                int from_bitField0_ = bitField0_;
                if (outputsBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        outputs_ = java.util.Collections.unmodifiableList(outputs_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.outputs_ = outputs_;
                } else {
                    result.outputs_ = outputsBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.TXOutputs) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.TXOutputs)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.TXOutputs other) {
                if (other == com.cryptowallet.crypto.Protocol.TXOutputs.getDefaultInstance()) return this;
                if (outputsBuilder_ == null) {
                    if (!other.outputs_.isEmpty()) {
                        if (outputs_.isEmpty()) {
                            outputs_ = other.outputs_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureOutputsIsMutable();
                            outputs_.addAll(other.outputs_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.outputs_.isEmpty()) {
                        if (outputsBuilder_.isEmpty()) {
                            outputsBuilder_.dispose();
                            outputsBuilder_ = null;
                            outputs_ = other.outputs_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            outputsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getOutputsFieldBuilder() : null;
                        } else {
                            outputsBuilder_.addAllMessages(other.outputs_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.TXOutputs parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.TXOutputs) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private java.util.List<com.cryptowallet.crypto.Protocol.TXOutput> outputs_ =
                    java.util.Collections.emptyList();
            private void ensureOutputsIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    outputs_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.TXOutput>(outputs_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.TXOutput, com.cryptowallet.crypto.Protocol.TXOutput.Builder, com.cryptowallet.crypto.Protocol.TXOutputOrBuilder> outputsBuilder_;

            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.TXOutput> getOutputsList() {
                if (outputsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(outputs_);
                } else {
                    return outputsBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public int getOutputsCount() {
                if (outputsBuilder_ == null) {
                    return outputs_.size();
                } else {
                    return outputsBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TXOutput getOutputs(int index) {
                if (outputsBuilder_ == null) {
                    return outputs_.get(index);
                } else {
                    return outputsBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public Builder setOutputs(
                    int index, com.cryptowallet.crypto.Protocol.TXOutput value) {
                if (outputsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOutputsIsMutable();
                    outputs_.set(index, value);
                    onChanged();
                } else {
                    outputsBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public Builder setOutputs(
                    int index, com.cryptowallet.crypto.Protocol.TXOutput.Builder builderForValue) {
                if (outputsBuilder_ == null) {
                    ensureOutputsIsMutable();
                    outputs_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    outputsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public Builder addOutputs(com.cryptowallet.crypto.Protocol.TXOutput value) {
                if (outputsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOutputsIsMutable();
                    outputs_.add(value);
                    onChanged();
                } else {
                    outputsBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public Builder addOutputs(
                    int index, com.cryptowallet.crypto.Protocol.TXOutput value) {
                if (outputsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureOutputsIsMutable();
                    outputs_.add(index, value);
                    onChanged();
                } else {
                    outputsBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public Builder addOutputs(
                    com.cryptowallet.crypto.Protocol.TXOutput.Builder builderForValue) {
                if (outputsBuilder_ == null) {
                    ensureOutputsIsMutable();
                    outputs_.add(builderForValue.build());
                    onChanged();
                } else {
                    outputsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public Builder addOutputs(
                    int index, com.cryptowallet.crypto.Protocol.TXOutput.Builder builderForValue) {
                if (outputsBuilder_ == null) {
                    ensureOutputsIsMutable();
                    outputs_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    outputsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public Builder addAllOutputs(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.TXOutput> values) {
                if (outputsBuilder_ == null) {
                    ensureOutputsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, outputs_);
                    onChanged();
                } else {
                    outputsBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public Builder clearOutputs() {
                if (outputsBuilder_ == null) {
                    outputs_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    outputsBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public Builder removeOutputs(int index) {
                if (outputsBuilder_ == null) {
                    ensureOutputsIsMutable();
                    outputs_.remove(index);
                    onChanged();
                } else {
                    outputsBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TXOutput.Builder getOutputsBuilder(
                    int index) {
                return getOutputsFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TXOutputOrBuilder getOutputsOrBuilder(
                    int index) {
                if (outputsBuilder_ == null) {
                    return outputs_.get(index);  } else {
                    return outputsBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.TXOutputOrBuilder>
            getOutputsOrBuilderList() {
                if (outputsBuilder_ != null) {
                    return outputsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(outputs_);
                }
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TXOutput.Builder addOutputsBuilder() {
                return getOutputsFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.TXOutput.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TXOutput.Builder addOutputsBuilder(
                    int index) {
                return getOutputsFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.TXOutput.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.TXOutput outputs = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.TXOutput.Builder>
            getOutputsBuilderList() {
                return getOutputsFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.TXOutput, com.cryptowallet.crypto.Protocol.TXOutput.Builder, com.cryptowallet.crypto.Protocol.TXOutputOrBuilder>
            getOutputsFieldBuilder() {
                if (outputsBuilder_ == null) {
                    outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.TXOutput, com.cryptowallet.crypto.Protocol.TXOutput.Builder, com.cryptowallet.crypto.Protocol.TXOutputOrBuilder>(
                            outputs_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    outputs_ = null;
                }
                return outputsBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.TXOutputs)
        }

        // @@protoc_insertion_point(class_scope:protocol.TXOutputs)
        private static final com.cryptowallet.crypto.Protocol.TXOutputs DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.TXOutputs();
        }

        public static com.cryptowallet.crypto.Protocol.TXOutputs getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<TXOutputs>
                PARSER = new com.google.protobuf.AbstractParser<TXOutputs>() {
            public TXOutputs parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new TXOutputs(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<TXOutputs> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TXOutputs> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.TXOutputs getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ResourceReceiptOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.ResourceReceipt)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int64 energy_usage = 1;</code>
         */
        long getEnergyUsage();

        /**
         * <code>int64 energy_fee = 2;</code>
         */
        long getEnergyFee();

        /**
         * <code>int64 origin_energy_usage = 3;</code>
         */
        long getOriginEnergyUsage();

        /**
         * <code>int64 energy_usage_total = 4;</code>
         */
        long getEnergyUsageTotal();

        /**
         * <code>int64 net_usage = 5;</code>
         */
        long getNetUsage();

        /**
         * <code>int64 net_fee = 6;</code>
         */
        long getNetFee();

        /**
         * <code>.protocol.Transaction.Result.contractResult result = 7;</code>
         */
        int getResultValue();
        /**
         * <code>.protocol.Transaction.Result.contractResult result = 7;</code>
         */
        com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult getResult();
    }
    /**
     * Protobuf type {@code protocol.ResourceReceipt}
     */
    public  static final class ResourceReceipt extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.ResourceReceipt)
            ResourceReceiptOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use ResourceReceipt.newBuilder() to construct.
        private ResourceReceipt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ResourceReceipt() {
            energyUsage_ = 0L;
            energyFee_ = 0L;
            originEnergyUsage_ = 0L;
            energyUsageTotal_ = 0L;
            netUsage_ = 0L;
            netFee_ = 0L;
            result_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private ResourceReceipt(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            energyUsage_ = input.readInt64();
                            break;
                        }
                        case 16: {

                            energyFee_ = input.readInt64();
                            break;
                        }
                        case 24: {

                            originEnergyUsage_ = input.readInt64();
                            break;
                        }
                        case 32: {

                            energyUsageTotal_ = input.readInt64();
                            break;
                        }
                        case 40: {

                            netUsage_ = input.readInt64();
                            break;
                        }
                        case 48: {

                            netFee_ = input.readInt64();
                            break;
                        }
                        case 56: {
                            int rawValue = input.readEnum();

                            result_ = rawValue;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_ResourceReceipt_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_ResourceReceipt_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.ResourceReceipt.class, com.cryptowallet.crypto.Protocol.ResourceReceipt.Builder.class);
        }

        public static final int ENERGY_USAGE_FIELD_NUMBER = 1;
        private long energyUsage_;
        /**
         * <code>int64 energy_usage = 1;</code>
         */
        public long getEnergyUsage() {
            return energyUsage_;
        }

        public static final int ENERGY_FEE_FIELD_NUMBER = 2;
        private long energyFee_;
        /**
         * <code>int64 energy_fee = 2;</code>
         */
        public long getEnergyFee() {
            return energyFee_;
        }

        public static final int ORIGIN_ENERGY_USAGE_FIELD_NUMBER = 3;
        private long originEnergyUsage_;
        /**
         * <code>int64 origin_energy_usage = 3;</code>
         */
        public long getOriginEnergyUsage() {
            return originEnergyUsage_;
        }

        public static final int ENERGY_USAGE_TOTAL_FIELD_NUMBER = 4;
        private long energyUsageTotal_;
        /**
         * <code>int64 energy_usage_total = 4;</code>
         */
        public long getEnergyUsageTotal() {
            return energyUsageTotal_;
        }

        public static final int NET_USAGE_FIELD_NUMBER = 5;
        private long netUsage_;
        /**
         * <code>int64 net_usage = 5;</code>
         */
        public long getNetUsage() {
            return netUsage_;
        }

        public static final int NET_FEE_FIELD_NUMBER = 6;
        private long netFee_;
        /**
         * <code>int64 net_fee = 6;</code>
         */
        public long getNetFee() {
            return netFee_;
        }

        public static final int RESULT_FIELD_NUMBER = 7;
        private int result_;
        /**
         * <code>.protocol.Transaction.Result.contractResult result = 7;</code>
         */
        public int getResultValue() {
            return result_;
        }
        /**
         * <code>.protocol.Transaction.Result.contractResult result = 7;</code>
         */
        public com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult getResult() {
            com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult result = com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.valueOf(result_);
            return result == null ? com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (energyUsage_ != 0L) {
                output.writeInt64(1, energyUsage_);
            }
            if (energyFee_ != 0L) {
                output.writeInt64(2, energyFee_);
            }
            if (originEnergyUsage_ != 0L) {
                output.writeInt64(3, originEnergyUsage_);
            }
            if (energyUsageTotal_ != 0L) {
                output.writeInt64(4, energyUsageTotal_);
            }
            if (netUsage_ != 0L) {
                output.writeInt64(5, netUsage_);
            }
            if (netFee_ != 0L) {
                output.writeInt64(6, netFee_);
            }
            if (result_ != com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.DEFAULT.getNumber()) {
                output.writeEnum(7, result_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (energyUsage_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, energyUsage_);
            }
            if (energyFee_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, energyFee_);
            }
            if (originEnergyUsage_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(3, originEnergyUsage_);
            }
            if (energyUsageTotal_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, energyUsageTotal_);
            }
            if (netUsage_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(5, netUsage_);
            }
            if (netFee_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(6, netFee_);
            }
            if (result_ != com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.DEFAULT.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(7, result_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.ResourceReceipt)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.ResourceReceipt other = (com.cryptowallet.crypto.Protocol.ResourceReceipt) obj;

            boolean result = true;
            result = result && (getEnergyUsage()
                    == other.getEnergyUsage());
            result = result && (getEnergyFee()
                    == other.getEnergyFee());
            result = result && (getOriginEnergyUsage()
                    == other.getOriginEnergyUsage());
            result = result && (getEnergyUsageTotal()
                    == other.getEnergyUsageTotal());
            result = result && (getNetUsage()
                    == other.getNetUsage());
            result = result && (getNetFee()
                    == other.getNetFee());
            result = result && result_ == other.result_;
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ENERGY_USAGE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getEnergyUsage());
            hash = (37 * hash) + ENERGY_FEE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getEnergyFee());
            hash = (37 * hash) + ORIGIN_ENERGY_USAGE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getOriginEnergyUsage());
            hash = (37 * hash) + ENERGY_USAGE_TOTAL_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getEnergyUsageTotal());
            hash = (37 * hash) + NET_USAGE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getNetUsage());
            hash = (37 * hash) + NET_FEE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getNetFee());
            hash = (37 * hash) + RESULT_FIELD_NUMBER;
            hash = (53 * hash) + result_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.ResourceReceipt parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.ResourceReceipt prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.ResourceReceipt}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.ResourceReceipt)
                com.cryptowallet.crypto.Protocol.ResourceReceiptOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ResourceReceipt_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ResourceReceipt_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.ResourceReceipt.class, com.cryptowallet.crypto.Protocol.ResourceReceipt.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.ResourceReceipt.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                energyUsage_ = 0L;

                energyFee_ = 0L;

                originEnergyUsage_ = 0L;

                energyUsageTotal_ = 0L;

                netUsage_ = 0L;

                netFee_ = 0L;

                result_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ResourceReceipt_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.ResourceReceipt getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.ResourceReceipt.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.ResourceReceipt build() {
                com.cryptowallet.crypto.Protocol.ResourceReceipt result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.ResourceReceipt buildPartial() {
                com.cryptowallet.crypto.Protocol.ResourceReceipt result = new com.cryptowallet.crypto.Protocol.ResourceReceipt(this);
                result.energyUsage_ = energyUsage_;
                result.energyFee_ = energyFee_;
                result.originEnergyUsage_ = originEnergyUsage_;
                result.energyUsageTotal_ = energyUsageTotal_;
                result.netUsage_ = netUsage_;
                result.netFee_ = netFee_;
                result.result_ = result_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.ResourceReceipt) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.ResourceReceipt)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.ResourceReceipt other) {
                if (other == com.cryptowallet.crypto.Protocol.ResourceReceipt.getDefaultInstance()) return this;
                if (other.getEnergyUsage() != 0L) {
                    setEnergyUsage(other.getEnergyUsage());
                }
                if (other.getEnergyFee() != 0L) {
                    setEnergyFee(other.getEnergyFee());
                }
                if (other.getOriginEnergyUsage() != 0L) {
                    setOriginEnergyUsage(other.getOriginEnergyUsage());
                }
                if (other.getEnergyUsageTotal() != 0L) {
                    setEnergyUsageTotal(other.getEnergyUsageTotal());
                }
                if (other.getNetUsage() != 0L) {
                    setNetUsage(other.getNetUsage());
                }
                if (other.getNetFee() != 0L) {
                    setNetFee(other.getNetFee());
                }
                if (other.result_ != 0) {
                    setResultValue(other.getResultValue());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.ResourceReceipt parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.ResourceReceipt) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private long energyUsage_ ;
            /**
             * <code>int64 energy_usage = 1;</code>
             */
            public long getEnergyUsage() {
                return energyUsage_;
            }
            /**
             * <code>int64 energy_usage = 1;</code>
             */
            public Builder setEnergyUsage(long value) {

                energyUsage_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 energy_usage = 1;</code>
             */
            public Builder clearEnergyUsage() {

                energyUsage_ = 0L;
                onChanged();
                return this;
            }

            private long energyFee_ ;
            /**
             * <code>int64 energy_fee = 2;</code>
             */
            public long getEnergyFee() {
                return energyFee_;
            }
            /**
             * <code>int64 energy_fee = 2;</code>
             */
            public Builder setEnergyFee(long value) {

                energyFee_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 energy_fee = 2;</code>
             */
            public Builder clearEnergyFee() {

                energyFee_ = 0L;
                onChanged();
                return this;
            }

            private long originEnergyUsage_ ;
            /**
             * <code>int64 origin_energy_usage = 3;</code>
             */
            public long getOriginEnergyUsage() {
                return originEnergyUsage_;
            }
            /**
             * <code>int64 origin_energy_usage = 3;</code>
             */
            public Builder setOriginEnergyUsage(long value) {

                originEnergyUsage_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 origin_energy_usage = 3;</code>
             */
            public Builder clearOriginEnergyUsage() {

                originEnergyUsage_ = 0L;
                onChanged();
                return this;
            }

            private long energyUsageTotal_ ;
            /**
             * <code>int64 energy_usage_total = 4;</code>
             */
            public long getEnergyUsageTotal() {
                return energyUsageTotal_;
            }
            /**
             * <code>int64 energy_usage_total = 4;</code>
             */
            public Builder setEnergyUsageTotal(long value) {

                energyUsageTotal_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 energy_usage_total = 4;</code>
             */
            public Builder clearEnergyUsageTotal() {

                energyUsageTotal_ = 0L;
                onChanged();
                return this;
            }

            private long netUsage_ ;
            /**
             * <code>int64 net_usage = 5;</code>
             */
            public long getNetUsage() {
                return netUsage_;
            }
            /**
             * <code>int64 net_usage = 5;</code>
             */
            public Builder setNetUsage(long value) {

                netUsage_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 net_usage = 5;</code>
             */
            public Builder clearNetUsage() {

                netUsage_ = 0L;
                onChanged();
                return this;
            }

            private long netFee_ ;
            /**
             * <code>int64 net_fee = 6;</code>
             */
            public long getNetFee() {
                return netFee_;
            }
            /**
             * <code>int64 net_fee = 6;</code>
             */
            public Builder setNetFee(long value) {

                netFee_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 net_fee = 6;</code>
             */
            public Builder clearNetFee() {

                netFee_ = 0L;
                onChanged();
                return this;
            }

            private int result_ = 0;
            /**
             * <code>.protocol.Transaction.Result.contractResult result = 7;</code>
             */
            public int getResultValue() {
                return result_;
            }
            /**
             * <code>.protocol.Transaction.Result.contractResult result = 7;</code>
             */
            public Builder setResultValue(int value) {
                result_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.Transaction.Result.contractResult result = 7;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult getResult() {
                com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult result = com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.valueOf(result_);
                return result == null ? com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.UNRECOGNIZED : result;
            }
            /**
             * <code>.protocol.Transaction.Result.contractResult result = 7;</code>
             */
            public Builder setResult(com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                result_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.Transaction.Result.contractResult result = 7;</code>
             */
            public Builder clearResult() {

                result_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.ResourceReceipt)
        }

        // @@protoc_insertion_point(class_scope:protocol.ResourceReceipt)
        private static final com.cryptowallet.crypto.Protocol.ResourceReceipt DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.ResourceReceipt();
        }

        public static com.cryptowallet.crypto.Protocol.ResourceReceipt getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ResourceReceipt>
                PARSER = new com.google.protobuf.AbstractParser<ResourceReceipt>() {
            public ResourceReceipt parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResourceReceipt(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ResourceReceipt> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ResourceReceipt> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.ResourceReceipt getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface TransactionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Transaction)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.protocol.Transaction.raw raw_data = 1;</code>
         */
        boolean hasRawData();
        /**
         * <code>.protocol.Transaction.raw raw_data = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.Transaction.raw getRawData();
        /**
         * <code>.protocol.Transaction.raw raw_data = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.Transaction.rawOrBuilder getRawDataOrBuilder();

        /**
         * <pre>
         * only support size = 1,  repeated list here for muti-sig extension
         * </pre>
         *
         * <code>repeated bytes signature = 2;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getSignatureList();
        /**
         * <pre>
         * only support size = 1,  repeated list here for muti-sig extension
         * </pre>
         *
         * <code>repeated bytes signature = 2;</code>
         */
        int getSignatureCount();
        /**
         * <pre>
         * only support size = 1,  repeated list here for muti-sig extension
         * </pre>
         *
         * <code>repeated bytes signature = 2;</code>
         */
        com.google.protobuf.ByteString getSignature(int index);

        /**
         * <code>repeated .protocol.Transaction.Result ret = 5;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Result>
        getRetList();
        /**
         * <code>repeated .protocol.Transaction.Result ret = 5;</code>
         */
        com.cryptowallet.crypto.Protocol.Transaction.Result getRet(int index);
        /**
         * <code>repeated .protocol.Transaction.Result ret = 5;</code>
         */
        int getRetCount();
        /**
         * <code>repeated .protocol.Transaction.Result ret = 5;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.Transaction.ResultOrBuilder>
        getRetOrBuilderList();
        /**
         * <code>repeated .protocol.Transaction.Result ret = 5;</code>
         */
        com.cryptowallet.crypto.Protocol.Transaction.ResultOrBuilder getRetOrBuilder(
                int index);
    }
    /**
     * Protobuf type {@code protocol.Transaction}
     */
    public  static final class Transaction extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Transaction)
            TransactionOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Transaction.newBuilder() to construct.
        private Transaction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Transaction() {
            signature_ = java.util.Collections.emptyList();
            ret_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Transaction(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.cryptowallet.crypto.Protocol.Transaction.raw.Builder subBuilder = null;
                            if (rawData_ != null) {
                                subBuilder = rawData_.toBuilder();
                            }
                            rawData_ = input.readMessage(com.cryptowallet.crypto.Protocol.Transaction.raw.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(rawData_);
                                rawData_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                signature_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            signature_.add(input.readBytes());
                            break;
                        }
                        case 42: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                ret_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Transaction.Result>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            ret_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.Transaction.Result.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    signature_ = java.util.Collections.unmodifiableList(signature_);
                }
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    ret_ = java.util.Collections.unmodifiableList(ret_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Transaction.class, com.cryptowallet.crypto.Protocol.Transaction.Builder.class);
        }

        public interface ContractOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.Transaction.Contract)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>.protocol.Transaction.Contract.ContractType type = 1;</code>
             */
            int getTypeValue();
            /**
             * <code>.protocol.Transaction.Contract.ContractType type = 1;</code>
             */
            com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType getType();

            /**
             * <code>.google.protobuf.Any parameter = 2;</code>
             */
            boolean hasParameter();
            /**
             * <code>.google.protobuf.Any parameter = 2;</code>
             */
            com.google.protobuf.Any getParameter();
            /**
             * <code>.google.protobuf.Any parameter = 2;</code>
             */
            com.google.protobuf.AnyOrBuilder getParameterOrBuilder();

            /**
             * <code>bytes provider = 3;</code>
             */
            com.google.protobuf.ByteString getProvider();

            /**
             * <code>bytes ContractName = 4;</code>
             */
            com.google.protobuf.ByteString getContractName();
        }
        /**
         * Protobuf type {@code protocol.Transaction.Contract}
         */
        public  static final class Contract extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.Transaction.Contract)
                ContractOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use Contract.newBuilder() to construct.
            private Contract(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private Contract() {
                type_ = 0;
                provider_ = com.google.protobuf.ByteString.EMPTY;
                contractName_ = com.google.protobuf.ByteString.EMPTY;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private Contract(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {
                                int rawValue = input.readEnum();

                                type_ = rawValue;
                                break;
                            }
                            case 18: {
                                com.google.protobuf.Any.Builder subBuilder = null;
                                if (parameter_ != null) {
                                    subBuilder = parameter_.toBuilder();
                                }
                                parameter_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(parameter_);
                                    parameter_ = subBuilder.buildPartial();
                                }

                                break;
                            }
                            case 26: {

                                provider_ = input.readBytes();
                                break;
                            }
                            case 34: {

                                contractName_ = input.readBytes();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_Contract_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_Contract_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Transaction.Contract.class, com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder.class);
            }

            /**
             * Protobuf enum {@code protocol.Transaction.Contract.ContractType}
             */
            public enum ContractType
                    implements com.google.protobuf.ProtocolMessageEnum {
                /**
                 * <code>AccountCreateContract = 0;</code>
                 */
                AccountCreateContract(0),
                /**
                 * <code>TransferContract = 1;</code>
                 */
                TransferContract(1),
                /**
                 * <code>TransferAssetContract = 2;</code>
                 */
                TransferAssetContract(2),
                /**
                 * <code>VoteAssetContract = 3;</code>
                 */
                VoteAssetContract(3),
                /**
                 * <code>VoteWitnessContract = 4;</code>
                 */
                VoteWitnessContract(4),
                /**
                 * <code>WitnessCreateContract = 5;</code>
                 */
                WitnessCreateContract(5),
                /**
                 * <code>AssetIssueContract = 6;</code>
                 */
                AssetIssueContract(6),
                /**
                 * <code>WitnessUpdateContract = 8;</code>
                 */
                WitnessUpdateContract(8),
                /**
                 * <code>ParticipateAssetIssueContract = 9;</code>
                 */
                ParticipateAssetIssueContract(9),
                /**
                 * <code>AccountUpdateContract = 10;</code>
                 */
                AccountUpdateContract(10),
                /**
                 * <code>FreezeBalanceContract = 11;</code>
                 */
                FreezeBalanceContract(11),
                /**
                 * <code>UnfreezeBalanceContract = 12;</code>
                 */
                UnfreezeBalanceContract(12),
                /**
                 * <code>WithdrawBalanceContract = 13;</code>
                 */
                WithdrawBalanceContract(13),
                /**
                 * <code>UnfreezeAssetContract = 14;</code>
                 */
                UnfreezeAssetContract(14),
                /**
                 * <code>UpdateAssetContract = 15;</code>
                 */
                UpdateAssetContract(15),
                /**
                 * <code>ProposalCreateContract = 16;</code>
                 */
                ProposalCreateContract(16),
                /**
                 * <code>ProposalApproveContract = 17;</code>
                 */
                ProposalApproveContract(17),
                /**
                 * <code>ProposalDeleteContract = 18;</code>
                 */
                ProposalDeleteContract(18),
                /**
                 * <code>SetAccountIdContract = 19;</code>
                 */
                SetAccountIdContract(19),
                /**
                 * <code>CustomContract = 20;</code>
                 */
                CustomContract(20),
                /**
                 * <pre>
                 * BuyStorageContract = 21;
                 * BuyStorageBytesContract = 22;
                 * SellStorageContract = 23;
                 * </pre>
                 *
                 * <code>CreateSmartContract = 30;</code>
                 */
                CreateSmartContract(30),
                /**
                 * <code>TriggerSmartContract = 31;</code>
                 */
                TriggerSmartContract(31),
                /**
                 * <code>GetContract = 32;</code>
                 */
                GetContract(32),
                /**
                 * <code>UpdateSettingContract = 33;</code>
                 */
                UpdateSettingContract(33),
                /**
                 * <code>ExchangeCreateContract = 41;</code>
                 */
                ExchangeCreateContract(41),
                /**
                 * <code>ExchangeInjectContract = 42;</code>
                 */
                ExchangeInjectContract(42),
                /**
                 * <code>ExchangeWithdrawContract = 43;</code>
                 */
                ExchangeWithdrawContract(43),
                /**
                 * <code>ExchangeTransactionContract = 44;</code>
                 */
                ExchangeTransactionContract(44),
                /**
                 * <code>UpdateEnergyLimitContract = 45;</code>
                 */
                UpdateEnergyLimitContract(45),
                UNRECOGNIZED(-1),
                ;

                /**
                 * <code>AccountCreateContract = 0;</code>
                 */
                public static final int AccountCreateContract_VALUE = 0;
                /**
                 * <code>TransferContract = 1;</code>
                 */
                public static final int TransferContract_VALUE = 1;
                /**
                 * <code>TransferAssetContract = 2;</code>
                 */
                public static final int TransferAssetContract_VALUE = 2;
                /**
                 * <code>VoteAssetContract = 3;</code>
                 */
                public static final int VoteAssetContract_VALUE = 3;
                /**
                 * <code>VoteWitnessContract = 4;</code>
                 */
                public static final int VoteWitnessContract_VALUE = 4;
                /**
                 * <code>WitnessCreateContract = 5;</code>
                 */
                public static final int WitnessCreateContract_VALUE = 5;
                /**
                 * <code>AssetIssueContract = 6;</code>
                 */
                public static final int AssetIssueContract_VALUE = 6;
                /**
                 * <code>WitnessUpdateContract = 8;</code>
                 */
                public static final int WitnessUpdateContract_VALUE = 8;
                /**
                 * <code>ParticipateAssetIssueContract = 9;</code>
                 */
                public static final int ParticipateAssetIssueContract_VALUE = 9;
                /**
                 * <code>AccountUpdateContract = 10;</code>
                 */
                public static final int AccountUpdateContract_VALUE = 10;
                /**
                 * <code>FreezeBalanceContract = 11;</code>
                 */
                public static final int FreezeBalanceContract_VALUE = 11;
                /**
                 * <code>UnfreezeBalanceContract = 12;</code>
                 */
                public static final int UnfreezeBalanceContract_VALUE = 12;
                /**
                 * <code>WithdrawBalanceContract = 13;</code>
                 */
                public static final int WithdrawBalanceContract_VALUE = 13;
                /**
                 * <code>UnfreezeAssetContract = 14;</code>
                 */
                public static final int UnfreezeAssetContract_VALUE = 14;
                /**
                 * <code>UpdateAssetContract = 15;</code>
                 */
                public static final int UpdateAssetContract_VALUE = 15;
                /**
                 * <code>ProposalCreateContract = 16;</code>
                 */
                public static final int ProposalCreateContract_VALUE = 16;
                /**
                 * <code>ProposalApproveContract = 17;</code>
                 */
                public static final int ProposalApproveContract_VALUE = 17;
                /**
                 * <code>ProposalDeleteContract = 18;</code>
                 */
                public static final int ProposalDeleteContract_VALUE = 18;
                /**
                 * <code>SetAccountIdContract = 19;</code>
                 */
                public static final int SetAccountIdContract_VALUE = 19;
                /**
                 * <code>CustomContract = 20;</code>
                 */
                public static final int CustomContract_VALUE = 20;
                /**
                 * <pre>
                 * BuyStorageContract = 21;
                 * BuyStorageBytesContract = 22;
                 * SellStorageContract = 23;
                 * </pre>
                 *
                 * <code>CreateSmartContract = 30;</code>
                 */
                public static final int CreateSmartContract_VALUE = 30;
                /**
                 * <code>TriggerSmartContract = 31;</code>
                 */
                public static final int TriggerSmartContract_VALUE = 31;
                /**
                 * <code>GetContract = 32;</code>
                 */
                public static final int GetContract_VALUE = 32;
                /**
                 * <code>UpdateSettingContract = 33;</code>
                 */
                public static final int UpdateSettingContract_VALUE = 33;
                /**
                 * <code>ExchangeCreateContract = 41;</code>
                 */
                public static final int ExchangeCreateContract_VALUE = 41;
                /**
                 * <code>ExchangeInjectContract = 42;</code>
                 */
                public static final int ExchangeInjectContract_VALUE = 42;
                /**
                 * <code>ExchangeWithdrawContract = 43;</code>
                 */
                public static final int ExchangeWithdrawContract_VALUE = 43;
                /**
                 * <code>ExchangeTransactionContract = 44;</code>
                 */
                public static final int ExchangeTransactionContract_VALUE = 44;
                /**
                 * <code>UpdateEnergyLimitContract = 45;</code>
                 */
                public static final int UpdateEnergyLimitContract_VALUE = 45;


                public final int getNumber() {
                    if (this == UNRECOGNIZED) {
                        throw new java.lang.IllegalArgumentException(
                                "Can't get the number of an unknown enum value.");
                    }
                    return value;
                }

                /**
                 * @deprecated Use {@link #forNumber(int)} instead.
                 */
                @java.lang.Deprecated
                public static ContractType valueOf(int value) {
                    return forNumber(value);
                }

                public static ContractType forNumber(int value) {
                    switch (value) {
                        case 0: return AccountCreateContract;
                        case 1: return TransferContract;
                        case 2: return TransferAssetContract;
                        case 3: return VoteAssetContract;
                        case 4: return VoteWitnessContract;
                        case 5: return WitnessCreateContract;
                        case 6: return AssetIssueContract;
                        case 8: return WitnessUpdateContract;
                        case 9: return ParticipateAssetIssueContract;
                        case 10: return AccountUpdateContract;
                        case 11: return FreezeBalanceContract;
                        case 12: return UnfreezeBalanceContract;
                        case 13: return WithdrawBalanceContract;
                        case 14: return UnfreezeAssetContract;
                        case 15: return UpdateAssetContract;
                        case 16: return ProposalCreateContract;
                        case 17: return ProposalApproveContract;
                        case 18: return ProposalDeleteContract;
                        case 19: return SetAccountIdContract;
                        case 20: return CustomContract;
                        case 30: return CreateSmartContract;
                        case 31: return TriggerSmartContract;
                        case 32: return GetContract;
                        case 33: return UpdateSettingContract;
                        case 41: return ExchangeCreateContract;
                        case 42: return ExchangeInjectContract;
                        case 43: return ExchangeWithdrawContract;
                        case 44: return ExchangeTransactionContract;
                        case 45: return UpdateEnergyLimitContract;
                        default: return null;
                    }
                }

                public static com.google.protobuf.Internal.EnumLiteMap<ContractType>
                internalGetValueMap() {
                    return internalValueMap;
                }
                private static final com.google.protobuf.Internal.EnumLiteMap<
                        ContractType> internalValueMap =
                        new com.google.protobuf.Internal.EnumLiteMap<ContractType>() {
                            public ContractType findValueByNumber(int number) {
                                return ContractType.forNumber(number);
                            }
                        };

                public final com.google.protobuf.Descriptors.EnumValueDescriptor
                getValueDescriptor() {
                    return getDescriptor().getValues().get(ordinal());
                }
                public final com.google.protobuf.Descriptors.EnumDescriptor
                getDescriptorForType() {
                    return getDescriptor();
                }
                public static final com.google.protobuf.Descriptors.EnumDescriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.Transaction.Contract.getDescriptor().getEnumTypes().get(0);
                }

                private static final ContractType[] VALUES = values();

                public static ContractType valueOf(
                        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                    if (desc.getType() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "EnumValueDescriptor is not for this type.");
                    }
                    if (desc.getIndex() == -1) {
                        return UNRECOGNIZED;
                    }
                    return VALUES[desc.getIndex()];
                }

                private final int value;

                private ContractType(int value) {
                    this.value = value;
                }

                // @@protoc_insertion_point(enum_scope:protocol.Transaction.Contract.ContractType)
            }

            public static final int TYPE_FIELD_NUMBER = 1;
            private int type_;
            /**
             * <code>.protocol.Transaction.Contract.ContractType type = 1;</code>
             */
            public int getTypeValue() {
                return type_;
            }
            /**
             * <code>.protocol.Transaction.Contract.ContractType type = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType getType() {
                com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType result = com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType.valueOf(type_);
                return result == null ? com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType.UNRECOGNIZED : result;
            }

            public static final int PARAMETER_FIELD_NUMBER = 2;
            private com.google.protobuf.Any parameter_;
            /**
             * <code>.google.protobuf.Any parameter = 2;</code>
             */
            public boolean hasParameter() {
                return parameter_ != null;
            }
            /**
             * <code>.google.protobuf.Any parameter = 2;</code>
             */
            public com.google.protobuf.Any getParameter() {
                return parameter_ == null ? com.google.protobuf.Any.getDefaultInstance() : parameter_;
            }
            /**
             * <code>.google.protobuf.Any parameter = 2;</code>
             */
            public com.google.protobuf.AnyOrBuilder getParameterOrBuilder() {
                return getParameter();
            }

            public static final int PROVIDER_FIELD_NUMBER = 3;
            private com.google.protobuf.ByteString provider_;
            /**
             * <code>bytes provider = 3;</code>
             */
            public com.google.protobuf.ByteString getProvider() {
                return provider_;
            }

            public static final int CONTRACTNAME_FIELD_NUMBER = 4;
            private com.google.protobuf.ByteString contractName_;
            /**
             * <code>bytes ContractName = 4;</code>
             */
            public com.google.protobuf.ByteString getContractName() {
                return contractName_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (type_ != com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType.AccountCreateContract.getNumber()) {
                    output.writeEnum(1, type_);
                }
                if (parameter_ != null) {
                    output.writeMessage(2, getParameter());
                }
                if (!provider_.isEmpty()) {
                    output.writeBytes(3, provider_);
                }
                if (!contractName_.isEmpty()) {
                    output.writeBytes(4, contractName_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (type_ != com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType.AccountCreateContract.getNumber()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeEnumSize(1, type_);
                }
                if (parameter_ != null) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(2, getParameter());
                }
                if (!provider_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(3, provider_);
                }
                if (!contractName_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(4, contractName_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.Transaction.Contract)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.Transaction.Contract other = (com.cryptowallet.crypto.Protocol.Transaction.Contract) obj;

                boolean result = true;
                result = result && type_ == other.type_;
                result = result && (hasParameter() == other.hasParameter());
                if (hasParameter()) {
                    result = result && getParameter()
                            .equals(other.getParameter());
                }
                result = result && getProvider()
                        .equals(other.getProvider());
                result = result && getContractName()
                        .equals(other.getContractName());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + TYPE_FIELD_NUMBER;
                hash = (53 * hash) + type_;
                if (hasParameter()) {
                    hash = (37 * hash) + PARAMETER_FIELD_NUMBER;
                    hash = (53 * hash) + getParameter().hashCode();
                }
                hash = (37 * hash) + PROVIDER_FIELD_NUMBER;
                hash = (53 * hash) + getProvider().hashCode();
                hash = (37 * hash) + CONTRACTNAME_FIELD_NUMBER;
                hash = (53 * hash) + getContractName().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Contract parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Transaction.Contract prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.Transaction.Contract}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.Transaction.Contract)
                    com.cryptowallet.crypto.Protocol.Transaction.ContractOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_Contract_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_Contract_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.Transaction.Contract.class, com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.Transaction.Contract.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    type_ = 0;

                    if (parameterBuilder_ == null) {
                        parameter_ = null;
                    } else {
                        parameter_ = null;
                        parameterBuilder_ = null;
                    }
                    provider_ = com.google.protobuf.ByteString.EMPTY;

                    contractName_ = com.google.protobuf.ByteString.EMPTY;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_Contract_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.Transaction.Contract getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.Transaction.Contract.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.Transaction.Contract build() {
                    com.cryptowallet.crypto.Protocol.Transaction.Contract result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.Transaction.Contract buildPartial() {
                    com.cryptowallet.crypto.Protocol.Transaction.Contract result = new com.cryptowallet.crypto.Protocol.Transaction.Contract(this);
                    result.type_ = type_;
                    if (parameterBuilder_ == null) {
                        result.parameter_ = parameter_;
                    } else {
                        result.parameter_ = parameterBuilder_.build();
                    }
                    result.provider_ = provider_;
                    result.contractName_ = contractName_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.Transaction.Contract) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.Transaction.Contract)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Transaction.Contract other) {
                    if (other == com.cryptowallet.crypto.Protocol.Transaction.Contract.getDefaultInstance()) return this;
                    if (other.type_ != 0) {
                        setTypeValue(other.getTypeValue());
                    }
                    if (other.hasParameter()) {
                        mergeParameter(other.getParameter());
                    }
                    if (other.getProvider() != com.google.protobuf.ByteString.EMPTY) {
                        setProvider(other.getProvider());
                    }
                    if (other.getContractName() != com.google.protobuf.ByteString.EMPTY) {
                        setContractName(other.getContractName());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.Transaction.Contract parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.Transaction.Contract) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int type_ = 0;
                /**
                 * <code>.protocol.Transaction.Contract.ContractType type = 1;</code>
                 */
                public int getTypeValue() {
                    return type_;
                }
                /**
                 * <code>.protocol.Transaction.Contract.ContractType type = 1;</code>
                 */
                public Builder setTypeValue(int value) {
                    type_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>.protocol.Transaction.Contract.ContractType type = 1;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType getType() {
                    com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType result = com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType.valueOf(type_);
                    return result == null ? com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType.UNRECOGNIZED : result;
                }
                /**
                 * <code>.protocol.Transaction.Contract.ContractType type = 1;</code>
                 */
                public Builder setType(com.cryptowallet.crypto.Protocol.Transaction.Contract.ContractType value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    type_ = value.getNumber();
                    onChanged();
                    return this;
                }
                /**
                 * <code>.protocol.Transaction.Contract.ContractType type = 1;</code>
                 */
                public Builder clearType() {

                    type_ = 0;
                    onChanged();
                    return this;
                }

                private com.google.protobuf.Any parameter_ = null;
                private com.google.protobuf.SingleFieldBuilderV3<
                        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> parameterBuilder_;
                /**
                 * <code>.google.protobuf.Any parameter = 2;</code>
                 */
                public boolean hasParameter() {
                    return parameterBuilder_ != null || parameter_ != null;
                }
                /**
                 * <code>.google.protobuf.Any parameter = 2;</code>
                 */
                public com.google.protobuf.Any getParameter() {
                    if (parameterBuilder_ == null) {
                        return parameter_ == null ? com.google.protobuf.Any.getDefaultInstance() : parameter_;
                    } else {
                        return parameterBuilder_.getMessage();
                    }
                }
                /**
                 * <code>.google.protobuf.Any parameter = 2;</code>
                 */
                public Builder setParameter(com.google.protobuf.Any value) {
                    if (parameterBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        parameter_ = value;
                        onChanged();
                    } else {
                        parameterBuilder_.setMessage(value);
                    }

                    return this;
                }
                /**
                 * <code>.google.protobuf.Any parameter = 2;</code>
                 */
                public Builder setParameter(
                        com.google.protobuf.Any.Builder builderForValue) {
                    if (parameterBuilder_ == null) {
                        parameter_ = builderForValue.build();
                        onChanged();
                    } else {
                        parameterBuilder_.setMessage(builderForValue.build());
                    }

                    return this;
                }
                /**
                 * <code>.google.protobuf.Any parameter = 2;</code>
                 */
                public Builder mergeParameter(com.google.protobuf.Any value) {
                    if (parameterBuilder_ == null) {
                        if (parameter_ != null) {
                            parameter_ =
                                    com.google.protobuf.Any.newBuilder(parameter_).mergeFrom(value).buildPartial();
                        } else {
                            parameter_ = value;
                        }
                        onChanged();
                    } else {
                        parameterBuilder_.mergeFrom(value);
                    }

                    return this;
                }
                /**
                 * <code>.google.protobuf.Any parameter = 2;</code>
                 */
                public Builder clearParameter() {
                    if (parameterBuilder_ == null) {
                        parameter_ = null;
                        onChanged();
                    } else {
                        parameter_ = null;
                        parameterBuilder_ = null;
                    }

                    return this;
                }
                /**
                 * <code>.google.protobuf.Any parameter = 2;</code>
                 */
                public com.google.protobuf.Any.Builder getParameterBuilder() {

                    onChanged();
                    return getParameterFieldBuilder().getBuilder();
                }
                /**
                 * <code>.google.protobuf.Any parameter = 2;</code>
                 */
                public com.google.protobuf.AnyOrBuilder getParameterOrBuilder() {
                    if (parameterBuilder_ != null) {
                        return parameterBuilder_.getMessageOrBuilder();
                    } else {
                        return parameter_ == null ?
                                com.google.protobuf.Any.getDefaultInstance() : parameter_;
                    }
                }
                /**
                 * <code>.google.protobuf.Any parameter = 2;</code>
                 */
                private com.google.protobuf.SingleFieldBuilderV3<
                        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>
                getParameterFieldBuilder() {
                    if (parameterBuilder_ == null) {
                        parameterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                                com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                                getParameter(),
                                getParentForChildren(),
                                isClean());
                        parameter_ = null;
                    }
                    return parameterBuilder_;
                }

                private com.google.protobuf.ByteString provider_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes provider = 3;</code>
                 */
                public com.google.protobuf.ByteString getProvider() {
                    return provider_;
                }
                /**
                 * <code>bytes provider = 3;</code>
                 */
                public Builder setProvider(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    provider_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes provider = 3;</code>
                 */
                public Builder clearProvider() {

                    provider_ = getDefaultInstance().getProvider();
                    onChanged();
                    return this;
                }

                private com.google.protobuf.ByteString contractName_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes ContractName = 4;</code>
                 */
                public com.google.protobuf.ByteString getContractName() {
                    return contractName_;
                }
                /**
                 * <code>bytes ContractName = 4;</code>
                 */
                public Builder setContractName(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    contractName_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes ContractName = 4;</code>
                 */
                public Builder clearContractName() {

                    contractName_ = getDefaultInstance().getContractName();
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.Transaction.Contract)
            }

            // @@protoc_insertion_point(class_scope:protocol.Transaction.Contract)
            private static final com.cryptowallet.crypto.Protocol.Transaction.Contract DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Transaction.Contract();
            }

            public static com.cryptowallet.crypto.Protocol.Transaction.Contract getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<Contract>
                    PARSER = new com.google.protobuf.AbstractParser<Contract>() {
                public Contract parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Contract(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<Contract> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<Contract> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.Transaction.Contract getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        public interface ResultOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.Transaction.Result)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>int64 fee = 1;</code>
             */
            long getFee();

            /**
             * <code>.protocol.Transaction.Result.code ret = 2;</code>
             */
            int getRetValue();
            /**
             * <code>.protocol.Transaction.Result.code ret = 2;</code>
             */
            com.cryptowallet.crypto.Protocol.Transaction.Result.code getRet();

            /**
             * <code>.protocol.Transaction.Result.contractResult contractRet = 3;</code>
             */
            int getContractRetValue();
            /**
             * <code>.protocol.Transaction.Result.contractResult contractRet = 3;</code>
             */
            com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult getContractRet();

            /**
             * <code>int64 withdraw_amount = 15;</code>
             */
            long getWithdrawAmount();

            /**
             * <code>int64 unfreeze_amount = 16;</code>
             */
            long getUnfreezeAmount();
        }
        /**
         * Protobuf type {@code protocol.Transaction.Result}
         */
        public  static final class Result extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.Transaction.Result)
                ResultOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use Result.newBuilder() to construct.
            private Result(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private Result() {
                fee_ = 0L;
                ret_ = 0;
                contractRet_ = 0;
                withdrawAmount_ = 0L;
                unfreezeAmount_ = 0L;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private Result(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {

                                fee_ = input.readInt64();
                                break;
                            }
                            case 16: {
                                int rawValue = input.readEnum();

                                ret_ = rawValue;
                                break;
                            }
                            case 24: {
                                int rawValue = input.readEnum();

                                contractRet_ = rawValue;
                                break;
                            }
                            case 120: {

                                withdrawAmount_ = input.readInt64();
                                break;
                            }
                            case 128: {

                                unfreezeAmount_ = input.readInt64();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_Result_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_Result_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Transaction.Result.class, com.cryptowallet.crypto.Protocol.Transaction.Result.Builder.class);
            }

            /**
             * Protobuf enum {@code protocol.Transaction.Result.code}
             */
            public enum code
                    implements com.google.protobuf.ProtocolMessageEnum {
                /**
                 * <code>SUCESS = 0;</code>
                 */
                SUCESS(0),
                /**
                 * <code>FAILED = 1;</code>
                 */
                FAILED(1),
                UNRECOGNIZED(-1),
                ;

                /**
                 * <code>SUCESS = 0;</code>
                 */
                public static final int SUCESS_VALUE = 0;
                /**
                 * <code>FAILED = 1;</code>
                 */
                public static final int FAILED_VALUE = 1;


                public final int getNumber() {
                    if (this == UNRECOGNIZED) {
                        throw new java.lang.IllegalArgumentException(
                                "Can't get the number of an unknown enum value.");
                    }
                    return value;
                }

                /**
                 * @deprecated Use {@link #forNumber(int)} instead.
                 */
                @java.lang.Deprecated
                public static code valueOf(int value) {
                    return forNumber(value);
                }

                public static code forNumber(int value) {
                    switch (value) {
                        case 0: return SUCESS;
                        case 1: return FAILED;
                        default: return null;
                    }
                }

                public static com.google.protobuf.Internal.EnumLiteMap<code>
                internalGetValueMap() {
                    return internalValueMap;
                }
                private static final com.google.protobuf.Internal.EnumLiteMap<
                        code> internalValueMap =
                        new com.google.protobuf.Internal.EnumLiteMap<code>() {
                            public code findValueByNumber(int number) {
                                return code.forNumber(number);
                            }
                        };

                public final com.google.protobuf.Descriptors.EnumValueDescriptor
                getValueDescriptor() {
                    return getDescriptor().getValues().get(ordinal());
                }
                public final com.google.protobuf.Descriptors.EnumDescriptor
                getDescriptorForType() {
                    return getDescriptor();
                }
                public static final com.google.protobuf.Descriptors.EnumDescriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.Transaction.Result.getDescriptor().getEnumTypes().get(0);
                }

                private static final code[] VALUES = values();

                public static code valueOf(
                        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                    if (desc.getType() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "EnumValueDescriptor is not for this type.");
                    }
                    if (desc.getIndex() == -1) {
                        return UNRECOGNIZED;
                    }
                    return VALUES[desc.getIndex()];
                }

                private final int value;

                private code(int value) {
                    this.value = value;
                }

                // @@protoc_insertion_point(enum_scope:protocol.Transaction.Result.code)
            }

            /**
             * Protobuf enum {@code protocol.Transaction.Result.contractResult}
             */
            public enum contractResult
                    implements com.google.protobuf.ProtocolMessageEnum {
                /**
                 * <code>DEFAULT = 0;</code>
                 */
                DEFAULT(0),
                /**
                 * <code>SUCCESS = 1;</code>
                 */
                SUCCESS(1),
                /**
                 * <code>REVERT = 2;</code>
                 */
                REVERT(2),
                /**
                 * <code>BAD_JUMP_DESTINATION = 3;</code>
                 */
                BAD_JUMP_DESTINATION(3),
                /**
                 * <code>OUT_OF_MEMORY = 4;</code>
                 */
                OUT_OF_MEMORY(4),
                /**
                 * <code>PRECOMPILED_CONTRACT = 5;</code>
                 */
                PRECOMPILED_CONTRACT(5),
                /**
                 * <code>STACK_TOO_SMALL = 6;</code>
                 */
                STACK_TOO_SMALL(6),
                /**
                 * <code>STACK_TOO_LARGE = 7;</code>
                 */
                STACK_TOO_LARGE(7),
                /**
                 * <code>ILLEGAL_OPERATION = 8;</code>
                 */
                ILLEGAL_OPERATION(8),
                /**
                 * <code>STACK_OVERFLOW = 9;</code>
                 */
                STACK_OVERFLOW(9),
                /**
                 * <code>OUT_OF_ENERGY = 10;</code>
                 */
                OUT_OF_ENERGY(10),
                /**
                 * <code>OUT_OF_TIME = 11;</code>
                 */
                OUT_OF_TIME(11),
                /**
                 * <code>JVM_STACK_OVER_FLOW = 12;</code>
                 */
                JVM_STACK_OVER_FLOW(12),
                /**
                 * <code>UNKNOWN = 13;</code>
                 */
                UNKNOWN(13),
                UNRECOGNIZED(-1),
                ;

                /**
                 * <code>DEFAULT = 0;</code>
                 */
                public static final int DEFAULT_VALUE = 0;
                /**
                 * <code>SUCCESS = 1;</code>
                 */
                public static final int SUCCESS_VALUE = 1;
                /**
                 * <code>REVERT = 2;</code>
                 */
                public static final int REVERT_VALUE = 2;
                /**
                 * <code>BAD_JUMP_DESTINATION = 3;</code>
                 */
                public static final int BAD_JUMP_DESTINATION_VALUE = 3;
                /**
                 * <code>OUT_OF_MEMORY = 4;</code>
                 */
                public static final int OUT_OF_MEMORY_VALUE = 4;
                /**
                 * <code>PRECOMPILED_CONTRACT = 5;</code>
                 */
                public static final int PRECOMPILED_CONTRACT_VALUE = 5;
                /**
                 * <code>STACK_TOO_SMALL = 6;</code>
                 */
                public static final int STACK_TOO_SMALL_VALUE = 6;
                /**
                 * <code>STACK_TOO_LARGE = 7;</code>
                 */
                public static final int STACK_TOO_LARGE_VALUE = 7;
                /**
                 * <code>ILLEGAL_OPERATION = 8;</code>
                 */
                public static final int ILLEGAL_OPERATION_VALUE = 8;
                /**
                 * <code>STACK_OVERFLOW = 9;</code>
                 */
                public static final int STACK_OVERFLOW_VALUE = 9;
                /**
                 * <code>OUT_OF_ENERGY = 10;</code>
                 */
                public static final int OUT_OF_ENERGY_VALUE = 10;
                /**
                 * <code>OUT_OF_TIME = 11;</code>
                 */
                public static final int OUT_OF_TIME_VALUE = 11;
                /**
                 * <code>JVM_STACK_OVER_FLOW = 12;</code>
                 */
                public static final int JVM_STACK_OVER_FLOW_VALUE = 12;
                /**
                 * <code>UNKNOWN = 13;</code>
                 */
                public static final int UNKNOWN_VALUE = 13;


                public final int getNumber() {
                    if (this == UNRECOGNIZED) {
                        throw new java.lang.IllegalArgumentException(
                                "Can't get the number of an unknown enum value.");
                    }
                    return value;
                }

                /**
                 * @deprecated Use {@link #forNumber(int)} instead.
                 */
                @java.lang.Deprecated
                public static contractResult valueOf(int value) {
                    return forNumber(value);
                }

                public static contractResult forNumber(int value) {
                    switch (value) {
                        case 0: return DEFAULT;
                        case 1: return SUCCESS;
                        case 2: return REVERT;
                        case 3: return BAD_JUMP_DESTINATION;
                        case 4: return OUT_OF_MEMORY;
                        case 5: return PRECOMPILED_CONTRACT;
                        case 6: return STACK_TOO_SMALL;
                        case 7: return STACK_TOO_LARGE;
                        case 8: return ILLEGAL_OPERATION;
                        case 9: return STACK_OVERFLOW;
                        case 10: return OUT_OF_ENERGY;
                        case 11: return OUT_OF_TIME;
                        case 12: return JVM_STACK_OVER_FLOW;
                        case 13: return UNKNOWN;
                        default: return null;
                    }
                }

                public static com.google.protobuf.Internal.EnumLiteMap<contractResult>
                internalGetValueMap() {
                    return internalValueMap;
                }
                private static final com.google.protobuf.Internal.EnumLiteMap<
                        contractResult> internalValueMap =
                        new com.google.protobuf.Internal.EnumLiteMap<contractResult>() {
                            public contractResult findValueByNumber(int number) {
                                return contractResult.forNumber(number);
                            }
                        };

                public final com.google.protobuf.Descriptors.EnumValueDescriptor
                getValueDescriptor() {
                    return getDescriptor().getValues().get(ordinal());
                }
                public final com.google.protobuf.Descriptors.EnumDescriptor
                getDescriptorForType() {
                    return getDescriptor();
                }
                public static final com.google.protobuf.Descriptors.EnumDescriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.Transaction.Result.getDescriptor().getEnumTypes().get(1);
                }

                private static final contractResult[] VALUES = values();

                public static contractResult valueOf(
                        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                    if (desc.getType() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "EnumValueDescriptor is not for this type.");
                    }
                    if (desc.getIndex() == -1) {
                        return UNRECOGNIZED;
                    }
                    return VALUES[desc.getIndex()];
                }

                private final int value;

                private contractResult(int value) {
                    this.value = value;
                }

                // @@protoc_insertion_point(enum_scope:protocol.Transaction.Result.contractResult)
            }

            public static final int FEE_FIELD_NUMBER = 1;
            private long fee_;
            /**
             * <code>int64 fee = 1;</code>
             */
            public long getFee() {
                return fee_;
            }

            public static final int RET_FIELD_NUMBER = 2;
            private int ret_;
            /**
             * <code>.protocol.Transaction.Result.code ret = 2;</code>
             */
            public int getRetValue() {
                return ret_;
            }
            /**
             * <code>.protocol.Transaction.Result.code ret = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Result.code getRet() {
                com.cryptowallet.crypto.Protocol.Transaction.Result.code result = com.cryptowallet.crypto.Protocol.Transaction.Result.code.valueOf(ret_);
                return result == null ? com.cryptowallet.crypto.Protocol.Transaction.Result.code.UNRECOGNIZED : result;
            }

            public static final int CONTRACTRET_FIELD_NUMBER = 3;
            private int contractRet_;
            /**
             * <code>.protocol.Transaction.Result.contractResult contractRet = 3;</code>
             */
            public int getContractRetValue() {
                return contractRet_;
            }
            /**
             * <code>.protocol.Transaction.Result.contractResult contractRet = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult getContractRet() {
                com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult result = com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.valueOf(contractRet_);
                return result == null ? com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.UNRECOGNIZED : result;
            }

            public static final int WITHDRAW_AMOUNT_FIELD_NUMBER = 15;
            private long withdrawAmount_;
            /**
             * <code>int64 withdraw_amount = 15;</code>
             */
            public long getWithdrawAmount() {
                return withdrawAmount_;
            }

            public static final int UNFREEZE_AMOUNT_FIELD_NUMBER = 16;
            private long unfreezeAmount_;
            /**
             * <code>int64 unfreeze_amount = 16;</code>
             */
            public long getUnfreezeAmount() {
                return unfreezeAmount_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (fee_ != 0L) {
                    output.writeInt64(1, fee_);
                }
                if (ret_ != com.cryptowallet.crypto.Protocol.Transaction.Result.code.SUCESS.getNumber()) {
                    output.writeEnum(2, ret_);
                }
                if (contractRet_ != com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.DEFAULT.getNumber()) {
                    output.writeEnum(3, contractRet_);
                }
                if (withdrawAmount_ != 0L) {
                    output.writeInt64(15, withdrawAmount_);
                }
                if (unfreezeAmount_ != 0L) {
                    output.writeInt64(16, unfreezeAmount_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (fee_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(1, fee_);
                }
                if (ret_ != com.cryptowallet.crypto.Protocol.Transaction.Result.code.SUCESS.getNumber()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeEnumSize(2, ret_);
                }
                if (contractRet_ != com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.DEFAULT.getNumber()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeEnumSize(3, contractRet_);
                }
                if (withdrawAmount_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(15, withdrawAmount_);
                }
                if (unfreezeAmount_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(16, unfreezeAmount_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.Transaction.Result)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.Transaction.Result other = (com.cryptowallet.crypto.Protocol.Transaction.Result) obj;

                boolean result = true;
                result = result && (getFee()
                        == other.getFee());
                result = result && ret_ == other.ret_;
                result = result && contractRet_ == other.contractRet_;
                result = result && (getWithdrawAmount()
                        == other.getWithdrawAmount());
                result = result && (getUnfreezeAmount()
                        == other.getUnfreezeAmount());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + FEE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getFee());
                hash = (37 * hash) + RET_FIELD_NUMBER;
                hash = (53 * hash) + ret_;
                hash = (37 * hash) + CONTRACTRET_FIELD_NUMBER;
                hash = (53 * hash) + contractRet_;
                hash = (37 * hash) + WITHDRAW_AMOUNT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getWithdrawAmount());
                hash = (37 * hash) + UNFREEZE_AMOUNT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getUnfreezeAmount());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.Result parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Transaction.Result prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.Transaction.Result}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.Transaction.Result)
                    com.cryptowallet.crypto.Protocol.Transaction.ResultOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_Result_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_Result_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.Transaction.Result.class, com.cryptowallet.crypto.Protocol.Transaction.Result.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.Transaction.Result.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    fee_ = 0L;

                    ret_ = 0;

                    contractRet_ = 0;

                    withdrawAmount_ = 0L;

                    unfreezeAmount_ = 0L;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_Result_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.Transaction.Result getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.Transaction.Result.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.Transaction.Result build() {
                    com.cryptowallet.crypto.Protocol.Transaction.Result result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.Transaction.Result buildPartial() {
                    com.cryptowallet.crypto.Protocol.Transaction.Result result = new com.cryptowallet.crypto.Protocol.Transaction.Result(this);
                    result.fee_ = fee_;
                    result.ret_ = ret_;
                    result.contractRet_ = contractRet_;
                    result.withdrawAmount_ = withdrawAmount_;
                    result.unfreezeAmount_ = unfreezeAmount_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.Transaction.Result) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.Transaction.Result)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Transaction.Result other) {
                    if (other == com.cryptowallet.crypto.Protocol.Transaction.Result.getDefaultInstance()) return this;
                    if (other.getFee() != 0L) {
                        setFee(other.getFee());
                    }
                    if (other.ret_ != 0) {
                        setRetValue(other.getRetValue());
                    }
                    if (other.contractRet_ != 0) {
                        setContractRetValue(other.getContractRetValue());
                    }
                    if (other.getWithdrawAmount() != 0L) {
                        setWithdrawAmount(other.getWithdrawAmount());
                    }
                    if (other.getUnfreezeAmount() != 0L) {
                        setUnfreezeAmount(other.getUnfreezeAmount());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.Transaction.Result parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.Transaction.Result) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private long fee_ ;
                /**
                 * <code>int64 fee = 1;</code>
                 */
                public long getFee() {
                    return fee_;
                }
                /**
                 * <code>int64 fee = 1;</code>
                 */
                public Builder setFee(long value) {

                    fee_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 fee = 1;</code>
                 */
                public Builder clearFee() {

                    fee_ = 0L;
                    onChanged();
                    return this;
                }

                private int ret_ = 0;
                /**
                 * <code>.protocol.Transaction.Result.code ret = 2;</code>
                 */
                public int getRetValue() {
                    return ret_;
                }
                /**
                 * <code>.protocol.Transaction.Result.code ret = 2;</code>
                 */
                public Builder setRetValue(int value) {
                    ret_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>.protocol.Transaction.Result.code ret = 2;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Transaction.Result.code getRet() {
                    com.cryptowallet.crypto.Protocol.Transaction.Result.code result = com.cryptowallet.crypto.Protocol.Transaction.Result.code.valueOf(ret_);
                    return result == null ? com.cryptowallet.crypto.Protocol.Transaction.Result.code.UNRECOGNIZED : result;
                }
                /**
                 * <code>.protocol.Transaction.Result.code ret = 2;</code>
                 */
                public Builder setRet(com.cryptowallet.crypto.Protocol.Transaction.Result.code value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    ret_ = value.getNumber();
                    onChanged();
                    return this;
                }
                /**
                 * <code>.protocol.Transaction.Result.code ret = 2;</code>
                 */
                public Builder clearRet() {

                    ret_ = 0;
                    onChanged();
                    return this;
                }

                private int contractRet_ = 0;
                /**
                 * <code>.protocol.Transaction.Result.contractResult contractRet = 3;</code>
                 */
                public int getContractRetValue() {
                    return contractRet_;
                }
                /**
                 * <code>.protocol.Transaction.Result.contractResult contractRet = 3;</code>
                 */
                public Builder setContractRetValue(int value) {
                    contractRet_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>.protocol.Transaction.Result.contractResult contractRet = 3;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult getContractRet() {
                    com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult result = com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.valueOf(contractRet_);
                    return result == null ? com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult.UNRECOGNIZED : result;
                }
                /**
                 * <code>.protocol.Transaction.Result.contractResult contractRet = 3;</code>
                 */
                public Builder setContractRet(com.cryptowallet.crypto.Protocol.Transaction.Result.contractResult value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    contractRet_ = value.getNumber();
                    onChanged();
                    return this;
                }
                /**
                 * <code>.protocol.Transaction.Result.contractResult contractRet = 3;</code>
                 */
                public Builder clearContractRet() {

                    contractRet_ = 0;
                    onChanged();
                    return this;
                }

                private long withdrawAmount_ ;
                /**
                 * <code>int64 withdraw_amount = 15;</code>
                 */
                public long getWithdrawAmount() {
                    return withdrawAmount_;
                }
                /**
                 * <code>int64 withdraw_amount = 15;</code>
                 */
                public Builder setWithdrawAmount(long value) {

                    withdrawAmount_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 withdraw_amount = 15;</code>
                 */
                public Builder clearWithdrawAmount() {

                    withdrawAmount_ = 0L;
                    onChanged();
                    return this;
                }

                private long unfreezeAmount_ ;
                /**
                 * <code>int64 unfreeze_amount = 16;</code>
                 */
                public long getUnfreezeAmount() {
                    return unfreezeAmount_;
                }
                /**
                 * <code>int64 unfreeze_amount = 16;</code>
                 */
                public Builder setUnfreezeAmount(long value) {

                    unfreezeAmount_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 unfreeze_amount = 16;</code>
                 */
                public Builder clearUnfreezeAmount() {

                    unfreezeAmount_ = 0L;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.Transaction.Result)
            }

            // @@protoc_insertion_point(class_scope:protocol.Transaction.Result)
            private static final com.cryptowallet.crypto.Protocol.Transaction.Result DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Transaction.Result();
            }

            public static com.cryptowallet.crypto.Protocol.Transaction.Result getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<Result>
                    PARSER = new com.google.protobuf.AbstractParser<Result>() {
                public Result parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Result(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<Result> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<Result> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.Transaction.Result getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        public interface rawOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.Transaction.raw)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>bytes ref_block_bytes = 1;</code>
             */
            com.google.protobuf.ByteString getRefBlockBytes();

            /**
             * <code>int64 ref_block_num = 3;</code>
             */
            long getRefBlockNum();

            /**
             * <code>bytes ref_block_hash = 4;</code>
             */
            com.google.protobuf.ByteString getRefBlockHash();

            /**
             * <code>int64 expiration = 8;</code>
             */
            long getExpiration();

            /**
             * <code>repeated .protocol.authority auths = 9;</code>
             */
            java.util.List<com.cryptowallet.crypto.Protocol.authority>
            getAuthsList();
            /**
             * <code>repeated .protocol.authority auths = 9;</code>
             */
            com.cryptowallet.crypto.Protocol.authority getAuths(int index);
            /**
             * <code>repeated .protocol.authority auths = 9;</code>
             */
            int getAuthsCount();
            /**
             * <code>repeated .protocol.authority auths = 9;</code>
             */
            java.util.List<? extends com.cryptowallet.crypto.Protocol.authorityOrBuilder>
            getAuthsOrBuilderList();
            /**
             * <code>repeated .protocol.authority auths = 9;</code>
             */
            com.cryptowallet.crypto.Protocol.authorityOrBuilder getAuthsOrBuilder(
                    int index);

            /**
             * <pre>
             * data not used
             * </pre>
             *
             * <code>bytes data = 10;</code>
             */
            com.google.protobuf.ByteString getData();

            /**
             * <pre>
             *only support size = 1,  repeated list here for extension
             * </pre>
             *
             * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
             */
            java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Contract>
            getContractList();
            /**
             * <pre>
             *only support size = 1,  repeated list here for extension
             * </pre>
             *
             * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
             */
            com.cryptowallet.crypto.Protocol.Transaction.Contract getContract(int index);
            /**
             * <pre>
             *only support size = 1,  repeated list here for extension
             * </pre>
             *
             * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
             */
            int getContractCount();
            /**
             * <pre>
             *only support size = 1,  repeated list here for extension
             * </pre>
             *
             * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
             */
            java.util.List<? extends com.cryptowallet.crypto.Protocol.Transaction.ContractOrBuilder>
            getContractOrBuilderList();
            /**
             * <pre>
             *only support size = 1,  repeated list here for extension
             * </pre>
             *
             * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
             */
            com.cryptowallet.crypto.Protocol.Transaction.ContractOrBuilder getContractOrBuilder(
                    int index);

            /**
             * <pre>
             * scripts not used
             * </pre>
             *
             * <code>bytes scripts = 12;</code>
             */
            com.google.protobuf.ByteString getScripts();

            /**
             * <code>int64 timestamp = 14;</code>
             */
            long getTimestamp();

            /**
             * <code>int64 fee_limit = 18;</code>
             */
            long getFeeLimit();
        }
        /**
         * Protobuf type {@code protocol.Transaction.raw}
         */
        public  static final class raw extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.Transaction.raw)
                rawOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use raw.newBuilder() to construct.
            private raw(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private raw() {
                refBlockBytes_ = com.google.protobuf.ByteString.EMPTY;
                refBlockNum_ = 0L;
                refBlockHash_ = com.google.protobuf.ByteString.EMPTY;
                expiration_ = 0L;
                auths_ = java.util.Collections.emptyList();
                data_ = com.google.protobuf.ByteString.EMPTY;
                contract_ = java.util.Collections.emptyList();
                scripts_ = com.google.protobuf.ByteString.EMPTY;
                timestamp_ = 0L;
                feeLimit_ = 0L;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private raw(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {

                                refBlockBytes_ = input.readBytes();
                                break;
                            }
                            case 24: {

                                refBlockNum_ = input.readInt64();
                                break;
                            }
                            case 34: {

                                refBlockHash_ = input.readBytes();
                                break;
                            }
                            case 64: {

                                expiration_ = input.readInt64();
                                break;
                            }
                            case 74: {
                                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                                    auths_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.authority>();
                                    mutable_bitField0_ |= 0x00000010;
                                }
                                auths_.add(
                                        input.readMessage(com.cryptowallet.crypto.Protocol.authority.parser(), extensionRegistry));
                                break;
                            }
                            case 82: {

                                data_ = input.readBytes();
                                break;
                            }
                            case 90: {
                                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                    contract_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Transaction.Contract>();
                                    mutable_bitField0_ |= 0x00000040;
                                }
                                contract_.add(
                                        input.readMessage(com.cryptowallet.crypto.Protocol.Transaction.Contract.parser(), extensionRegistry));
                                break;
                            }
                            case 98: {

                                scripts_ = input.readBytes();
                                break;
                            }
                            case 112: {

                                timestamp_ = input.readInt64();
                                break;
                            }
                            case 144: {

                                feeLimit_ = input.readInt64();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                        auths_ = java.util.Collections.unmodifiableList(auths_);
                    }
                    if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                        contract_ = java.util.Collections.unmodifiableList(contract_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_raw_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_raw_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Transaction.raw.class, com.cryptowallet.crypto.Protocol.Transaction.raw.Builder.class);
            }

            private int bitField0_;
            public static final int REF_BLOCK_BYTES_FIELD_NUMBER = 1;
            private com.google.protobuf.ByteString refBlockBytes_;
            /**
             * <code>bytes ref_block_bytes = 1;</code>
             */
            public com.google.protobuf.ByteString getRefBlockBytes() {
                return refBlockBytes_;
            }

            public static final int REF_BLOCK_NUM_FIELD_NUMBER = 3;
            private long refBlockNum_;
            /**
             * <code>int64 ref_block_num = 3;</code>
             */
            public long getRefBlockNum() {
                return refBlockNum_;
            }

            public static final int REF_BLOCK_HASH_FIELD_NUMBER = 4;
            private com.google.protobuf.ByteString refBlockHash_;
            /**
             * <code>bytes ref_block_hash = 4;</code>
             */
            public com.google.protobuf.ByteString getRefBlockHash() {
                return refBlockHash_;
            }

            public static final int EXPIRATION_FIELD_NUMBER = 8;
            private long expiration_;
            /**
             * <code>int64 expiration = 8;</code>
             */
            public long getExpiration() {
                return expiration_;
            }

            public static final int AUTHS_FIELD_NUMBER = 9;
            private java.util.List<com.cryptowallet.crypto.Protocol.authority> auths_;
            /**
             * <code>repeated .protocol.authority auths = 9;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.authority> getAuthsList() {
                return auths_;
            }
            /**
             * <code>repeated .protocol.authority auths = 9;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.authorityOrBuilder>
            getAuthsOrBuilderList() {
                return auths_;
            }
            /**
             * <code>repeated .protocol.authority auths = 9;</code>
             */
            public int getAuthsCount() {
                return auths_.size();
            }
            /**
             * <code>repeated .protocol.authority auths = 9;</code>
             */
            public com.cryptowallet.crypto.Protocol.authority getAuths(int index) {
                return auths_.get(index);
            }
            /**
             * <code>repeated .protocol.authority auths = 9;</code>
             */
            public com.cryptowallet.crypto.Protocol.authorityOrBuilder getAuthsOrBuilder(
                    int index) {
                return auths_.get(index);
            }

            public static final int DATA_FIELD_NUMBER = 10;
            private com.google.protobuf.ByteString data_;
            /**
             * <pre>
             * data not used
             * </pre>
             *
             * <code>bytes data = 10;</code>
             */
            public com.google.protobuf.ByteString getData() {
                return data_;
            }

            public static final int CONTRACT_FIELD_NUMBER = 11;
            private java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Contract> contract_;
            /**
             * <pre>
             *only support size = 1,  repeated list here for extension
             * </pre>
             *
             * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Contract> getContractList() {
                return contract_;
            }
            /**
             * <pre>
             *only support size = 1,  repeated list here for extension
             * </pre>
             *
             * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.Transaction.ContractOrBuilder>
            getContractOrBuilderList() {
                return contract_;
            }
            /**
             * <pre>
             *only support size = 1,  repeated list here for extension
             * </pre>
             *
             * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
             */
            public int getContractCount() {
                return contract_.size();
            }
            /**
             * <pre>
             *only support size = 1,  repeated list here for extension
             * </pre>
             *
             * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Contract getContract(int index) {
                return contract_.get(index);
            }
            /**
             * <pre>
             *only support size = 1,  repeated list here for extension
             * </pre>
             *
             * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.ContractOrBuilder getContractOrBuilder(
                    int index) {
                return contract_.get(index);
            }

            public static final int SCRIPTS_FIELD_NUMBER = 12;
            private com.google.protobuf.ByteString scripts_;
            /**
             * <pre>
             * scripts not used
             * </pre>
             *
             * <code>bytes scripts = 12;</code>
             */
            public com.google.protobuf.ByteString getScripts() {
                return scripts_;
            }

            public static final int TIMESTAMP_FIELD_NUMBER = 14;
            private long timestamp_;
            /**
             * <code>int64 timestamp = 14;</code>
             */
            public long getTimestamp() {
                return timestamp_;
            }

            public static final int FEE_LIMIT_FIELD_NUMBER = 18;
            private long feeLimit_;
            /**
             * <code>int64 fee_limit = 18;</code>
             */
            public long getFeeLimit() {
                return feeLimit_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (!refBlockBytes_.isEmpty()) {
                    output.writeBytes(1, refBlockBytes_);
                }
                if (refBlockNum_ != 0L) {
                    output.writeInt64(3, refBlockNum_);
                }
                if (!refBlockHash_.isEmpty()) {
                    output.writeBytes(4, refBlockHash_);
                }
                if (expiration_ != 0L) {
                    output.writeInt64(8, expiration_);
                }
                for (int i = 0; i < auths_.size(); i++) {
                    output.writeMessage(9, auths_.get(i));
                }
                if (!data_.isEmpty()) {
                    output.writeBytes(10, data_);
                }
                for (int i = 0; i < contract_.size(); i++) {
                    output.writeMessage(11, contract_.get(i));
                }
                if (!scripts_.isEmpty()) {
                    output.writeBytes(12, scripts_);
                }
                if (timestamp_ != 0L) {
                    output.writeInt64(14, timestamp_);
                }
                if (feeLimit_ != 0L) {
                    output.writeInt64(18, feeLimit_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!refBlockBytes_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(1, refBlockBytes_);
                }
                if (refBlockNum_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(3, refBlockNum_);
                }
                if (!refBlockHash_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(4, refBlockHash_);
                }
                if (expiration_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(8, expiration_);
                }
                for (int i = 0; i < auths_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(9, auths_.get(i));
                }
                if (!data_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(10, data_);
                }
                for (int i = 0; i < contract_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(11, contract_.get(i));
                }
                if (!scripts_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(12, scripts_);
                }
                if (timestamp_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(14, timestamp_);
                }
                if (feeLimit_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(18, feeLimit_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.Transaction.raw)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.Transaction.raw other = (com.cryptowallet.crypto.Protocol.Transaction.raw) obj;

                boolean result = true;
                result = result && getRefBlockBytes()
                        .equals(other.getRefBlockBytes());
                result = result && (getRefBlockNum()
                        == other.getRefBlockNum());
                result = result && getRefBlockHash()
                        .equals(other.getRefBlockHash());
                result = result && (getExpiration()
                        == other.getExpiration());
                result = result && getAuthsList()
                        .equals(other.getAuthsList());
                result = result && getData()
                        .equals(other.getData());
                result = result && getContractList()
                        .equals(other.getContractList());
                result = result && getScripts()
                        .equals(other.getScripts());
                result = result && (getTimestamp()
                        == other.getTimestamp());
                result = result && (getFeeLimit()
                        == other.getFeeLimit());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + REF_BLOCK_BYTES_FIELD_NUMBER;
                hash = (53 * hash) + getRefBlockBytes().hashCode();
                hash = (37 * hash) + REF_BLOCK_NUM_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getRefBlockNum());
                hash = (37 * hash) + REF_BLOCK_HASH_FIELD_NUMBER;
                hash = (53 * hash) + getRefBlockHash().hashCode();
                hash = (37 * hash) + EXPIRATION_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getExpiration());
                if (getAuthsCount() > 0) {
                    hash = (37 * hash) + AUTHS_FIELD_NUMBER;
                    hash = (53 * hash) + getAuthsList().hashCode();
                }
                hash = (37 * hash) + DATA_FIELD_NUMBER;
                hash = (53 * hash) + getData().hashCode();
                if (getContractCount() > 0) {
                    hash = (37 * hash) + CONTRACT_FIELD_NUMBER;
                    hash = (53 * hash) + getContractList().hashCode();
                }
                hash = (37 * hash) + SCRIPTS_FIELD_NUMBER;
                hash = (53 * hash) + getScripts().hashCode();
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getTimestamp());
                hash = (37 * hash) + FEE_LIMIT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getFeeLimit());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.Transaction.raw parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Transaction.raw prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.Transaction.raw}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.Transaction.raw)
                    com.cryptowallet.crypto.Protocol.Transaction.rawOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_raw_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_raw_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.Transaction.raw.class, com.cryptowallet.crypto.Protocol.Transaction.raw.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.Transaction.raw.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                        getAuthsFieldBuilder();
                        getContractFieldBuilder();
                    }
                }
                public Builder clear() {
                    super.clear();
                    refBlockBytes_ = com.google.protobuf.ByteString.EMPTY;

                    refBlockNum_ = 0L;

                    refBlockHash_ = com.google.protobuf.ByteString.EMPTY;

                    expiration_ = 0L;

                    if (authsBuilder_ == null) {
                        auths_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000010);
                    } else {
                        authsBuilder_.clear();
                    }
                    data_ = com.google.protobuf.ByteString.EMPTY;

                    if (contractBuilder_ == null) {
                        contract_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000040);
                    } else {
                        contractBuilder_.clear();
                    }
                    scripts_ = com.google.protobuf.ByteString.EMPTY;

                    timestamp_ = 0L;

                    feeLimit_ = 0L;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_raw_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.Transaction.raw getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.Transaction.raw.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.Transaction.raw build() {
                    com.cryptowallet.crypto.Protocol.Transaction.raw result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.Transaction.raw buildPartial() {
                    com.cryptowallet.crypto.Protocol.Transaction.raw result = new com.cryptowallet.crypto.Protocol.Transaction.raw(this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    result.refBlockBytes_ = refBlockBytes_;
                    result.refBlockNum_ = refBlockNum_;
                    result.refBlockHash_ = refBlockHash_;
                    result.expiration_ = expiration_;
                    if (authsBuilder_ == null) {
                        if (((bitField0_ & 0x00000010) == 0x00000010)) {
                            auths_ = java.util.Collections.unmodifiableList(auths_);
                            bitField0_ = (bitField0_ & ~0x00000010);
                        }
                        result.auths_ = auths_;
                    } else {
                        result.auths_ = authsBuilder_.build();
                    }
                    result.data_ = data_;
                    if (contractBuilder_ == null) {
                        if (((bitField0_ & 0x00000040) == 0x00000040)) {
                            contract_ = java.util.Collections.unmodifiableList(contract_);
                            bitField0_ = (bitField0_ & ~0x00000040);
                        }
                        result.contract_ = contract_;
                    } else {
                        result.contract_ = contractBuilder_.build();
                    }
                    result.scripts_ = scripts_;
                    result.timestamp_ = timestamp_;
                    result.feeLimit_ = feeLimit_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.Transaction.raw) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.Transaction.raw)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Transaction.raw other) {
                    if (other == com.cryptowallet.crypto.Protocol.Transaction.raw.getDefaultInstance()) return this;
                    if (other.getRefBlockBytes() != com.google.protobuf.ByteString.EMPTY) {
                        setRefBlockBytes(other.getRefBlockBytes());
                    }
                    if (other.getRefBlockNum() != 0L) {
                        setRefBlockNum(other.getRefBlockNum());
                    }
                    if (other.getRefBlockHash() != com.google.protobuf.ByteString.EMPTY) {
                        setRefBlockHash(other.getRefBlockHash());
                    }
                    if (other.getExpiration() != 0L) {
                        setExpiration(other.getExpiration());
                    }
                    if (authsBuilder_ == null) {
                        if (!other.auths_.isEmpty()) {
                            if (auths_.isEmpty()) {
                                auths_ = other.auths_;
                                bitField0_ = (bitField0_ & ~0x00000010);
                            } else {
                                ensureAuthsIsMutable();
                                auths_.addAll(other.auths_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.auths_.isEmpty()) {
                            if (authsBuilder_.isEmpty()) {
                                authsBuilder_.dispose();
                                authsBuilder_ = null;
                                auths_ = other.auths_;
                                bitField0_ = (bitField0_ & ~0x00000010);
                                authsBuilder_ =
                                        com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                                getAuthsFieldBuilder() : null;
                            } else {
                                authsBuilder_.addAllMessages(other.auths_);
                            }
                        }
                    }
                    if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
                        setData(other.getData());
                    }
                    if (contractBuilder_ == null) {
                        if (!other.contract_.isEmpty()) {
                            if (contract_.isEmpty()) {
                                contract_ = other.contract_;
                                bitField0_ = (bitField0_ & ~0x00000040);
                            } else {
                                ensureContractIsMutable();
                                contract_.addAll(other.contract_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.contract_.isEmpty()) {
                            if (contractBuilder_.isEmpty()) {
                                contractBuilder_.dispose();
                                contractBuilder_ = null;
                                contract_ = other.contract_;
                                bitField0_ = (bitField0_ & ~0x00000040);
                                contractBuilder_ =
                                        com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                                getContractFieldBuilder() : null;
                            } else {
                                contractBuilder_.addAllMessages(other.contract_);
                            }
                        }
                    }
                    if (other.getScripts() != com.google.protobuf.ByteString.EMPTY) {
                        setScripts(other.getScripts());
                    }
                    if (other.getTimestamp() != 0L) {
                        setTimestamp(other.getTimestamp());
                    }
                    if (other.getFeeLimit() != 0L) {
                        setFeeLimit(other.getFeeLimit());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.Transaction.raw parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.Transaction.raw) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }
                private int bitField0_;

                private com.google.protobuf.ByteString refBlockBytes_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes ref_block_bytes = 1;</code>
                 */
                public com.google.protobuf.ByteString getRefBlockBytes() {
                    return refBlockBytes_;
                }
                /**
                 * <code>bytes ref_block_bytes = 1;</code>
                 */
                public Builder setRefBlockBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    refBlockBytes_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes ref_block_bytes = 1;</code>
                 */
                public Builder clearRefBlockBytes() {

                    refBlockBytes_ = getDefaultInstance().getRefBlockBytes();
                    onChanged();
                    return this;
                }

                private long refBlockNum_ ;
                /**
                 * <code>int64 ref_block_num = 3;</code>
                 */
                public long getRefBlockNum() {
                    return refBlockNum_;
                }
                /**
                 * <code>int64 ref_block_num = 3;</code>
                 */
                public Builder setRefBlockNum(long value) {

                    refBlockNum_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 ref_block_num = 3;</code>
                 */
                public Builder clearRefBlockNum() {

                    refBlockNum_ = 0L;
                    onChanged();
                    return this;
                }

                private com.google.protobuf.ByteString refBlockHash_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes ref_block_hash = 4;</code>
                 */
                public com.google.protobuf.ByteString getRefBlockHash() {
                    return refBlockHash_;
                }
                /**
                 * <code>bytes ref_block_hash = 4;</code>
                 */
                public Builder setRefBlockHash(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    refBlockHash_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes ref_block_hash = 4;</code>
                 */
                public Builder clearRefBlockHash() {

                    refBlockHash_ = getDefaultInstance().getRefBlockHash();
                    onChanged();
                    return this;
                }

                private long expiration_ ;
                /**
                 * <code>int64 expiration = 8;</code>
                 */
                public long getExpiration() {
                    return expiration_;
                }
                /**
                 * <code>int64 expiration = 8;</code>
                 */
                public Builder setExpiration(long value) {

                    expiration_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 expiration = 8;</code>
                 */
                public Builder clearExpiration() {

                    expiration_ = 0L;
                    onChanged();
                    return this;
                }

                private java.util.List<com.cryptowallet.crypto.Protocol.authority> auths_ =
                        java.util.Collections.emptyList();
                private void ensureAuthsIsMutable() {
                    if (!((bitField0_ & 0x00000010) == 0x00000010)) {
                        auths_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.authority>(auths_);
                        bitField0_ |= 0x00000010;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilderV3<
                        com.cryptowallet.crypto.Protocol.authority, com.cryptowallet.crypto.Protocol.authority.Builder, com.cryptowallet.crypto.Protocol.authorityOrBuilder> authsBuilder_;

                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public java.util.List<com.cryptowallet.crypto.Protocol.authority> getAuthsList() {
                    if (authsBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(auths_);
                    } else {
                        return authsBuilder_.getMessageList();
                    }
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public int getAuthsCount() {
                    if (authsBuilder_ == null) {
                        return auths_.size();
                    } else {
                        return authsBuilder_.getCount();
                    }
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public com.cryptowallet.crypto.Protocol.authority getAuths(int index) {
                    if (authsBuilder_ == null) {
                        return auths_.get(index);
                    } else {
                        return authsBuilder_.getMessage(index);
                    }
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public Builder setAuths(
                        int index, com.cryptowallet.crypto.Protocol.authority value) {
                    if (authsBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureAuthsIsMutable();
                        auths_.set(index, value);
                        onChanged();
                    } else {
                        authsBuilder_.setMessage(index, value);
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public Builder setAuths(
                        int index, com.cryptowallet.crypto.Protocol.authority.Builder builderForValue) {
                    if (authsBuilder_ == null) {
                        ensureAuthsIsMutable();
                        auths_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        authsBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public Builder addAuths(com.cryptowallet.crypto.Protocol.authority value) {
                    if (authsBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureAuthsIsMutable();
                        auths_.add(value);
                        onChanged();
                    } else {
                        authsBuilder_.addMessage(value);
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public Builder addAuths(
                        int index, com.cryptowallet.crypto.Protocol.authority value) {
                    if (authsBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureAuthsIsMutable();
                        auths_.add(index, value);
                        onChanged();
                    } else {
                        authsBuilder_.addMessage(index, value);
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public Builder addAuths(
                        com.cryptowallet.crypto.Protocol.authority.Builder builderForValue) {
                    if (authsBuilder_ == null) {
                        ensureAuthsIsMutable();
                        auths_.add(builderForValue.build());
                        onChanged();
                    } else {
                        authsBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public Builder addAuths(
                        int index, com.cryptowallet.crypto.Protocol.authority.Builder builderForValue) {
                    if (authsBuilder_ == null) {
                        ensureAuthsIsMutable();
                        auths_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        authsBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public Builder addAllAuths(
                        java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.authority> values) {
                    if (authsBuilder_ == null) {
                        ensureAuthsIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                                values, auths_);
                        onChanged();
                    } else {
                        authsBuilder_.addAllMessages(values);
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public Builder clearAuths() {
                    if (authsBuilder_ == null) {
                        auths_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000010);
                        onChanged();
                    } else {
                        authsBuilder_.clear();
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public Builder removeAuths(int index) {
                    if (authsBuilder_ == null) {
                        ensureAuthsIsMutable();
                        auths_.remove(index);
                        onChanged();
                    } else {
                        authsBuilder_.remove(index);
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public com.cryptowallet.crypto.Protocol.authority.Builder getAuthsBuilder(
                        int index) {
                    return getAuthsFieldBuilder().getBuilder(index);
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public com.cryptowallet.crypto.Protocol.authorityOrBuilder getAuthsOrBuilder(
                        int index) {
                    if (authsBuilder_ == null) {
                        return auths_.get(index);  } else {
                        return authsBuilder_.getMessageOrBuilder(index);
                    }
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public java.util.List<? extends com.cryptowallet.crypto.Protocol.authorityOrBuilder>
                getAuthsOrBuilderList() {
                    if (authsBuilder_ != null) {
                        return authsBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(auths_);
                    }
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public com.cryptowallet.crypto.Protocol.authority.Builder addAuthsBuilder() {
                    return getAuthsFieldBuilder().addBuilder(
                            com.cryptowallet.crypto.Protocol.authority.getDefaultInstance());
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public com.cryptowallet.crypto.Protocol.authority.Builder addAuthsBuilder(
                        int index) {
                    return getAuthsFieldBuilder().addBuilder(
                            index, com.cryptowallet.crypto.Protocol.authority.getDefaultInstance());
                }
                /**
                 * <code>repeated .protocol.authority auths = 9;</code>
                 */
                public java.util.List<com.cryptowallet.crypto.Protocol.authority.Builder>
                getAuthsBuilderList() {
                    return getAuthsFieldBuilder().getBuilderList();
                }
                private com.google.protobuf.RepeatedFieldBuilderV3<
                        com.cryptowallet.crypto.Protocol.authority, com.cryptowallet.crypto.Protocol.authority.Builder, com.cryptowallet.crypto.Protocol.authorityOrBuilder>
                getAuthsFieldBuilder() {
                    if (authsBuilder_ == null) {
                        authsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                                com.cryptowallet.crypto.Protocol.authority, com.cryptowallet.crypto.Protocol.authority.Builder, com.cryptowallet.crypto.Protocol.authorityOrBuilder>(
                                auths_,
                                ((bitField0_ & 0x00000010) == 0x00000010),
                                getParentForChildren(),
                                isClean());
                        auths_ = null;
                    }
                    return authsBuilder_;
                }

                private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <pre>
                 * data not used
                 * </pre>
                 *
                 * <code>bytes data = 10;</code>
                 */
                public com.google.protobuf.ByteString getData() {
                    return data_;
                }
                /**
                 * <pre>
                 * data not used
                 * </pre>
                 *
                 * <code>bytes data = 10;</code>
                 */
                public Builder setData(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    data_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 * data not used
                 * </pre>
                 *
                 * <code>bytes data = 10;</code>
                 */
                public Builder clearData() {

                    data_ = getDefaultInstance().getData();
                    onChanged();
                    return this;
                }

                private java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Contract> contract_ =
                        java.util.Collections.emptyList();
                private void ensureContractIsMutable() {
                    if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                        contract_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Transaction.Contract>(contract_);
                        bitField0_ |= 0x00000040;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilderV3<
                        com.cryptowallet.crypto.Protocol.Transaction.Contract, com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder, com.cryptowallet.crypto.Protocol.Transaction.ContractOrBuilder> contractBuilder_;

                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Contract> getContractList() {
                    if (contractBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(contract_);
                    } else {
                        return contractBuilder_.getMessageList();
                    }
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public int getContractCount() {
                    if (contractBuilder_ == null) {
                        return contract_.size();
                    } else {
                        return contractBuilder_.getCount();
                    }
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Transaction.Contract getContract(int index) {
                    if (contractBuilder_ == null) {
                        return contract_.get(index);
                    } else {
                        return contractBuilder_.getMessage(index);
                    }
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public Builder setContract(
                        int index, com.cryptowallet.crypto.Protocol.Transaction.Contract value) {
                    if (contractBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureContractIsMutable();
                        contract_.set(index, value);
                        onChanged();
                    } else {
                        contractBuilder_.setMessage(index, value);
                    }
                    return this;
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public Builder setContract(
                        int index, com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder builderForValue) {
                    if (contractBuilder_ == null) {
                        ensureContractIsMutable();
                        contract_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        contractBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public Builder addContract(com.cryptowallet.crypto.Protocol.Transaction.Contract value) {
                    if (contractBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureContractIsMutable();
                        contract_.add(value);
                        onChanged();
                    } else {
                        contractBuilder_.addMessage(value);
                    }
                    return this;
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public Builder addContract(
                        int index, com.cryptowallet.crypto.Protocol.Transaction.Contract value) {
                    if (contractBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureContractIsMutable();
                        contract_.add(index, value);
                        onChanged();
                    } else {
                        contractBuilder_.addMessage(index, value);
                    }
                    return this;
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public Builder addContract(
                        com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder builderForValue) {
                    if (contractBuilder_ == null) {
                        ensureContractIsMutable();
                        contract_.add(builderForValue.build());
                        onChanged();
                    } else {
                        contractBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public Builder addContract(
                        int index, com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder builderForValue) {
                    if (contractBuilder_ == null) {
                        ensureContractIsMutable();
                        contract_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        contractBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public Builder addAllContract(
                        java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Transaction.Contract> values) {
                    if (contractBuilder_ == null) {
                        ensureContractIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                                values, contract_);
                        onChanged();
                    } else {
                        contractBuilder_.addAllMessages(values);
                    }
                    return this;
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public Builder clearContract() {
                    if (contractBuilder_ == null) {
                        contract_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000040);
                        onChanged();
                    } else {
                        contractBuilder_.clear();
                    }
                    return this;
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public Builder removeContract(int index) {
                    if (contractBuilder_ == null) {
                        ensureContractIsMutable();
                        contract_.remove(index);
                        onChanged();
                    } else {
                        contractBuilder_.remove(index);
                    }
                    return this;
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder getContractBuilder(
                        int index) {
                    return getContractFieldBuilder().getBuilder(index);
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Transaction.ContractOrBuilder getContractOrBuilder(
                        int index) {
                    if (contractBuilder_ == null) {
                        return contract_.get(index);  } else {
                        return contractBuilder_.getMessageOrBuilder(index);
                    }
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public java.util.List<? extends com.cryptowallet.crypto.Protocol.Transaction.ContractOrBuilder>
                getContractOrBuilderList() {
                    if (contractBuilder_ != null) {
                        return contractBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(contract_);
                    }
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder addContractBuilder() {
                    return getContractFieldBuilder().addBuilder(
                            com.cryptowallet.crypto.Protocol.Transaction.Contract.getDefaultInstance());
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder addContractBuilder(
                        int index) {
                    return getContractFieldBuilder().addBuilder(
                            index, com.cryptowallet.crypto.Protocol.Transaction.Contract.getDefaultInstance());
                }
                /**
                 * <pre>
                 *only support size = 1,  repeated list here for extension
                 * </pre>
                 *
                 * <code>repeated .protocol.Transaction.Contract contract = 11;</code>
                 */
                public java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder>
                getContractBuilderList() {
                    return getContractFieldBuilder().getBuilderList();
                }
                private com.google.protobuf.RepeatedFieldBuilderV3<
                        com.cryptowallet.crypto.Protocol.Transaction.Contract, com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder, com.cryptowallet.crypto.Protocol.Transaction.ContractOrBuilder>
                getContractFieldBuilder() {
                    if (contractBuilder_ == null) {
                        contractBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                                com.cryptowallet.crypto.Protocol.Transaction.Contract, com.cryptowallet.crypto.Protocol.Transaction.Contract.Builder, com.cryptowallet.crypto.Protocol.Transaction.ContractOrBuilder>(
                                contract_,
                                ((bitField0_ & 0x00000040) == 0x00000040),
                                getParentForChildren(),
                                isClean());
                        contract_ = null;
                    }
                    return contractBuilder_;
                }

                private com.google.protobuf.ByteString scripts_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <pre>
                 * scripts not used
                 * </pre>
                 *
                 * <code>bytes scripts = 12;</code>
                 */
                public com.google.protobuf.ByteString getScripts() {
                    return scripts_;
                }
                /**
                 * <pre>
                 * scripts not used
                 * </pre>
                 *
                 * <code>bytes scripts = 12;</code>
                 */
                public Builder setScripts(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    scripts_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 * scripts not used
                 * </pre>
                 *
                 * <code>bytes scripts = 12;</code>
                 */
                public Builder clearScripts() {

                    scripts_ = getDefaultInstance().getScripts();
                    onChanged();
                    return this;
                }

                private long timestamp_ ;
                /**
                 * <code>int64 timestamp = 14;</code>
                 */
                public long getTimestamp() {
                    return timestamp_;
                }
                /**
                 * <code>int64 timestamp = 14;</code>
                 */
                public Builder setTimestamp(long value) {

                    timestamp_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 timestamp = 14;</code>
                 */
                public Builder clearTimestamp() {

                    timestamp_ = 0L;
                    onChanged();
                    return this;
                }

                private long feeLimit_ ;
                /**
                 * <code>int64 fee_limit = 18;</code>
                 */
                public long getFeeLimit() {
                    return feeLimit_;
                }
                /**
                 * <code>int64 fee_limit = 18;</code>
                 */
                public Builder setFeeLimit(long value) {

                    feeLimit_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 fee_limit = 18;</code>
                 */
                public Builder clearFeeLimit() {

                    feeLimit_ = 0L;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.Transaction.raw)
            }

            // @@protoc_insertion_point(class_scope:protocol.Transaction.raw)
            private static final com.cryptowallet.crypto.Protocol.Transaction.raw DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Transaction.raw();
            }

            public static com.cryptowallet.crypto.Protocol.Transaction.raw getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<raw>
                    PARSER = new com.google.protobuf.AbstractParser<raw>() {
                public raw parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new raw(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<raw> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<raw> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.Transaction.raw getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int RAW_DATA_FIELD_NUMBER = 1;
        private com.cryptowallet.crypto.Protocol.Transaction.raw rawData_;
        /**
         * <code>.protocol.Transaction.raw raw_data = 1;</code>
         */
        public boolean hasRawData() {
            return rawData_ != null;
        }
        /**
         * <code>.protocol.Transaction.raw raw_data = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.Transaction.raw getRawData() {
            return rawData_ == null ? com.cryptowallet.crypto.Protocol.Transaction.raw.getDefaultInstance() : rawData_;
        }
        /**
         * <code>.protocol.Transaction.raw raw_data = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.Transaction.rawOrBuilder getRawDataOrBuilder() {
            return getRawData();
        }

        public static final int SIGNATURE_FIELD_NUMBER = 2;
        private java.util.List<com.google.protobuf.ByteString> signature_;
        /**
         * <pre>
         * only support size = 1,  repeated list here for muti-sig extension
         * </pre>
         *
         * <code>repeated bytes signature = 2;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
        getSignatureList() {
            return signature_;
        }
        /**
         * <pre>
         * only support size = 1,  repeated list here for muti-sig extension
         * </pre>
         *
         * <code>repeated bytes signature = 2;</code>
         */
        public int getSignatureCount() {
            return signature_.size();
        }
        /**
         * <pre>
         * only support size = 1,  repeated list here for muti-sig extension
         * </pre>
         *
         * <code>repeated bytes signature = 2;</code>
         */
        public com.google.protobuf.ByteString getSignature(int index) {
            return signature_.get(index);
        }

        public static final int RET_FIELD_NUMBER = 5;
        private java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Result> ret_;
        /**
         * <code>repeated .protocol.Transaction.Result ret = 5;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Result> getRetList() {
            return ret_;
        }
        /**
         * <code>repeated .protocol.Transaction.Result ret = 5;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.Transaction.ResultOrBuilder>
        getRetOrBuilderList() {
            return ret_;
        }
        /**
         * <code>repeated .protocol.Transaction.Result ret = 5;</code>
         */
        public int getRetCount() {
            return ret_.size();
        }
        /**
         * <code>repeated .protocol.Transaction.Result ret = 5;</code>
         */
        public com.cryptowallet.crypto.Protocol.Transaction.Result getRet(int index) {
            return ret_.get(index);
        }
        /**
         * <code>repeated .protocol.Transaction.Result ret = 5;</code>
         */
        public com.cryptowallet.crypto.Protocol.Transaction.ResultOrBuilder getRetOrBuilder(
                int index) {
            return ret_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (rawData_ != null) {
                output.writeMessage(1, getRawData());
            }
            for (int i = 0; i < signature_.size(); i++) {
                output.writeBytes(2, signature_.get(i));
            }
            for (int i = 0; i < ret_.size(); i++) {
                output.writeMessage(5, ret_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (rawData_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getRawData());
            }
            {
                int dataSize = 0;
                for (int i = 0; i < signature_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(signature_.get(i));
                }
                size += dataSize;
                size += 1 * getSignatureList().size();
            }
            for (int i = 0; i < ret_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, ret_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Transaction)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Transaction other = (com.cryptowallet.crypto.Protocol.Transaction) obj;

            boolean result = true;
            result = result && (hasRawData() == other.hasRawData());
            if (hasRawData()) {
                result = result && getRawData()
                        .equals(other.getRawData());
            }
            result = result && getSignatureList()
                    .equals(other.getSignatureList());
            result = result && getRetList()
                    .equals(other.getRetList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasRawData()) {
                hash = (37 * hash) + RAW_DATA_FIELD_NUMBER;
                hash = (53 * hash) + getRawData().hashCode();
            }
            if (getSignatureCount() > 0) {
                hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
                hash = (53 * hash) + getSignatureList().hashCode();
            }
            if (getRetCount() > 0) {
                hash = (37 * hash) + RET_FIELD_NUMBER;
                hash = (53 * hash) + getRetList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Transaction parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Transaction parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Transaction prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.Transaction}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Transaction)
                com.cryptowallet.crypto.Protocol.TransactionOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Transaction.class, com.cryptowallet.crypto.Protocol.Transaction.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Transaction.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getRetFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (rawDataBuilder_ == null) {
                    rawData_ = null;
                } else {
                    rawData_ = null;
                    rawDataBuilder_ = null;
                }
                signature_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                if (retBuilder_ == null) {
                    ret_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    retBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transaction_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Transaction getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Transaction build() {
                com.cryptowallet.crypto.Protocol.Transaction result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Transaction buildPartial() {
                com.cryptowallet.crypto.Protocol.Transaction result = new com.cryptowallet.crypto.Protocol.Transaction(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (rawDataBuilder_ == null) {
                    result.rawData_ = rawData_;
                } else {
                    result.rawData_ = rawDataBuilder_.build();
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    signature_ = java.util.Collections.unmodifiableList(signature_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.signature_ = signature_;
                if (retBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004)) {
                        ret_ = java.util.Collections.unmodifiableList(ret_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.ret_ = ret_;
                } else {
                    result.ret_ = retBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Transaction) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Transaction)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Transaction other) {
                if (other == com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance()) return this;
                if (other.hasRawData()) {
                    mergeRawData(other.getRawData());
                }
                if (!other.signature_.isEmpty()) {
                    if (signature_.isEmpty()) {
                        signature_ = other.signature_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureSignatureIsMutable();
                        signature_.addAll(other.signature_);
                    }
                    onChanged();
                }
                if (retBuilder_ == null) {
                    if (!other.ret_.isEmpty()) {
                        if (ret_.isEmpty()) {
                            ret_ = other.ret_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureRetIsMutable();
                            ret_.addAll(other.ret_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.ret_.isEmpty()) {
                        if (retBuilder_.isEmpty()) {
                            retBuilder_.dispose();
                            retBuilder_ = null;
                            ret_ = other.ret_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            retBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getRetFieldBuilder() : null;
                        } else {
                            retBuilder_.addAllMessages(other.ret_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Transaction parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Transaction) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private com.cryptowallet.crypto.Protocol.Transaction.raw rawData_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction.raw, com.cryptowallet.crypto.Protocol.Transaction.raw.Builder, com.cryptowallet.crypto.Protocol.Transaction.rawOrBuilder> rawDataBuilder_;
            /**
             * <code>.protocol.Transaction.raw raw_data = 1;</code>
             */
            public boolean hasRawData() {
                return rawDataBuilder_ != null || rawData_ != null;
            }
            /**
             * <code>.protocol.Transaction.raw raw_data = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.raw getRawData() {
                if (rawDataBuilder_ == null) {
                    return rawData_ == null ? com.cryptowallet.crypto.Protocol.Transaction.raw.getDefaultInstance() : rawData_;
                } else {
                    return rawDataBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.Transaction.raw raw_data = 1;</code>
             */
            public Builder setRawData(com.cryptowallet.crypto.Protocol.Transaction.raw value) {
                if (rawDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    rawData_ = value;
                    onChanged();
                } else {
                    rawDataBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.Transaction.raw raw_data = 1;</code>
             */
            public Builder setRawData(
                    com.cryptowallet.crypto.Protocol.Transaction.raw.Builder builderForValue) {
                if (rawDataBuilder_ == null) {
                    rawData_ = builderForValue.build();
                    onChanged();
                } else {
                    rawDataBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.Transaction.raw raw_data = 1;</code>
             */
            public Builder mergeRawData(com.cryptowallet.crypto.Protocol.Transaction.raw value) {
                if (rawDataBuilder_ == null) {
                    if (rawData_ != null) {
                        rawData_ =
                                com.cryptowallet.crypto.Protocol.Transaction.raw.newBuilder(rawData_).mergeFrom(value).buildPartial();
                    } else {
                        rawData_ = value;
                    }
                    onChanged();
                } else {
                    rawDataBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.Transaction.raw raw_data = 1;</code>
             */
            public Builder clearRawData() {
                if (rawDataBuilder_ == null) {
                    rawData_ = null;
                    onChanged();
                } else {
                    rawData_ = null;
                    rawDataBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.Transaction.raw raw_data = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.raw.Builder getRawDataBuilder() {

                onChanged();
                return getRawDataFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.Transaction.raw raw_data = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.rawOrBuilder getRawDataOrBuilder() {
                if (rawDataBuilder_ != null) {
                    return rawDataBuilder_.getMessageOrBuilder();
                } else {
                    return rawData_ == null ?
                            com.cryptowallet.crypto.Protocol.Transaction.raw.getDefaultInstance() : rawData_;
                }
            }
            /**
             * <code>.protocol.Transaction.raw raw_data = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction.raw, com.cryptowallet.crypto.Protocol.Transaction.raw.Builder, com.cryptowallet.crypto.Protocol.Transaction.rawOrBuilder>
            getRawDataFieldBuilder() {
                if (rawDataBuilder_ == null) {
                    rawDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Transaction.raw, com.cryptowallet.crypto.Protocol.Transaction.raw.Builder, com.cryptowallet.crypto.Protocol.Transaction.rawOrBuilder>(
                            getRawData(),
                            getParentForChildren(),
                            isClean());
                    rawData_ = null;
                }
                return rawDataBuilder_;
            }

            private java.util.List<com.google.protobuf.ByteString> signature_ = java.util.Collections.emptyList();
            private void ensureSignatureIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    signature_ = new java.util.ArrayList<com.google.protobuf.ByteString>(signature_);
                    bitField0_ |= 0x00000002;
                }
            }
            /**
             * <pre>
             * only support size = 1,  repeated list here for muti-sig extension
             * </pre>
             *
             * <code>repeated bytes signature = 2;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getSignatureList() {
                return java.util.Collections.unmodifiableList(signature_);
            }
            /**
             * <pre>
             * only support size = 1,  repeated list here for muti-sig extension
             * </pre>
             *
             * <code>repeated bytes signature = 2;</code>
             */
            public int getSignatureCount() {
                return signature_.size();
            }
            /**
             * <pre>
             * only support size = 1,  repeated list here for muti-sig extension
             * </pre>
             *
             * <code>repeated bytes signature = 2;</code>
             */
            public com.google.protobuf.ByteString getSignature(int index) {
                return signature_.get(index);
            }
            /**
             * <pre>
             * only support size = 1,  repeated list here for muti-sig extension
             * </pre>
             *
             * <code>repeated bytes signature = 2;</code>
             */
            public Builder setSignature(
                    int index, com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSignatureIsMutable();
                signature_.set(index, value);
                onChanged();
                return this;
            }
            /**
             * <pre>
             * only support size = 1,  repeated list here for muti-sig extension
             * </pre>
             *
             * <code>repeated bytes signature = 2;</code>
             */
            public Builder addSignature(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSignatureIsMutable();
                signature_.add(value);
                onChanged();
                return this;
            }
            /**
             * <pre>
             * only support size = 1,  repeated list here for muti-sig extension
             * </pre>
             *
             * <code>repeated bytes signature = 2;</code>
             */
            public Builder addAllSignature(
                    java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
                ensureSignatureIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, signature_);
                onChanged();
                return this;
            }
            /**
             * <pre>
             * only support size = 1,  repeated list here for muti-sig extension
             * </pre>
             *
             * <code>repeated bytes signature = 2;</code>
             */
            public Builder clearSignature() {
                signature_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Result> ret_ =
                    java.util.Collections.emptyList();
            private void ensureRetIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    ret_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Transaction.Result>(ret_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction.Result, com.cryptowallet.crypto.Protocol.Transaction.Result.Builder, com.cryptowallet.crypto.Protocol.Transaction.ResultOrBuilder> retBuilder_;

            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Result> getRetList() {
                if (retBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(ret_);
                } else {
                    return retBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public int getRetCount() {
                if (retBuilder_ == null) {
                    return ret_.size();
                } else {
                    return retBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Result getRet(int index) {
                if (retBuilder_ == null) {
                    return ret_.get(index);
                } else {
                    return retBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public Builder setRet(
                    int index, com.cryptowallet.crypto.Protocol.Transaction.Result value) {
                if (retBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureRetIsMutable();
                    ret_.set(index, value);
                    onChanged();
                } else {
                    retBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public Builder setRet(
                    int index, com.cryptowallet.crypto.Protocol.Transaction.Result.Builder builderForValue) {
                if (retBuilder_ == null) {
                    ensureRetIsMutable();
                    ret_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    retBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public Builder addRet(com.cryptowallet.crypto.Protocol.Transaction.Result value) {
                if (retBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureRetIsMutable();
                    ret_.add(value);
                    onChanged();
                } else {
                    retBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public Builder addRet(
                    int index, com.cryptowallet.crypto.Protocol.Transaction.Result value) {
                if (retBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureRetIsMutable();
                    ret_.add(index, value);
                    onChanged();
                } else {
                    retBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public Builder addRet(
                    com.cryptowallet.crypto.Protocol.Transaction.Result.Builder builderForValue) {
                if (retBuilder_ == null) {
                    ensureRetIsMutable();
                    ret_.add(builderForValue.build());
                    onChanged();
                } else {
                    retBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public Builder addRet(
                    int index, com.cryptowallet.crypto.Protocol.Transaction.Result.Builder builderForValue) {
                if (retBuilder_ == null) {
                    ensureRetIsMutable();
                    ret_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    retBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public Builder addAllRet(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Transaction.Result> values) {
                if (retBuilder_ == null) {
                    ensureRetIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, ret_);
                    onChanged();
                } else {
                    retBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public Builder clearRet() {
                if (retBuilder_ == null) {
                    ret_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    retBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public Builder removeRet(int index) {
                if (retBuilder_ == null) {
                    ensureRetIsMutable();
                    ret_.remove(index);
                    onChanged();
                } else {
                    retBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Result.Builder getRetBuilder(
                    int index) {
                return getRetFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.ResultOrBuilder getRetOrBuilder(
                    int index) {
                if (retBuilder_ == null) {
                    return ret_.get(index);  } else {
                    return retBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.Transaction.ResultOrBuilder>
            getRetOrBuilderList() {
                if (retBuilder_ != null) {
                    return retBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(ret_);
                }
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Result.Builder addRetBuilder() {
                return getRetFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.Transaction.Result.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Result.Builder addRetBuilder(
                    int index) {
                return getRetFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.Transaction.Result.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Transaction.Result ret = 5;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Result.Builder>
            getRetBuilderList() {
                return getRetFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction.Result, com.cryptowallet.crypto.Protocol.Transaction.Result.Builder, com.cryptowallet.crypto.Protocol.Transaction.ResultOrBuilder>
            getRetFieldBuilder() {
                if (retBuilder_ == null) {
                    retBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Transaction.Result, com.cryptowallet.crypto.Protocol.Transaction.Result.Builder, com.cryptowallet.crypto.Protocol.Transaction.ResultOrBuilder>(
                            ret_,
                            ((bitField0_ & 0x00000004) == 0x00000004),
                            getParentForChildren(),
                            isClean());
                    ret_ = null;
                }
                return retBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Transaction)
        }

        // @@protoc_insertion_point(class_scope:protocol.Transaction)
        private static final com.cryptowallet.crypto.Protocol.Transaction DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Transaction();
        }

        public static com.cryptowallet.crypto.Protocol.Transaction getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Transaction>
                PARSER = new com.google.protobuf.AbstractParser<Transaction>() {
            public Transaction parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Transaction(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Transaction> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Transaction> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Transaction getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface TransactionInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.TransactionInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>bytes id = 1;</code>
         */
        com.google.protobuf.ByteString getId();

        /**
         * <code>int64 fee = 2;</code>
         */
        long getFee();

        /**
         * <code>int64 blockNumber = 3;</code>
         */
        long getBlockNumber();

        /**
         * <code>int64 blockTimeStamp = 4;</code>
         */
        long getBlockTimeStamp();

        /**
         * <code>repeated bytes contractResult = 5;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getContractResultList();
        /**
         * <code>repeated bytes contractResult = 5;</code>
         */
        int getContractResultCount();
        /**
         * <code>repeated bytes contractResult = 5;</code>
         */
        com.google.protobuf.ByteString getContractResult(int index);

        /**
         * <code>bytes contract_address = 6;</code>
         */
        com.google.protobuf.ByteString getContractAddress();

        /**
         * <code>.protocol.ResourceReceipt receipt = 7;</code>
         */
        boolean hasReceipt();
        /**
         * <code>.protocol.ResourceReceipt receipt = 7;</code>
         */
        com.cryptowallet.crypto.Protocol.ResourceReceipt getReceipt();
        /**
         * <code>.protocol.ResourceReceipt receipt = 7;</code>
         */
        com.cryptowallet.crypto.Protocol.ResourceReceiptOrBuilder getReceiptOrBuilder();

        /**
         * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.TransactionInfo.Log>
        getLogList();
        /**
         * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
         */
        com.cryptowallet.crypto.Protocol.TransactionInfo.Log getLog(int index);
        /**
         * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
         */
        int getLogCount();
        /**
         * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionInfo.LogOrBuilder>
        getLogOrBuilderList();
        /**
         * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
         */
        com.cryptowallet.crypto.Protocol.TransactionInfo.LogOrBuilder getLogOrBuilder(
                int index);

        /**
         * <code>.protocol.TransactionInfo.code result = 9;</code>
         */
        int getResultValue();
        /**
         * <code>.protocol.TransactionInfo.code result = 9;</code>
         */
        com.cryptowallet.crypto.Protocol.TransactionInfo.code getResult();

        /**
         * <code>bytes resMessage = 10;</code>
         */
        com.google.protobuf.ByteString getResMessage();

        /**
         * <code>int64 withdraw_amount = 15;</code>
         */
        long getWithdrawAmount();

        /**
         * <code>int64 unfreeze_amount = 16;</code>
         */
        long getUnfreezeAmount();

        /**
         * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction>
        getInternalTransactionsList();
        /**
         * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
         */
        com.cryptowallet.crypto.Protocol.InternalTransaction getInternalTransactions(int index);
        /**
         * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
         */
        int getInternalTransactionsCount();
        /**
         * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.InternalTransactionOrBuilder>
        getInternalTransactionsOrBuilderList();
        /**
         * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
         */
        com.cryptowallet.crypto.Protocol.InternalTransactionOrBuilder getInternalTransactionsOrBuilder(
                int index);
    }
    /**
     * Protobuf type {@code protocol.TransactionInfo}
     */
    public  static final class TransactionInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.TransactionInfo)
            TransactionInfoOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use TransactionInfo.newBuilder() to construct.
        private TransactionInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private TransactionInfo() {
            id_ = com.google.protobuf.ByteString.EMPTY;
            fee_ = 0L;
            blockNumber_ = 0L;
            blockTimeStamp_ = 0L;
            contractResult_ = java.util.Collections.emptyList();
            contractAddress_ = com.google.protobuf.ByteString.EMPTY;
            log_ = java.util.Collections.emptyList();
            result_ = 0;
            resMessage_ = com.google.protobuf.ByteString.EMPTY;
            withdrawAmount_ = 0L;
            unfreezeAmount_ = 0L;
            internalTransactions_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private TransactionInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {

                            id_ = input.readBytes();
                            break;
                        }
                        case 16: {

                            fee_ = input.readInt64();
                            break;
                        }
                        case 24: {

                            blockNumber_ = input.readInt64();
                            break;
                        }
                        case 32: {

                            blockTimeStamp_ = input.readInt64();
                            break;
                        }
                        case 42: {
                            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                                contractResult_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            contractResult_.add(input.readBytes());
                            break;
                        }
                        case 50: {

                            contractAddress_ = input.readBytes();
                            break;
                        }
                        case 58: {
                            com.cryptowallet.crypto.Protocol.ResourceReceipt.Builder subBuilder = null;
                            if (receipt_ != null) {
                                subBuilder = receipt_.toBuilder();
                            }
                            receipt_ = input.readMessage(com.cryptowallet.crypto.Protocol.ResourceReceipt.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(receipt_);
                                receipt_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 66: {
                            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                                log_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.TransactionInfo.Log>();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            log_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.TransactionInfo.Log.parser(), extensionRegistry));
                            break;
                        }
                        case 72: {
                            int rawValue = input.readEnum();

                            result_ = rawValue;
                            break;
                        }
                        case 82: {

                            resMessage_ = input.readBytes();
                            break;
                        }
                        case 120: {

                            withdrawAmount_ = input.readInt64();
                            break;
                        }
                        case 128: {

                            unfreezeAmount_ = input.readInt64();
                            break;
                        }
                        case 138: {
                            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                                internalTransactions_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.InternalTransaction>();
                                mutable_bitField0_ |= 0x00001000;
                            }
                            internalTransactions_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.InternalTransaction.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    contractResult_ = java.util.Collections.unmodifiableList(contractResult_);
                }
                if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                    log_ = java.util.Collections.unmodifiableList(log_);
                }
                if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                    internalTransactions_ = java.util.Collections.unmodifiableList(internalTransactions_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.TransactionInfo.class, com.cryptowallet.crypto.Protocol.TransactionInfo.Builder.class);
        }

        /**
         * Protobuf enum {@code protocol.TransactionInfo.code}
         */
        public enum code
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>SUCESS = 0;</code>
             */
            SUCESS(0),
            /**
             * <code>FAILED = 1;</code>
             */
            FAILED(1),
            UNRECOGNIZED(-1),
            ;

            /**
             * <code>SUCESS = 0;</code>
             */
            public static final int SUCESS_VALUE = 0;
            /**
             * <code>FAILED = 1;</code>
             */
            public static final int FAILED_VALUE = 1;


            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new java.lang.IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static code valueOf(int value) {
                return forNumber(value);
            }

            public static code forNumber(int value) {
                switch (value) {
                    case 0: return SUCESS;
                    case 1: return FAILED;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<code>
            internalGetValueMap() {
                return internalValueMap;
            }
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    code> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<code>() {
                        public code findValueByNumber(int number) {
                            return code.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }
            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }
            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.TransactionInfo.getDescriptor().getEnumTypes().get(0);
            }

            private static final code[] VALUES = values();

            public static code valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private code(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:protocol.TransactionInfo.code)
        }

        public interface LogOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.TransactionInfo.Log)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>bytes address = 1;</code>
             */
            com.google.protobuf.ByteString getAddress();

            /**
             * <code>repeated bytes topics = 2;</code>
             */
            java.util.List<com.google.protobuf.ByteString> getTopicsList();
            /**
             * <code>repeated bytes topics = 2;</code>
             */
            int getTopicsCount();
            /**
             * <code>repeated bytes topics = 2;</code>
             */
            com.google.protobuf.ByteString getTopics(int index);

            /**
             * <code>bytes data = 3;</code>
             */
            com.google.protobuf.ByteString getData();
        }
        /**
         * Protobuf type {@code protocol.TransactionInfo.Log}
         */
        public  static final class Log extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.TransactionInfo.Log)
                LogOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use Log.newBuilder() to construct.
            private Log(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private Log() {
                address_ = com.google.protobuf.ByteString.EMPTY;
                topics_ = java.util.Collections.emptyList();
                data_ = com.google.protobuf.ByteString.EMPTY;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private Log(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {

                                address_ = input.readBytes();
                                break;
                            }
                            case 18: {
                                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                    topics_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                    mutable_bitField0_ |= 0x00000002;
                                }
                                topics_.add(input.readBytes());
                                break;
                            }
                            case 26: {

                                data_ = input.readBytes();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                        topics_ = java.util.Collections.unmodifiableList(topics_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionInfo_Log_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionInfo_Log_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.TransactionInfo.Log.class, com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder.class);
            }

            private int bitField0_;
            public static final int ADDRESS_FIELD_NUMBER = 1;
            private com.google.protobuf.ByteString address_;
            /**
             * <code>bytes address = 1;</code>
             */
            public com.google.protobuf.ByteString getAddress() {
                return address_;
            }

            public static final int TOPICS_FIELD_NUMBER = 2;
            private java.util.List<com.google.protobuf.ByteString> topics_;
            /**
             * <code>repeated bytes topics = 2;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getTopicsList() {
                return topics_;
            }
            /**
             * <code>repeated bytes topics = 2;</code>
             */
            public int getTopicsCount() {
                return topics_.size();
            }
            /**
             * <code>repeated bytes topics = 2;</code>
             */
            public com.google.protobuf.ByteString getTopics(int index) {
                return topics_.get(index);
            }

            public static final int DATA_FIELD_NUMBER = 3;
            private com.google.protobuf.ByteString data_;
            /**
             * <code>bytes data = 3;</code>
             */
            public com.google.protobuf.ByteString getData() {
                return data_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (!address_.isEmpty()) {
                    output.writeBytes(1, address_);
                }
                for (int i = 0; i < topics_.size(); i++) {
                    output.writeBytes(2, topics_.get(i));
                }
                if (!data_.isEmpty()) {
                    output.writeBytes(3, data_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!address_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(1, address_);
                }
                {
                    int dataSize = 0;
                    for (int i = 0; i < topics_.size(); i++) {
                        dataSize += com.google.protobuf.CodedOutputStream
                                .computeBytesSizeNoTag(topics_.get(i));
                    }
                    size += dataSize;
                    size += 1 * getTopicsList().size();
                }
                if (!data_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(3, data_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.TransactionInfo.Log)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.TransactionInfo.Log other = (com.cryptowallet.crypto.Protocol.TransactionInfo.Log) obj;

                boolean result = true;
                result = result && getAddress()
                        .equals(other.getAddress());
                result = result && getTopicsList()
                        .equals(other.getTopicsList());
                result = result && getData()
                        .equals(other.getData());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
                hash = (53 * hash) + getAddress().hashCode();
                if (getTopicsCount() > 0) {
                    hash = (37 * hash) + TOPICS_FIELD_NUMBER;
                    hash = (53 * hash) + getTopicsList().hashCode();
                }
                hash = (37 * hash) + DATA_FIELD_NUMBER;
                hash = (53 * hash) + getData().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.TransactionInfo.Log prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.TransactionInfo.Log}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.TransactionInfo.Log)
                    com.cryptowallet.crypto.Protocol.TransactionInfo.LogOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionInfo_Log_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionInfo_Log_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.TransactionInfo.Log.class, com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.TransactionInfo.Log.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    address_ = com.google.protobuf.ByteString.EMPTY;

                    topics_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    data_ = com.google.protobuf.ByteString.EMPTY;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionInfo_Log_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.TransactionInfo.Log getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.TransactionInfo.Log.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.TransactionInfo.Log build() {
                    com.cryptowallet.crypto.Protocol.TransactionInfo.Log result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.TransactionInfo.Log buildPartial() {
                    com.cryptowallet.crypto.Protocol.TransactionInfo.Log result = new com.cryptowallet.crypto.Protocol.TransactionInfo.Log(this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    result.address_ = address_;
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        topics_ = java.util.Collections.unmodifiableList(topics_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.topics_ = topics_;
                    result.data_ = data_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.TransactionInfo.Log) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.TransactionInfo.Log)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.TransactionInfo.Log other) {
                    if (other == com.cryptowallet.crypto.Protocol.TransactionInfo.Log.getDefaultInstance()) return this;
                    if (other.getAddress() != com.google.protobuf.ByteString.EMPTY) {
                        setAddress(other.getAddress());
                    }
                    if (!other.topics_.isEmpty()) {
                        if (topics_.isEmpty()) {
                            topics_ = other.topics_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureTopicsIsMutable();
                            topics_.addAll(other.topics_);
                        }
                        onChanged();
                    }
                    if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
                        setData(other.getData());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.TransactionInfo.Log parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.TransactionInfo.Log) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }
                private int bitField0_;

                private com.google.protobuf.ByteString address_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes address = 1;</code>
                 */
                public com.google.protobuf.ByteString getAddress() {
                    return address_;
                }
                /**
                 * <code>bytes address = 1;</code>
                 */
                public Builder setAddress(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    address_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes address = 1;</code>
                 */
                public Builder clearAddress() {

                    address_ = getDefaultInstance().getAddress();
                    onChanged();
                    return this;
                }

                private java.util.List<com.google.protobuf.ByteString> topics_ = java.util.Collections.emptyList();
                private void ensureTopicsIsMutable() {
                    if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                        topics_ = new java.util.ArrayList<com.google.protobuf.ByteString>(topics_);
                        bitField0_ |= 0x00000002;
                    }
                }
                /**
                 * <code>repeated bytes topics = 2;</code>
                 */
                public java.util.List<com.google.protobuf.ByteString>
                getTopicsList() {
                    return java.util.Collections.unmodifiableList(topics_);
                }
                /**
                 * <code>repeated bytes topics = 2;</code>
                 */
                public int getTopicsCount() {
                    return topics_.size();
                }
                /**
                 * <code>repeated bytes topics = 2;</code>
                 */
                public com.google.protobuf.ByteString getTopics(int index) {
                    return topics_.get(index);
                }
                /**
                 * <code>repeated bytes topics = 2;</code>
                 */
                public Builder setTopics(
                        int index, com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTopicsIsMutable();
                    topics_.set(index, value);
                    onChanged();
                    return this;
                }
                /**
                 * <code>repeated bytes topics = 2;</code>
                 */
                public Builder addTopics(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTopicsIsMutable();
                    topics_.add(value);
                    onChanged();
                    return this;
                }
                /**
                 * <code>repeated bytes topics = 2;</code>
                 */
                public Builder addAllTopics(
                        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
                    ensureTopicsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, topics_);
                    onChanged();
                    return this;
                }
                /**
                 * <code>repeated bytes topics = 2;</code>
                 */
                public Builder clearTopics() {
                    topics_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                    return this;
                }

                private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes data = 3;</code>
                 */
                public com.google.protobuf.ByteString getData() {
                    return data_;
                }
                /**
                 * <code>bytes data = 3;</code>
                 */
                public Builder setData(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    data_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes data = 3;</code>
                 */
                public Builder clearData() {

                    data_ = getDefaultInstance().getData();
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.TransactionInfo.Log)
            }

            // @@protoc_insertion_point(class_scope:protocol.TransactionInfo.Log)
            private static final com.cryptowallet.crypto.Protocol.TransactionInfo.Log DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.TransactionInfo.Log();
            }

            public static com.cryptowallet.crypto.Protocol.TransactionInfo.Log getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<Log>
                    PARSER = new com.google.protobuf.AbstractParser<Log>() {
                public Log parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Log(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<Log> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<Log> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.TransactionInfo.Log getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int ID_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString id_;
        /**
         * <code>bytes id = 1;</code>
         */
        public com.google.protobuf.ByteString getId() {
            return id_;
        }

        public static final int FEE_FIELD_NUMBER = 2;
        private long fee_;
        /**
         * <code>int64 fee = 2;</code>
         */
        public long getFee() {
            return fee_;
        }

        public static final int BLOCKNUMBER_FIELD_NUMBER = 3;
        private long blockNumber_;
        /**
         * <code>int64 blockNumber = 3;</code>
         */
        public long getBlockNumber() {
            return blockNumber_;
        }

        public static final int BLOCKTIMESTAMP_FIELD_NUMBER = 4;
        private long blockTimeStamp_;
        /**
         * <code>int64 blockTimeStamp = 4;</code>
         */
        public long getBlockTimeStamp() {
            return blockTimeStamp_;
        }

        public static final int CONTRACTRESULT_FIELD_NUMBER = 5;
        private java.util.List<com.google.protobuf.ByteString> contractResult_;
        /**
         * <code>repeated bytes contractResult = 5;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
        getContractResultList() {
            return contractResult_;
        }
        /**
         * <code>repeated bytes contractResult = 5;</code>
         */
        public int getContractResultCount() {
            return contractResult_.size();
        }
        /**
         * <code>repeated bytes contractResult = 5;</code>
         */
        public com.google.protobuf.ByteString getContractResult(int index) {
            return contractResult_.get(index);
        }

        public static final int CONTRACT_ADDRESS_FIELD_NUMBER = 6;
        private com.google.protobuf.ByteString contractAddress_;
        /**
         * <code>bytes contract_address = 6;</code>
         */
        public com.google.protobuf.ByteString getContractAddress() {
            return contractAddress_;
        }

        public static final int RECEIPT_FIELD_NUMBER = 7;
        private com.cryptowallet.crypto.Protocol.ResourceReceipt receipt_;
        /**
         * <code>.protocol.ResourceReceipt receipt = 7;</code>
         */
        public boolean hasReceipt() {
            return receipt_ != null;
        }
        /**
         * <code>.protocol.ResourceReceipt receipt = 7;</code>
         */
        public com.cryptowallet.crypto.Protocol.ResourceReceipt getReceipt() {
            return receipt_ == null ? com.cryptowallet.crypto.Protocol.ResourceReceipt.getDefaultInstance() : receipt_;
        }
        /**
         * <code>.protocol.ResourceReceipt receipt = 7;</code>
         */
        public com.cryptowallet.crypto.Protocol.ResourceReceiptOrBuilder getReceiptOrBuilder() {
            return getReceipt();
        }

        public static final int LOG_FIELD_NUMBER = 8;
        private java.util.List<com.cryptowallet.crypto.Protocol.TransactionInfo.Log> log_;
        /**
         * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.TransactionInfo.Log> getLogList() {
            return log_;
        }
        /**
         * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionInfo.LogOrBuilder>
        getLogOrBuilderList() {
            return log_;
        }
        /**
         * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
         */
        public int getLogCount() {
            return log_.size();
        }
        /**
         * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
         */
        public com.cryptowallet.crypto.Protocol.TransactionInfo.Log getLog(int index) {
            return log_.get(index);
        }
        /**
         * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
         */
        public com.cryptowallet.crypto.Protocol.TransactionInfo.LogOrBuilder getLogOrBuilder(
                int index) {
            return log_.get(index);
        }

        public static final int RESULT_FIELD_NUMBER = 9;
        private int result_;
        /**
         * <code>.protocol.TransactionInfo.code result = 9;</code>
         */
        public int getResultValue() {
            return result_;
        }
        /**
         * <code>.protocol.TransactionInfo.code result = 9;</code>
         */
        public com.cryptowallet.crypto.Protocol.TransactionInfo.code getResult() {
            com.cryptowallet.crypto.Protocol.TransactionInfo.code result = com.cryptowallet.crypto.Protocol.TransactionInfo.code.valueOf(result_);
            return result == null ? com.cryptowallet.crypto.Protocol.TransactionInfo.code.UNRECOGNIZED : result;
        }

        public static final int RESMESSAGE_FIELD_NUMBER = 10;
        private com.google.protobuf.ByteString resMessage_;
        /**
         * <code>bytes resMessage = 10;</code>
         */
        public com.google.protobuf.ByteString getResMessage() {
            return resMessage_;
        }

        public static final int WITHDRAW_AMOUNT_FIELD_NUMBER = 15;
        private long withdrawAmount_;
        /**
         * <code>int64 withdraw_amount = 15;</code>
         */
        public long getWithdrawAmount() {
            return withdrawAmount_;
        }

        public static final int UNFREEZE_AMOUNT_FIELD_NUMBER = 16;
        private long unfreezeAmount_;
        /**
         * <code>int64 unfreeze_amount = 16;</code>
         */
        public long getUnfreezeAmount() {
            return unfreezeAmount_;
        }

        public static final int INTERNAL_TRANSACTIONS_FIELD_NUMBER = 17;
        private java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction> internalTransactions_;
        /**
         * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction> getInternalTransactionsList() {
            return internalTransactions_;
        }
        /**
         * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.InternalTransactionOrBuilder>
        getInternalTransactionsOrBuilderList() {
            return internalTransactions_;
        }
        /**
         * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
         */
        public int getInternalTransactionsCount() {
            return internalTransactions_.size();
        }
        /**
         * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
         */
        public com.cryptowallet.crypto.Protocol.InternalTransaction getInternalTransactions(int index) {
            return internalTransactions_.get(index);
        }
        /**
         * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
         */
        public com.cryptowallet.crypto.Protocol.InternalTransactionOrBuilder getInternalTransactionsOrBuilder(
                int index) {
            return internalTransactions_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!id_.isEmpty()) {
                output.writeBytes(1, id_);
            }
            if (fee_ != 0L) {
                output.writeInt64(2, fee_);
            }
            if (blockNumber_ != 0L) {
                output.writeInt64(3, blockNumber_);
            }
            if (blockTimeStamp_ != 0L) {
                output.writeInt64(4, blockTimeStamp_);
            }
            for (int i = 0; i < contractResult_.size(); i++) {
                output.writeBytes(5, contractResult_.get(i));
            }
            if (!contractAddress_.isEmpty()) {
                output.writeBytes(6, contractAddress_);
            }
            if (receipt_ != null) {
                output.writeMessage(7, getReceipt());
            }
            for (int i = 0; i < log_.size(); i++) {
                output.writeMessage(8, log_.get(i));
            }
            if (result_ != com.cryptowallet.crypto.Protocol.TransactionInfo.code.SUCESS.getNumber()) {
                output.writeEnum(9, result_);
            }
            if (!resMessage_.isEmpty()) {
                output.writeBytes(10, resMessage_);
            }
            if (withdrawAmount_ != 0L) {
                output.writeInt64(15, withdrawAmount_);
            }
            if (unfreezeAmount_ != 0L) {
                output.writeInt64(16, unfreezeAmount_);
            }
            for (int i = 0; i < internalTransactions_.size(); i++) {
                output.writeMessage(17, internalTransactions_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!id_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, id_);
            }
            if (fee_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, fee_);
            }
            if (blockNumber_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(3, blockNumber_);
            }
            if (blockTimeStamp_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, blockTimeStamp_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < contractResult_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(contractResult_.get(i));
                }
                size += dataSize;
                size += 1 * getContractResultList().size();
            }
            if (!contractAddress_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(6, contractAddress_);
            }
            if (receipt_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(7, getReceipt());
            }
            for (int i = 0; i < log_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(8, log_.get(i));
            }
            if (result_ != com.cryptowallet.crypto.Protocol.TransactionInfo.code.SUCESS.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(9, result_);
            }
            if (!resMessage_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(10, resMessage_);
            }
            if (withdrawAmount_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(15, withdrawAmount_);
            }
            if (unfreezeAmount_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(16, unfreezeAmount_);
            }
            for (int i = 0; i < internalTransactions_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(17, internalTransactions_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.TransactionInfo)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.TransactionInfo other = (com.cryptowallet.crypto.Protocol.TransactionInfo) obj;

            boolean result = true;
            result = result && getId()
                    .equals(other.getId());
            result = result && (getFee()
                    == other.getFee());
            result = result && (getBlockNumber()
                    == other.getBlockNumber());
            result = result && (getBlockTimeStamp()
                    == other.getBlockTimeStamp());
            result = result && getContractResultList()
                    .equals(other.getContractResultList());
            result = result && getContractAddress()
                    .equals(other.getContractAddress());
            result = result && (hasReceipt() == other.hasReceipt());
            if (hasReceipt()) {
                result = result && getReceipt()
                        .equals(other.getReceipt());
            }
            result = result && getLogList()
                    .equals(other.getLogList());
            result = result && result_ == other.result_;
            result = result && getResMessage()
                    .equals(other.getResMessage());
            result = result && (getWithdrawAmount()
                    == other.getWithdrawAmount());
            result = result && (getUnfreezeAmount()
                    == other.getUnfreezeAmount());
            result = result && getInternalTransactionsList()
                    .equals(other.getInternalTransactionsList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ID_FIELD_NUMBER;
            hash = (53 * hash) + getId().hashCode();
            hash = (37 * hash) + FEE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getFee());
            hash = (37 * hash) + BLOCKNUMBER_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getBlockNumber());
            hash = (37 * hash) + BLOCKTIMESTAMP_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getBlockTimeStamp());
            if (getContractResultCount() > 0) {
                hash = (37 * hash) + CONTRACTRESULT_FIELD_NUMBER;
                hash = (53 * hash) + getContractResultList().hashCode();
            }
            hash = (37 * hash) + CONTRACT_ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getContractAddress().hashCode();
            if (hasReceipt()) {
                hash = (37 * hash) + RECEIPT_FIELD_NUMBER;
                hash = (53 * hash) + getReceipt().hashCode();
            }
            if (getLogCount() > 0) {
                hash = (37 * hash) + LOG_FIELD_NUMBER;
                hash = (53 * hash) + getLogList().hashCode();
            }
            hash = (37 * hash) + RESULT_FIELD_NUMBER;
            hash = (53 * hash) + result_;
            hash = (37 * hash) + RESMESSAGE_FIELD_NUMBER;
            hash = (53 * hash) + getResMessage().hashCode();
            hash = (37 * hash) + WITHDRAW_AMOUNT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getWithdrawAmount());
            hash = (37 * hash) + UNFREEZE_AMOUNT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getUnfreezeAmount());
            if (getInternalTransactionsCount() > 0) {
                hash = (37 * hash) + INTERNAL_TRANSACTIONS_FIELD_NUMBER;
                hash = (53 * hash) + getInternalTransactionsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.TransactionInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.TransactionInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.TransactionInfo)
                com.cryptowallet.crypto.Protocol.TransactionInfoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionInfo_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.TransactionInfo.class, com.cryptowallet.crypto.Protocol.TransactionInfo.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.TransactionInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getLogFieldBuilder();
                    getInternalTransactionsFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                id_ = com.google.protobuf.ByteString.EMPTY;

                fee_ = 0L;

                blockNumber_ = 0L;

                blockTimeStamp_ = 0L;

                contractResult_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000010);
                contractAddress_ = com.google.protobuf.ByteString.EMPTY;

                if (receiptBuilder_ == null) {
                    receipt_ = null;
                } else {
                    receipt_ = null;
                    receiptBuilder_ = null;
                }
                if (logBuilder_ == null) {
                    log_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000080);
                } else {
                    logBuilder_.clear();
                }
                result_ = 0;

                resMessage_ = com.google.protobuf.ByteString.EMPTY;

                withdrawAmount_ = 0L;

                unfreezeAmount_ = 0L;

                if (internalTransactionsBuilder_ == null) {
                    internalTransactions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00001000);
                } else {
                    internalTransactionsBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionInfo_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.TransactionInfo getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.TransactionInfo.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.TransactionInfo build() {
                com.cryptowallet.crypto.Protocol.TransactionInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.TransactionInfo buildPartial() {
                com.cryptowallet.crypto.Protocol.TransactionInfo result = new com.cryptowallet.crypto.Protocol.TransactionInfo(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.id_ = id_;
                result.fee_ = fee_;
                result.blockNumber_ = blockNumber_;
                result.blockTimeStamp_ = blockTimeStamp_;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    contractResult_ = java.util.Collections.unmodifiableList(contractResult_);
                    bitField0_ = (bitField0_ & ~0x00000010);
                }
                result.contractResult_ = contractResult_;
                result.contractAddress_ = contractAddress_;
                if (receiptBuilder_ == null) {
                    result.receipt_ = receipt_;
                } else {
                    result.receipt_ = receiptBuilder_.build();
                }
                if (logBuilder_ == null) {
                    if (((bitField0_ & 0x00000080) == 0x00000080)) {
                        log_ = java.util.Collections.unmodifiableList(log_);
                        bitField0_ = (bitField0_ & ~0x00000080);
                    }
                    result.log_ = log_;
                } else {
                    result.log_ = logBuilder_.build();
                }
                result.result_ = result_;
                result.resMessage_ = resMessage_;
                result.withdrawAmount_ = withdrawAmount_;
                result.unfreezeAmount_ = unfreezeAmount_;
                if (internalTransactionsBuilder_ == null) {
                    if (((bitField0_ & 0x00001000) == 0x00001000)) {
                        internalTransactions_ = java.util.Collections.unmodifiableList(internalTransactions_);
                        bitField0_ = (bitField0_ & ~0x00001000);
                    }
                    result.internalTransactions_ = internalTransactions_;
                } else {
                    result.internalTransactions_ = internalTransactionsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.TransactionInfo) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.TransactionInfo)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.TransactionInfo other) {
                if (other == com.cryptowallet.crypto.Protocol.TransactionInfo.getDefaultInstance()) return this;
                if (other.getId() != com.google.protobuf.ByteString.EMPTY) {
                    setId(other.getId());
                }
                if (other.getFee() != 0L) {
                    setFee(other.getFee());
                }
                if (other.getBlockNumber() != 0L) {
                    setBlockNumber(other.getBlockNumber());
                }
                if (other.getBlockTimeStamp() != 0L) {
                    setBlockTimeStamp(other.getBlockTimeStamp());
                }
                if (!other.contractResult_.isEmpty()) {
                    if (contractResult_.isEmpty()) {
                        contractResult_ = other.contractResult_;
                        bitField0_ = (bitField0_ & ~0x00000010);
                    } else {
                        ensureContractResultIsMutable();
                        contractResult_.addAll(other.contractResult_);
                    }
                    onChanged();
                }
                if (other.getContractAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setContractAddress(other.getContractAddress());
                }
                if (other.hasReceipt()) {
                    mergeReceipt(other.getReceipt());
                }
                if (logBuilder_ == null) {
                    if (!other.log_.isEmpty()) {
                        if (log_.isEmpty()) {
                            log_ = other.log_;
                            bitField0_ = (bitField0_ & ~0x00000080);
                        } else {
                            ensureLogIsMutable();
                            log_.addAll(other.log_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.log_.isEmpty()) {
                        if (logBuilder_.isEmpty()) {
                            logBuilder_.dispose();
                            logBuilder_ = null;
                            log_ = other.log_;
                            bitField0_ = (bitField0_ & ~0x00000080);
                            logBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getLogFieldBuilder() : null;
                        } else {
                            logBuilder_.addAllMessages(other.log_);
                        }
                    }
                }
                if (other.result_ != 0) {
                    setResultValue(other.getResultValue());
                }
                if (other.getResMessage() != com.google.protobuf.ByteString.EMPTY) {
                    setResMessage(other.getResMessage());
                }
                if (other.getWithdrawAmount() != 0L) {
                    setWithdrawAmount(other.getWithdrawAmount());
                }
                if (other.getUnfreezeAmount() != 0L) {
                    setUnfreezeAmount(other.getUnfreezeAmount());
                }
                if (internalTransactionsBuilder_ == null) {
                    if (!other.internalTransactions_.isEmpty()) {
                        if (internalTransactions_.isEmpty()) {
                            internalTransactions_ = other.internalTransactions_;
                            bitField0_ = (bitField0_ & ~0x00001000);
                        } else {
                            ensureInternalTransactionsIsMutable();
                            internalTransactions_.addAll(other.internalTransactions_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.internalTransactions_.isEmpty()) {
                        if (internalTransactionsBuilder_.isEmpty()) {
                            internalTransactionsBuilder_.dispose();
                            internalTransactionsBuilder_ = null;
                            internalTransactions_ = other.internalTransactions_;
                            bitField0_ = (bitField0_ & ~0x00001000);
                            internalTransactionsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getInternalTransactionsFieldBuilder() : null;
                        } else {
                            internalTransactionsBuilder_.addAllMessages(other.internalTransactions_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.TransactionInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.TransactionInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes id = 1;</code>
             */
            public com.google.protobuf.ByteString getId() {
                return id_;
            }
            /**
             * <code>bytes id = 1;</code>
             */
            public Builder setId(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                id_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes id = 1;</code>
             */
            public Builder clearId() {

                id_ = getDefaultInstance().getId();
                onChanged();
                return this;
            }

            private long fee_ ;
            /**
             * <code>int64 fee = 2;</code>
             */
            public long getFee() {
                return fee_;
            }
            /**
             * <code>int64 fee = 2;</code>
             */
            public Builder setFee(long value) {

                fee_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 fee = 2;</code>
             */
            public Builder clearFee() {

                fee_ = 0L;
                onChanged();
                return this;
            }

            private long blockNumber_ ;
            /**
             * <code>int64 blockNumber = 3;</code>
             */
            public long getBlockNumber() {
                return blockNumber_;
            }
            /**
             * <code>int64 blockNumber = 3;</code>
             */
            public Builder setBlockNumber(long value) {

                blockNumber_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 blockNumber = 3;</code>
             */
            public Builder clearBlockNumber() {

                blockNumber_ = 0L;
                onChanged();
                return this;
            }

            private long blockTimeStamp_ ;
            /**
             * <code>int64 blockTimeStamp = 4;</code>
             */
            public long getBlockTimeStamp() {
                return blockTimeStamp_;
            }
            /**
             * <code>int64 blockTimeStamp = 4;</code>
             */
            public Builder setBlockTimeStamp(long value) {

                blockTimeStamp_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 blockTimeStamp = 4;</code>
             */
            public Builder clearBlockTimeStamp() {

                blockTimeStamp_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<com.google.protobuf.ByteString> contractResult_ = java.util.Collections.emptyList();
            private void ensureContractResultIsMutable() {
                if (!((bitField0_ & 0x00000010) == 0x00000010)) {
                    contractResult_ = new java.util.ArrayList<com.google.protobuf.ByteString>(contractResult_);
                    bitField0_ |= 0x00000010;
                }
            }
            /**
             * <code>repeated bytes contractResult = 5;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getContractResultList() {
                return java.util.Collections.unmodifiableList(contractResult_);
            }
            /**
             * <code>repeated bytes contractResult = 5;</code>
             */
            public int getContractResultCount() {
                return contractResult_.size();
            }
            /**
             * <code>repeated bytes contractResult = 5;</code>
             */
            public com.google.protobuf.ByteString getContractResult(int index) {
                return contractResult_.get(index);
            }
            /**
             * <code>repeated bytes contractResult = 5;</code>
             */
            public Builder setContractResult(
                    int index, com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureContractResultIsMutable();
                contractResult_.set(index, value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes contractResult = 5;</code>
             */
            public Builder addContractResult(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureContractResultIsMutable();
                contractResult_.add(value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes contractResult = 5;</code>
             */
            public Builder addAllContractResult(
                    java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
                ensureContractResultIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, contractResult_);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes contractResult = 5;</code>
             */
            public Builder clearContractResult() {
                contractResult_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000010);
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString contractAddress_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes contract_address = 6;</code>
             */
            public com.google.protobuf.ByteString getContractAddress() {
                return contractAddress_;
            }
            /**
             * <code>bytes contract_address = 6;</code>
             */
            public Builder setContractAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                contractAddress_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes contract_address = 6;</code>
             */
            public Builder clearContractAddress() {

                contractAddress_ = getDefaultInstance().getContractAddress();
                onChanged();
                return this;
            }

            private com.cryptowallet.crypto.Protocol.ResourceReceipt receipt_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.ResourceReceipt, com.cryptowallet.crypto.Protocol.ResourceReceipt.Builder, com.cryptowallet.crypto.Protocol.ResourceReceiptOrBuilder> receiptBuilder_;
            /**
             * <code>.protocol.ResourceReceipt receipt = 7;</code>
             */
            public boolean hasReceipt() {
                return receiptBuilder_ != null || receipt_ != null;
            }
            /**
             * <code>.protocol.ResourceReceipt receipt = 7;</code>
             */
            public com.cryptowallet.crypto.Protocol.ResourceReceipt getReceipt() {
                if (receiptBuilder_ == null) {
                    return receipt_ == null ? com.cryptowallet.crypto.Protocol.ResourceReceipt.getDefaultInstance() : receipt_;
                } else {
                    return receiptBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.ResourceReceipt receipt = 7;</code>
             */
            public Builder setReceipt(com.cryptowallet.crypto.Protocol.ResourceReceipt value) {
                if (receiptBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    receipt_ = value;
                    onChanged();
                } else {
                    receiptBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.ResourceReceipt receipt = 7;</code>
             */
            public Builder setReceipt(
                    com.cryptowallet.crypto.Protocol.ResourceReceipt.Builder builderForValue) {
                if (receiptBuilder_ == null) {
                    receipt_ = builderForValue.build();
                    onChanged();
                } else {
                    receiptBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.ResourceReceipt receipt = 7;</code>
             */
            public Builder mergeReceipt(com.cryptowallet.crypto.Protocol.ResourceReceipt value) {
                if (receiptBuilder_ == null) {
                    if (receipt_ != null) {
                        receipt_ =
                                com.cryptowallet.crypto.Protocol.ResourceReceipt.newBuilder(receipt_).mergeFrom(value).buildPartial();
                    } else {
                        receipt_ = value;
                    }
                    onChanged();
                } else {
                    receiptBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.ResourceReceipt receipt = 7;</code>
             */
            public Builder clearReceipt() {
                if (receiptBuilder_ == null) {
                    receipt_ = null;
                    onChanged();
                } else {
                    receipt_ = null;
                    receiptBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.ResourceReceipt receipt = 7;</code>
             */
            public com.cryptowallet.crypto.Protocol.ResourceReceipt.Builder getReceiptBuilder() {

                onChanged();
                return getReceiptFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.ResourceReceipt receipt = 7;</code>
             */
            public com.cryptowallet.crypto.Protocol.ResourceReceiptOrBuilder getReceiptOrBuilder() {
                if (receiptBuilder_ != null) {
                    return receiptBuilder_.getMessageOrBuilder();
                } else {
                    return receipt_ == null ?
                            com.cryptowallet.crypto.Protocol.ResourceReceipt.getDefaultInstance() : receipt_;
                }
            }
            /**
             * <code>.protocol.ResourceReceipt receipt = 7;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.ResourceReceipt, com.cryptowallet.crypto.Protocol.ResourceReceipt.Builder, com.cryptowallet.crypto.Protocol.ResourceReceiptOrBuilder>
            getReceiptFieldBuilder() {
                if (receiptBuilder_ == null) {
                    receiptBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.ResourceReceipt, com.cryptowallet.crypto.Protocol.ResourceReceipt.Builder, com.cryptowallet.crypto.Protocol.ResourceReceiptOrBuilder>(
                            getReceipt(),
                            getParentForChildren(),
                            isClean());
                    receipt_ = null;
                }
                return receiptBuilder_;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.TransactionInfo.Log> log_ =
                    java.util.Collections.emptyList();
            private void ensureLogIsMutable() {
                if (!((bitField0_ & 0x00000080) == 0x00000080)) {
                    log_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.TransactionInfo.Log>(log_);
                    bitField0_ |= 0x00000080;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.TransactionInfo.Log, com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder, com.cryptowallet.crypto.Protocol.TransactionInfo.LogOrBuilder> logBuilder_;

            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.TransactionInfo.Log> getLogList() {
                if (logBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(log_);
                } else {
                    return logBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public int getLogCount() {
                if (logBuilder_ == null) {
                    return log_.size();
                } else {
                    return logBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public com.cryptowallet.crypto.Protocol.TransactionInfo.Log getLog(int index) {
                if (logBuilder_ == null) {
                    return log_.get(index);
                } else {
                    return logBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public Builder setLog(
                    int index, com.cryptowallet.crypto.Protocol.TransactionInfo.Log value) {
                if (logBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLogIsMutable();
                    log_.set(index, value);
                    onChanged();
                } else {
                    logBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public Builder setLog(
                    int index, com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder builderForValue) {
                if (logBuilder_ == null) {
                    ensureLogIsMutable();
                    log_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    logBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public Builder addLog(com.cryptowallet.crypto.Protocol.TransactionInfo.Log value) {
                if (logBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLogIsMutable();
                    log_.add(value);
                    onChanged();
                } else {
                    logBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public Builder addLog(
                    int index, com.cryptowallet.crypto.Protocol.TransactionInfo.Log value) {
                if (logBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLogIsMutable();
                    log_.add(index, value);
                    onChanged();
                } else {
                    logBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public Builder addLog(
                    com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder builderForValue) {
                if (logBuilder_ == null) {
                    ensureLogIsMutable();
                    log_.add(builderForValue.build());
                    onChanged();
                } else {
                    logBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public Builder addLog(
                    int index, com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder builderForValue) {
                if (logBuilder_ == null) {
                    ensureLogIsMutable();
                    log_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    logBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public Builder addAllLog(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.TransactionInfo.Log> values) {
                if (logBuilder_ == null) {
                    ensureLogIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, log_);
                    onChanged();
                } else {
                    logBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public Builder clearLog() {
                if (logBuilder_ == null) {
                    log_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000080);
                    onChanged();
                } else {
                    logBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public Builder removeLog(int index) {
                if (logBuilder_ == null) {
                    ensureLogIsMutable();
                    log_.remove(index);
                    onChanged();
                } else {
                    logBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder getLogBuilder(
                    int index) {
                return getLogFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public com.cryptowallet.crypto.Protocol.TransactionInfo.LogOrBuilder getLogOrBuilder(
                    int index) {
                if (logBuilder_ == null) {
                    return log_.get(index);  } else {
                    return logBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionInfo.LogOrBuilder>
            getLogOrBuilderList() {
                if (logBuilder_ != null) {
                    return logBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(log_);
                }
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder addLogBuilder() {
                return getLogFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.TransactionInfo.Log.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder addLogBuilder(
                    int index) {
                return getLogFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.TransactionInfo.Log.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.TransactionInfo.Log log = 8;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder>
            getLogBuilderList() {
                return getLogFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.TransactionInfo.Log, com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder, com.cryptowallet.crypto.Protocol.TransactionInfo.LogOrBuilder>
            getLogFieldBuilder() {
                if (logBuilder_ == null) {
                    logBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.TransactionInfo.Log, com.cryptowallet.crypto.Protocol.TransactionInfo.Log.Builder, com.cryptowallet.crypto.Protocol.TransactionInfo.LogOrBuilder>(
                            log_,
                            ((bitField0_ & 0x00000080) == 0x00000080),
                            getParentForChildren(),
                            isClean());
                    log_ = null;
                }
                return logBuilder_;
            }

            private int result_ = 0;
            /**
             * <code>.protocol.TransactionInfo.code result = 9;</code>
             */
            public int getResultValue() {
                return result_;
            }
            /**
             * <code>.protocol.TransactionInfo.code result = 9;</code>
             */
            public Builder setResultValue(int value) {
                result_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.TransactionInfo.code result = 9;</code>
             */
            public com.cryptowallet.crypto.Protocol.TransactionInfo.code getResult() {
                com.cryptowallet.crypto.Protocol.TransactionInfo.code result = com.cryptowallet.crypto.Protocol.TransactionInfo.code.valueOf(result_);
                return result == null ? com.cryptowallet.crypto.Protocol.TransactionInfo.code.UNRECOGNIZED : result;
            }
            /**
             * <code>.protocol.TransactionInfo.code result = 9;</code>
             */
            public Builder setResult(com.cryptowallet.crypto.Protocol.TransactionInfo.code value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                result_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.TransactionInfo.code result = 9;</code>
             */
            public Builder clearResult() {

                result_ = 0;
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString resMessage_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes resMessage = 10;</code>
             */
            public com.google.protobuf.ByteString getResMessage() {
                return resMessage_;
            }
            /**
             * <code>bytes resMessage = 10;</code>
             */
            public Builder setResMessage(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                resMessage_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes resMessage = 10;</code>
             */
            public Builder clearResMessage() {

                resMessage_ = getDefaultInstance().getResMessage();
                onChanged();
                return this;
            }

            private long withdrawAmount_ ;
            /**
             * <code>int64 withdraw_amount = 15;</code>
             */
            public long getWithdrawAmount() {
                return withdrawAmount_;
            }
            /**
             * <code>int64 withdraw_amount = 15;</code>
             */
            public Builder setWithdrawAmount(long value) {

                withdrawAmount_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 withdraw_amount = 15;</code>
             */
            public Builder clearWithdrawAmount() {

                withdrawAmount_ = 0L;
                onChanged();
                return this;
            }

            private long unfreezeAmount_ ;
            /**
             * <code>int64 unfreeze_amount = 16;</code>
             */
            public long getUnfreezeAmount() {
                return unfreezeAmount_;
            }
            /**
             * <code>int64 unfreeze_amount = 16;</code>
             */
            public Builder setUnfreezeAmount(long value) {

                unfreezeAmount_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 unfreeze_amount = 16;</code>
             */
            public Builder clearUnfreezeAmount() {

                unfreezeAmount_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction> internalTransactions_ =
                    java.util.Collections.emptyList();
            private void ensureInternalTransactionsIsMutable() {
                if (!((bitField0_ & 0x00001000) == 0x00001000)) {
                    internalTransactions_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.InternalTransaction>(internalTransactions_);
                    bitField0_ |= 0x00001000;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.InternalTransaction, com.cryptowallet.crypto.Protocol.InternalTransaction.Builder, com.cryptowallet.crypto.Protocol.InternalTransactionOrBuilder> internalTransactionsBuilder_;

            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction> getInternalTransactionsList() {
                if (internalTransactionsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(internalTransactions_);
                } else {
                    return internalTransactionsBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public int getInternalTransactionsCount() {
                if (internalTransactionsBuilder_ == null) {
                    return internalTransactions_.size();
                } else {
                    return internalTransactionsBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public com.cryptowallet.crypto.Protocol.InternalTransaction getInternalTransactions(int index) {
                if (internalTransactionsBuilder_ == null) {
                    return internalTransactions_.get(index);
                } else {
                    return internalTransactionsBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public Builder setInternalTransactions(
                    int index, com.cryptowallet.crypto.Protocol.InternalTransaction value) {
                if (internalTransactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureInternalTransactionsIsMutable();
                    internalTransactions_.set(index, value);
                    onChanged();
                } else {
                    internalTransactionsBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public Builder setInternalTransactions(
                    int index, com.cryptowallet.crypto.Protocol.InternalTransaction.Builder builderForValue) {
                if (internalTransactionsBuilder_ == null) {
                    ensureInternalTransactionsIsMutable();
                    internalTransactions_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    internalTransactionsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public Builder addInternalTransactions(com.cryptowallet.crypto.Protocol.InternalTransaction value) {
                if (internalTransactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureInternalTransactionsIsMutable();
                    internalTransactions_.add(value);
                    onChanged();
                } else {
                    internalTransactionsBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public Builder addInternalTransactions(
                    int index, com.cryptowallet.crypto.Protocol.InternalTransaction value) {
                if (internalTransactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureInternalTransactionsIsMutable();
                    internalTransactions_.add(index, value);
                    onChanged();
                } else {
                    internalTransactionsBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public Builder addInternalTransactions(
                    com.cryptowallet.crypto.Protocol.InternalTransaction.Builder builderForValue) {
                if (internalTransactionsBuilder_ == null) {
                    ensureInternalTransactionsIsMutable();
                    internalTransactions_.add(builderForValue.build());
                    onChanged();
                } else {
                    internalTransactionsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public Builder addInternalTransactions(
                    int index, com.cryptowallet.crypto.Protocol.InternalTransaction.Builder builderForValue) {
                if (internalTransactionsBuilder_ == null) {
                    ensureInternalTransactionsIsMutable();
                    internalTransactions_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    internalTransactionsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public Builder addAllInternalTransactions(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.InternalTransaction> values) {
                if (internalTransactionsBuilder_ == null) {
                    ensureInternalTransactionsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, internalTransactions_);
                    onChanged();
                } else {
                    internalTransactionsBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public Builder clearInternalTransactions() {
                if (internalTransactionsBuilder_ == null) {
                    internalTransactions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00001000);
                    onChanged();
                } else {
                    internalTransactionsBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public Builder removeInternalTransactions(int index) {
                if (internalTransactionsBuilder_ == null) {
                    ensureInternalTransactionsIsMutable();
                    internalTransactions_.remove(index);
                    onChanged();
                } else {
                    internalTransactionsBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public com.cryptowallet.crypto.Protocol.InternalTransaction.Builder getInternalTransactionsBuilder(
                    int index) {
                return getInternalTransactionsFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public com.cryptowallet.crypto.Protocol.InternalTransactionOrBuilder getInternalTransactionsOrBuilder(
                    int index) {
                if (internalTransactionsBuilder_ == null) {
                    return internalTransactions_.get(index);  } else {
                    return internalTransactionsBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.InternalTransactionOrBuilder>
            getInternalTransactionsOrBuilderList() {
                if (internalTransactionsBuilder_ != null) {
                    return internalTransactionsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(internalTransactions_);
                }
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public com.cryptowallet.crypto.Protocol.InternalTransaction.Builder addInternalTransactionsBuilder() {
                return getInternalTransactionsFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.InternalTransaction.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public com.cryptowallet.crypto.Protocol.InternalTransaction.Builder addInternalTransactionsBuilder(
                    int index) {
                return getInternalTransactionsFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.InternalTransaction.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.InternalTransaction internal_transactions = 17;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction.Builder>
            getInternalTransactionsBuilderList() {
                return getInternalTransactionsFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.InternalTransaction, com.cryptowallet.crypto.Protocol.InternalTransaction.Builder, com.cryptowallet.crypto.Protocol.InternalTransactionOrBuilder>
            getInternalTransactionsFieldBuilder() {
                if (internalTransactionsBuilder_ == null) {
                    internalTransactionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.InternalTransaction, com.cryptowallet.crypto.Protocol.InternalTransaction.Builder, com.cryptowallet.crypto.Protocol.InternalTransactionOrBuilder>(
                            internalTransactions_,
                            ((bitField0_ & 0x00001000) == 0x00001000),
                            getParentForChildren(),
                            isClean());
                    internalTransactions_ = null;
                }
                return internalTransactionsBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.TransactionInfo)
        }

        // @@protoc_insertion_point(class_scope:protocol.TransactionInfo)
        private static final com.cryptowallet.crypto.Protocol.TransactionInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.TransactionInfo();
        }

        public static com.cryptowallet.crypto.Protocol.TransactionInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<TransactionInfo>
                PARSER = new com.google.protobuf.AbstractParser<TransactionInfo>() {
            public TransactionInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new TransactionInfo(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<TransactionInfo> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TransactionInfo> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.TransactionInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface TransactionsOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Transactions)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.Transaction>
        getTransactionsList();
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.Transaction getTransactions(int index);
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        int getTransactionsCount();
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
        getTransactionsOrBuilderList();
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionsOrBuilder(
                int index);
    }
    /**
     * Protobuf type {@code protocol.Transactions}
     */
    public  static final class Transactions extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Transactions)
            TransactionsOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Transactions.newBuilder() to construct.
        private Transactions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Transactions() {
            transactions_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Transactions(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                transactions_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Transaction>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            transactions_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.Transaction.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    transactions_ = java.util.Collections.unmodifiableList(transactions_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transactions_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transactions_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Transactions.class, com.cryptowallet.crypto.Protocol.Transactions.Builder.class);
        }

        public static final int TRANSACTIONS_FIELD_NUMBER = 1;
        private java.util.List<com.cryptowallet.crypto.Protocol.Transaction> transactions_;
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.Transaction> getTransactionsList() {
            return transactions_;
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
        getTransactionsOrBuilderList() {
            return transactions_;
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        public int getTransactionsCount() {
            return transactions_.size();
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.Transaction getTransactions(int index) {
            return transactions_.get(index);
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionsOrBuilder(
                int index) {
            return transactions_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < transactions_.size(); i++) {
                output.writeMessage(1, transactions_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < transactions_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, transactions_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Transactions)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Transactions other = (com.cryptowallet.crypto.Protocol.Transactions) obj;

            boolean result = true;
            result = result && getTransactionsList()
                    .equals(other.getTransactionsList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getTransactionsCount() > 0) {
                hash = (37 * hash) + TRANSACTIONS_FIELD_NUMBER;
                hash = (53 * hash) + getTransactionsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Transactions parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Transactions parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Transactions prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.Transactions}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Transactions)
                com.cryptowallet.crypto.Protocol.TransactionsOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transactions_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transactions_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Transactions.class, com.cryptowallet.crypto.Protocol.Transactions.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Transactions.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getTransactionsFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (transactionsBuilder_ == null) {
                    transactions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    transactionsBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Transactions_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Transactions getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Transactions.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Transactions build() {
                com.cryptowallet.crypto.Protocol.Transactions result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Transactions buildPartial() {
                com.cryptowallet.crypto.Protocol.Transactions result = new com.cryptowallet.crypto.Protocol.Transactions(this);
                int from_bitField0_ = bitField0_;
                if (transactionsBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        transactions_ = java.util.Collections.unmodifiableList(transactions_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.transactions_ = transactions_;
                } else {
                    result.transactions_ = transactionsBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Transactions) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Transactions)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Transactions other) {
                if (other == com.cryptowallet.crypto.Protocol.Transactions.getDefaultInstance()) return this;
                if (transactionsBuilder_ == null) {
                    if (!other.transactions_.isEmpty()) {
                        if (transactions_.isEmpty()) {
                            transactions_ = other.transactions_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureTransactionsIsMutable();
                            transactions_.addAll(other.transactions_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.transactions_.isEmpty()) {
                        if (transactionsBuilder_.isEmpty()) {
                            transactionsBuilder_.dispose();
                            transactionsBuilder_ = null;
                            transactions_ = other.transactions_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            transactionsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getTransactionsFieldBuilder() : null;
                        } else {
                            transactionsBuilder_.addAllMessages(other.transactions_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Transactions parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Transactions) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private java.util.List<com.cryptowallet.crypto.Protocol.Transaction> transactions_ =
                    java.util.Collections.emptyList();
            private void ensureTransactionsIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    transactions_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Transaction>(transactions_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder> transactionsBuilder_;

            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Transaction> getTransactionsList() {
                if (transactionsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(transactions_);
                } else {
                    return transactionsBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public int getTransactionsCount() {
                if (transactionsBuilder_ == null) {
                    return transactions_.size();
                } else {
                    return transactionsBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction getTransactions(int index) {
                if (transactionsBuilder_ == null) {
                    return transactions_.get(index);
                } else {
                    return transactionsBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder setTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionsIsMutable();
                    transactions_.set(index, value);
                    onChanged();
                } else {
                    transactionsBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder setTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction.Builder builderForValue) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    transactionsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder addTransactions(com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionsIsMutable();
                    transactions_.add(value);
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder addTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionsIsMutable();
                    transactions_.add(index, value);
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder addTransactions(
                    com.cryptowallet.crypto.Protocol.Transaction.Builder builderForValue) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.add(builderForValue.build());
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder addTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction.Builder builderForValue) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder addAllTransactions(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Transaction> values) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, transactions_);
                    onChanged();
                } else {
                    transactionsBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder clearTransactions() {
                if (transactionsBuilder_ == null) {
                    transactions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    transactionsBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder removeTransactions(int index) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.remove(index);
                    onChanged();
                } else {
                    transactionsBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Builder getTransactionsBuilder(
                    int index) {
                return getTransactionsFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionsOrBuilder(
                    int index) {
                if (transactionsBuilder_ == null) {
                    return transactions_.get(index);  } else {
                    return transactionsBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
            getTransactionsOrBuilderList() {
                if (transactionsBuilder_ != null) {
                    return transactionsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(transactions_);
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Builder addTransactionsBuilder() {
                return getTransactionsFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Builder addTransactionsBuilder(
                    int index) {
                return getTransactionsFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Builder>
            getTransactionsBuilderList() {
                return getTransactionsFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
            getTransactionsFieldBuilder() {
                if (transactionsBuilder_ == null) {
                    transactionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder>(
                            transactions_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    transactions_ = null;
                }
                return transactionsBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Transactions)
        }

        // @@protoc_insertion_point(class_scope:protocol.Transactions)
        private static final com.cryptowallet.crypto.Protocol.Transactions DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Transactions();
        }

        public static com.cryptowallet.crypto.Protocol.Transactions getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Transactions>
                PARSER = new com.google.protobuf.AbstractParser<Transactions>() {
            public Transactions parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Transactions(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Transactions> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Transactions> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Transactions getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface TransactionSignOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.TransactionSign)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.protocol.Transaction transaction = 1;</code>
         */
        boolean hasTransaction();
        /**
         * <code>.protocol.Transaction transaction = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.Transaction getTransaction();
        /**
         * <code>.protocol.Transaction transaction = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionOrBuilder();

        /**
         * <code>bytes privateKey = 2;</code>
         */
        com.google.protobuf.ByteString getPrivateKey();
    }
    /**
     * Protobuf type {@code protocol.TransactionSign}
     */
    public  static final class TransactionSign extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.TransactionSign)
            TransactionSignOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use TransactionSign.newBuilder() to construct.
        private TransactionSign(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private TransactionSign() {
            privateKey_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private TransactionSign(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.cryptowallet.crypto.Protocol.Transaction.Builder subBuilder = null;
                            if (transaction_ != null) {
                                subBuilder = transaction_.toBuilder();
                            }
                            transaction_ = input.readMessage(com.cryptowallet.crypto.Protocol.Transaction.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(transaction_);
                                transaction_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {

                            privateKey_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionSign_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionSign_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.TransactionSign.class, com.cryptowallet.crypto.Protocol.TransactionSign.Builder.class);
        }

        public static final int TRANSACTION_FIELD_NUMBER = 1;
        private com.cryptowallet.crypto.Protocol.Transaction transaction_;
        /**
         * <code>.protocol.Transaction transaction = 1;</code>
         */
        public boolean hasTransaction() {
            return transaction_ != null;
        }
        /**
         * <code>.protocol.Transaction transaction = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.Transaction getTransaction() {
            return transaction_ == null ? com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance() : transaction_;
        }
        /**
         * <code>.protocol.Transaction transaction = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionOrBuilder() {
            return getTransaction();
        }

        public static final int PRIVATEKEY_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString privateKey_;
        /**
         * <code>bytes privateKey = 2;</code>
         */
        public com.google.protobuf.ByteString getPrivateKey() {
            return privateKey_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (transaction_ != null) {
                output.writeMessage(1, getTransaction());
            }
            if (!privateKey_.isEmpty()) {
                output.writeBytes(2, privateKey_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (transaction_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getTransaction());
            }
            if (!privateKey_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, privateKey_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.TransactionSign)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.TransactionSign other = (com.cryptowallet.crypto.Protocol.TransactionSign) obj;

            boolean result = true;
            result = result && (hasTransaction() == other.hasTransaction());
            if (hasTransaction()) {
                result = result && getTransaction()
                        .equals(other.getTransaction());
            }
            result = result && getPrivateKey()
                    .equals(other.getPrivateKey());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasTransaction()) {
                hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
                hash = (53 * hash) + getTransaction().hashCode();
            }
            hash = (37 * hash) + PRIVATEKEY_FIELD_NUMBER;
            hash = (53 * hash) + getPrivateKey().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.TransactionSign parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.TransactionSign parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.TransactionSign prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.TransactionSign}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.TransactionSign)
                com.cryptowallet.crypto.Protocol.TransactionSignOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionSign_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionSign_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.TransactionSign.class, com.cryptowallet.crypto.Protocol.TransactionSign.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.TransactionSign.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (transactionBuilder_ == null) {
                    transaction_ = null;
                } else {
                    transaction_ = null;
                    transactionBuilder_ = null;
                }
                privateKey_ = com.google.protobuf.ByteString.EMPTY;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_TransactionSign_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.TransactionSign getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.TransactionSign.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.TransactionSign build() {
                com.cryptowallet.crypto.Protocol.TransactionSign result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.TransactionSign buildPartial() {
                com.cryptowallet.crypto.Protocol.TransactionSign result = new com.cryptowallet.crypto.Protocol.TransactionSign(this);
                if (transactionBuilder_ == null) {
                    result.transaction_ = transaction_;
                } else {
                    result.transaction_ = transactionBuilder_.build();
                }
                result.privateKey_ = privateKey_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.TransactionSign) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.TransactionSign)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.TransactionSign other) {
                if (other == com.cryptowallet.crypto.Protocol.TransactionSign.getDefaultInstance()) return this;
                if (other.hasTransaction()) {
                    mergeTransaction(other.getTransaction());
                }
                if (other.getPrivateKey() != com.google.protobuf.ByteString.EMPTY) {
                    setPrivateKey(other.getPrivateKey());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.TransactionSign parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.TransactionSign) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.cryptowallet.crypto.Protocol.Transaction transaction_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder> transactionBuilder_;
            /**
             * <code>.protocol.Transaction transaction = 1;</code>
             */
            public boolean hasTransaction() {
                return transactionBuilder_ != null || transaction_ != null;
            }
            /**
             * <code>.protocol.Transaction transaction = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction getTransaction() {
                if (transactionBuilder_ == null) {
                    return transaction_ == null ? com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance() : transaction_;
                } else {
                    return transactionBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.Transaction transaction = 1;</code>
             */
            public Builder setTransaction(com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    transaction_ = value;
                    onChanged();
                } else {
                    transactionBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.Transaction transaction = 1;</code>
             */
            public Builder setTransaction(
                    com.cryptowallet.crypto.Protocol.Transaction.Builder builderForValue) {
                if (transactionBuilder_ == null) {
                    transaction_ = builderForValue.build();
                    onChanged();
                } else {
                    transactionBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.Transaction transaction = 1;</code>
             */
            public Builder mergeTransaction(com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionBuilder_ == null) {
                    if (transaction_ != null) {
                        transaction_ =
                                com.cryptowallet.crypto.Protocol.Transaction.newBuilder(transaction_).mergeFrom(value).buildPartial();
                    } else {
                        transaction_ = value;
                    }
                    onChanged();
                } else {
                    transactionBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.Transaction transaction = 1;</code>
             */
            public Builder clearTransaction() {
                if (transactionBuilder_ == null) {
                    transaction_ = null;
                    onChanged();
                } else {
                    transaction_ = null;
                    transactionBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.Transaction transaction = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Builder getTransactionBuilder() {

                onChanged();
                return getTransactionFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.Transaction transaction = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionOrBuilder() {
                if (transactionBuilder_ != null) {
                    return transactionBuilder_.getMessageOrBuilder();
                } else {
                    return transaction_ == null ?
                            com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance() : transaction_;
                }
            }
            /**
             * <code>.protocol.Transaction transaction = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
            getTransactionFieldBuilder() {
                if (transactionBuilder_ == null) {
                    transactionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder>(
                            getTransaction(),
                            getParentForChildren(),
                            isClean());
                    transaction_ = null;
                }
                return transactionBuilder_;
            }

            private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes privateKey = 2;</code>
             */
            public com.google.protobuf.ByteString getPrivateKey() {
                return privateKey_;
            }
            /**
             * <code>bytes privateKey = 2;</code>
             */
            public Builder setPrivateKey(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                privateKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes privateKey = 2;</code>
             */
            public Builder clearPrivateKey() {

                privateKey_ = getDefaultInstance().getPrivateKey();
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.TransactionSign)
        }

        // @@protoc_insertion_point(class_scope:protocol.TransactionSign)
        private static final com.cryptowallet.crypto.Protocol.TransactionSign DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.TransactionSign();
        }

        public static com.cryptowallet.crypto.Protocol.TransactionSign getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<TransactionSign>
                PARSER = new com.google.protobuf.AbstractParser<TransactionSign>() {
            public TransactionSign parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new TransactionSign(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<TransactionSign> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TransactionSign> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.TransactionSign getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface BlockHeaderOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.BlockHeader)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
         */
        boolean hasRawData();
        /**
         * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.BlockHeader.raw getRawData();
        /**
         * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.BlockHeader.rawOrBuilder getRawDataOrBuilder();

        /**
         * <code>bytes witness_signature = 2;</code>
         */
        com.google.protobuf.ByteString getWitnessSignature();
    }
    /**
     * Protobuf type {@code protocol.BlockHeader}
     */
    public  static final class BlockHeader extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.BlockHeader)
            BlockHeaderOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use BlockHeader.newBuilder() to construct.
        private BlockHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private BlockHeader() {
            witnessSignature_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private BlockHeader(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.cryptowallet.crypto.Protocol.BlockHeader.raw.Builder subBuilder = null;
                            if (rawData_ != null) {
                                subBuilder = rawData_.toBuilder();
                            }
                            rawData_ = input.readMessage(com.cryptowallet.crypto.Protocol.BlockHeader.raw.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(rawData_);
                                rawData_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {

                            witnessSignature_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockHeader_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockHeader_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.BlockHeader.class, com.cryptowallet.crypto.Protocol.BlockHeader.Builder.class);
        }

        public interface rawOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.BlockHeader.raw)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>int64 timestamp = 1;</code>
             */
            long getTimestamp();

            /**
             * <code>bytes txTrieRoot = 2;</code>
             */
            com.google.protobuf.ByteString getTxTrieRoot();

            /**
             * <code>bytes parentHash = 3;</code>
             */
            com.google.protobuf.ByteString getParentHash();

            /**
             * <pre>
             *bytes nonce = 5;
             *bytes difficulty = 6;
             * </pre>
             *
             * <code>int64 number = 7;</code>
             */
            long getNumber();

            /**
             * <code>int64 witness_id = 8;</code>
             */
            long getWitnessId();

            /**
             * <code>bytes witness_address = 9;</code>
             */
            com.google.protobuf.ByteString getWitnessAddress();

            /**
             * <code>int32 version = 10;</code>
             */
            int getVersion();
        }
        /**
         * Protobuf type {@code protocol.BlockHeader.raw}
         */
        public  static final class raw extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.BlockHeader.raw)
                rawOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use raw.newBuilder() to construct.
            private raw(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private raw() {
                timestamp_ = 0L;
                txTrieRoot_ = com.google.protobuf.ByteString.EMPTY;
                parentHash_ = com.google.protobuf.ByteString.EMPTY;
                number_ = 0L;
                witnessId_ = 0L;
                witnessAddress_ = com.google.protobuf.ByteString.EMPTY;
                version_ = 0;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private raw(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {

                                timestamp_ = input.readInt64();
                                break;
                            }
                            case 18: {

                                txTrieRoot_ = input.readBytes();
                                break;
                            }
                            case 26: {

                                parentHash_ = input.readBytes();
                                break;
                            }
                            case 56: {

                                number_ = input.readInt64();
                                break;
                            }
                            case 64: {

                                witnessId_ = input.readInt64();
                                break;
                            }
                            case 74: {

                                witnessAddress_ = input.readBytes();
                                break;
                            }
                            case 80: {

                                version_ = input.readInt32();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockHeader_raw_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockHeader_raw_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.BlockHeader.raw.class, com.cryptowallet.crypto.Protocol.BlockHeader.raw.Builder.class);
            }

            public static final int TIMESTAMP_FIELD_NUMBER = 1;
            private long timestamp_;
            /**
             * <code>int64 timestamp = 1;</code>
             */
            public long getTimestamp() {
                return timestamp_;
            }

            public static final int TXTRIEROOT_FIELD_NUMBER = 2;
            private com.google.protobuf.ByteString txTrieRoot_;
            /**
             * <code>bytes txTrieRoot = 2;</code>
             */
            public com.google.protobuf.ByteString getTxTrieRoot() {
                return txTrieRoot_;
            }

            public static final int PARENTHASH_FIELD_NUMBER = 3;
            private com.google.protobuf.ByteString parentHash_;
            /**
             * <code>bytes parentHash = 3;</code>
             */
            public com.google.protobuf.ByteString getParentHash() {
                return parentHash_;
            }

            public static final int NUMBER_FIELD_NUMBER = 7;
            private long number_;
            /**
             * <pre>
             *bytes nonce = 5;
             *bytes difficulty = 6;
             * </pre>
             *
             * <code>int64 number = 7;</code>
             */
            public long getNumber() {
                return number_;
            }

            public static final int WITNESS_ID_FIELD_NUMBER = 8;
            private long witnessId_;
            /**
             * <code>int64 witness_id = 8;</code>
             */
            public long getWitnessId() {
                return witnessId_;
            }

            public static final int WITNESS_ADDRESS_FIELD_NUMBER = 9;
            private com.google.protobuf.ByteString witnessAddress_;
            /**
             * <code>bytes witness_address = 9;</code>
             */
            public com.google.protobuf.ByteString getWitnessAddress() {
                return witnessAddress_;
            }

            public static final int VERSION_FIELD_NUMBER = 10;
            private int version_;
            /**
             * <code>int32 version = 10;</code>
             */
            public int getVersion() {
                return version_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (timestamp_ != 0L) {
                    output.writeInt64(1, timestamp_);
                }
                if (!txTrieRoot_.isEmpty()) {
                    output.writeBytes(2, txTrieRoot_);
                }
                if (!parentHash_.isEmpty()) {
                    output.writeBytes(3, parentHash_);
                }
                if (number_ != 0L) {
                    output.writeInt64(7, number_);
                }
                if (witnessId_ != 0L) {
                    output.writeInt64(8, witnessId_);
                }
                if (!witnessAddress_.isEmpty()) {
                    output.writeBytes(9, witnessAddress_);
                }
                if (version_ != 0) {
                    output.writeInt32(10, version_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (timestamp_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(1, timestamp_);
                }
                if (!txTrieRoot_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(2, txTrieRoot_);
                }
                if (!parentHash_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(3, parentHash_);
                }
                if (number_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(7, number_);
                }
                if (witnessId_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(8, witnessId_);
                }
                if (!witnessAddress_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(9, witnessAddress_);
                }
                if (version_ != 0) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt32Size(10, version_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.BlockHeader.raw)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.BlockHeader.raw other = (com.cryptowallet.crypto.Protocol.BlockHeader.raw) obj;

                boolean result = true;
                result = result && (getTimestamp()
                        == other.getTimestamp());
                result = result && getTxTrieRoot()
                        .equals(other.getTxTrieRoot());
                result = result && getParentHash()
                        .equals(other.getParentHash());
                result = result && (getNumber()
                        == other.getNumber());
                result = result && (getWitnessId()
                        == other.getWitnessId());
                result = result && getWitnessAddress()
                        .equals(other.getWitnessAddress());
                result = result && (getVersion()
                        == other.getVersion());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getTimestamp());
                hash = (37 * hash) + TXTRIEROOT_FIELD_NUMBER;
                hash = (53 * hash) + getTxTrieRoot().hashCode();
                hash = (37 * hash) + PARENTHASH_FIELD_NUMBER;
                hash = (53 * hash) + getParentHash().hashCode();
                hash = (37 * hash) + NUMBER_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getNumber());
                hash = (37 * hash) + WITNESS_ID_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getWitnessId());
                hash = (37 * hash) + WITNESS_ADDRESS_FIELD_NUMBER;
                hash = (53 * hash) + getWitnessAddress().hashCode();
                hash = (37 * hash) + VERSION_FIELD_NUMBER;
                hash = (53 * hash) + getVersion();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.BlockHeader.raw prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.BlockHeader.raw}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.BlockHeader.raw)
                    com.cryptowallet.crypto.Protocol.BlockHeader.rawOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockHeader_raw_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockHeader_raw_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.BlockHeader.raw.class, com.cryptowallet.crypto.Protocol.BlockHeader.raw.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.BlockHeader.raw.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    timestamp_ = 0L;

                    txTrieRoot_ = com.google.protobuf.ByteString.EMPTY;

                    parentHash_ = com.google.protobuf.ByteString.EMPTY;

                    number_ = 0L;

                    witnessId_ = 0L;

                    witnessAddress_ = com.google.protobuf.ByteString.EMPTY;

                    version_ = 0;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockHeader_raw_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.BlockHeader.raw getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.BlockHeader.raw.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.BlockHeader.raw build() {
                    com.cryptowallet.crypto.Protocol.BlockHeader.raw result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.BlockHeader.raw buildPartial() {
                    com.cryptowallet.crypto.Protocol.BlockHeader.raw result = new com.cryptowallet.crypto.Protocol.BlockHeader.raw(this);
                    result.timestamp_ = timestamp_;
                    result.txTrieRoot_ = txTrieRoot_;
                    result.parentHash_ = parentHash_;
                    result.number_ = number_;
                    result.witnessId_ = witnessId_;
                    result.witnessAddress_ = witnessAddress_;
                    result.version_ = version_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.BlockHeader.raw) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.BlockHeader.raw)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.BlockHeader.raw other) {
                    if (other == com.cryptowallet.crypto.Protocol.BlockHeader.raw.getDefaultInstance()) return this;
                    if (other.getTimestamp() != 0L) {
                        setTimestamp(other.getTimestamp());
                    }
                    if (other.getTxTrieRoot() != com.google.protobuf.ByteString.EMPTY) {
                        setTxTrieRoot(other.getTxTrieRoot());
                    }
                    if (other.getParentHash() != com.google.protobuf.ByteString.EMPTY) {
                        setParentHash(other.getParentHash());
                    }
                    if (other.getNumber() != 0L) {
                        setNumber(other.getNumber());
                    }
                    if (other.getWitnessId() != 0L) {
                        setWitnessId(other.getWitnessId());
                    }
                    if (other.getWitnessAddress() != com.google.protobuf.ByteString.EMPTY) {
                        setWitnessAddress(other.getWitnessAddress());
                    }
                    if (other.getVersion() != 0) {
                        setVersion(other.getVersion());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.BlockHeader.raw parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.BlockHeader.raw) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private long timestamp_ ;
                /**
                 * <code>int64 timestamp = 1;</code>
                 */
                public long getTimestamp() {
                    return timestamp_;
                }
                /**
                 * <code>int64 timestamp = 1;</code>
                 */
                public Builder setTimestamp(long value) {

                    timestamp_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 timestamp = 1;</code>
                 */
                public Builder clearTimestamp() {

                    timestamp_ = 0L;
                    onChanged();
                    return this;
                }

                private com.google.protobuf.ByteString txTrieRoot_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes txTrieRoot = 2;</code>
                 */
                public com.google.protobuf.ByteString getTxTrieRoot() {
                    return txTrieRoot_;
                }
                /**
                 * <code>bytes txTrieRoot = 2;</code>
                 */
                public Builder setTxTrieRoot(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    txTrieRoot_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes txTrieRoot = 2;</code>
                 */
                public Builder clearTxTrieRoot() {

                    txTrieRoot_ = getDefaultInstance().getTxTrieRoot();
                    onChanged();
                    return this;
                }

                private com.google.protobuf.ByteString parentHash_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes parentHash = 3;</code>
                 */
                public com.google.protobuf.ByteString getParentHash() {
                    return parentHash_;
                }
                /**
                 * <code>bytes parentHash = 3;</code>
                 */
                public Builder setParentHash(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    parentHash_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes parentHash = 3;</code>
                 */
                public Builder clearParentHash() {

                    parentHash_ = getDefaultInstance().getParentHash();
                    onChanged();
                    return this;
                }

                private long number_ ;
                /**
                 * <pre>
                 *bytes nonce = 5;
                 *bytes difficulty = 6;
                 * </pre>
                 *
                 * <code>int64 number = 7;</code>
                 */
                public long getNumber() {
                    return number_;
                }
                /**
                 * <pre>
                 *bytes nonce = 5;
                 *bytes difficulty = 6;
                 * </pre>
                 *
                 * <code>int64 number = 7;</code>
                 */
                public Builder setNumber(long value) {

                    number_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *bytes nonce = 5;
                 *bytes difficulty = 6;
                 * </pre>
                 *
                 * <code>int64 number = 7;</code>
                 */
                public Builder clearNumber() {

                    number_ = 0L;
                    onChanged();
                    return this;
                }

                private long witnessId_ ;
                /**
                 * <code>int64 witness_id = 8;</code>
                 */
                public long getWitnessId() {
                    return witnessId_;
                }
                /**
                 * <code>int64 witness_id = 8;</code>
                 */
                public Builder setWitnessId(long value) {

                    witnessId_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 witness_id = 8;</code>
                 */
                public Builder clearWitnessId() {

                    witnessId_ = 0L;
                    onChanged();
                    return this;
                }

                private com.google.protobuf.ByteString witnessAddress_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes witness_address = 9;</code>
                 */
                public com.google.protobuf.ByteString getWitnessAddress() {
                    return witnessAddress_;
                }
                /**
                 * <code>bytes witness_address = 9;</code>
                 */
                public Builder setWitnessAddress(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    witnessAddress_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes witness_address = 9;</code>
                 */
                public Builder clearWitnessAddress() {

                    witnessAddress_ = getDefaultInstance().getWitnessAddress();
                    onChanged();
                    return this;
                }

                private int version_ ;
                /**
                 * <code>int32 version = 10;</code>
                 */
                public int getVersion() {
                    return version_;
                }
                /**
                 * <code>int32 version = 10;</code>
                 */
                public Builder setVersion(int value) {

                    version_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int32 version = 10;</code>
                 */
                public Builder clearVersion() {

                    version_ = 0;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.BlockHeader.raw)
            }

            // @@protoc_insertion_point(class_scope:protocol.BlockHeader.raw)
            private static final com.cryptowallet.crypto.Protocol.BlockHeader.raw DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.BlockHeader.raw();
            }

            public static com.cryptowallet.crypto.Protocol.BlockHeader.raw getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<raw>
                    PARSER = new com.google.protobuf.AbstractParser<raw>() {
                public raw parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new raw(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<raw> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<raw> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.BlockHeader.raw getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        public static final int RAW_DATA_FIELD_NUMBER = 1;
        private com.cryptowallet.crypto.Protocol.BlockHeader.raw rawData_;
        /**
         * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
         */
        public boolean hasRawData() {
            return rawData_ != null;
        }
        /**
         * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.BlockHeader.raw getRawData() {
            return rawData_ == null ? com.cryptowallet.crypto.Protocol.BlockHeader.raw.getDefaultInstance() : rawData_;
        }
        /**
         * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.BlockHeader.rawOrBuilder getRawDataOrBuilder() {
            return getRawData();
        }

        public static final int WITNESS_SIGNATURE_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString witnessSignature_;
        /**
         * <code>bytes witness_signature = 2;</code>
         */
        public com.google.protobuf.ByteString getWitnessSignature() {
            return witnessSignature_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (rawData_ != null) {
                output.writeMessage(1, getRawData());
            }
            if (!witnessSignature_.isEmpty()) {
                output.writeBytes(2, witnessSignature_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (rawData_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getRawData());
            }
            if (!witnessSignature_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, witnessSignature_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.BlockHeader)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.BlockHeader other = (com.cryptowallet.crypto.Protocol.BlockHeader) obj;

            boolean result = true;
            result = result && (hasRawData() == other.hasRawData());
            if (hasRawData()) {
                result = result && getRawData()
                        .equals(other.getRawData());
            }
            result = result && getWitnessSignature()
                    .equals(other.getWitnessSignature());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasRawData()) {
                hash = (37 * hash) + RAW_DATA_FIELD_NUMBER;
                hash = (53 * hash) + getRawData().hashCode();
            }
            hash = (37 * hash) + WITNESS_SIGNATURE_FIELD_NUMBER;
            hash = (53 * hash) + getWitnessSignature().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.BlockHeader parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.BlockHeader parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.BlockHeader prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.BlockHeader}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.BlockHeader)
                com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockHeader_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockHeader_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.BlockHeader.class, com.cryptowallet.crypto.Protocol.BlockHeader.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.BlockHeader.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (rawDataBuilder_ == null) {
                    rawData_ = null;
                } else {
                    rawData_ = null;
                    rawDataBuilder_ = null;
                }
                witnessSignature_ = com.google.protobuf.ByteString.EMPTY;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockHeader_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.BlockHeader getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.BlockHeader.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.BlockHeader build() {
                com.cryptowallet.crypto.Protocol.BlockHeader result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.BlockHeader buildPartial() {
                com.cryptowallet.crypto.Protocol.BlockHeader result = new com.cryptowallet.crypto.Protocol.BlockHeader(this);
                if (rawDataBuilder_ == null) {
                    result.rawData_ = rawData_;
                } else {
                    result.rawData_ = rawDataBuilder_.build();
                }
                result.witnessSignature_ = witnessSignature_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.BlockHeader) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.BlockHeader)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.BlockHeader other) {
                if (other == com.cryptowallet.crypto.Protocol.BlockHeader.getDefaultInstance()) return this;
                if (other.hasRawData()) {
                    mergeRawData(other.getRawData());
                }
                if (other.getWitnessSignature() != com.google.protobuf.ByteString.EMPTY) {
                    setWitnessSignature(other.getWitnessSignature());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.BlockHeader parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.BlockHeader) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.cryptowallet.crypto.Protocol.BlockHeader.raw rawData_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.BlockHeader.raw, com.cryptowallet.crypto.Protocol.BlockHeader.raw.Builder, com.cryptowallet.crypto.Protocol.BlockHeader.rawOrBuilder> rawDataBuilder_;
            /**
             * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
             */
            public boolean hasRawData() {
                return rawDataBuilder_ != null || rawData_ != null;
            }
            /**
             * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeader.raw getRawData() {
                if (rawDataBuilder_ == null) {
                    return rawData_ == null ? com.cryptowallet.crypto.Protocol.BlockHeader.raw.getDefaultInstance() : rawData_;
                } else {
                    return rawDataBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
             */
            public Builder setRawData(com.cryptowallet.crypto.Protocol.BlockHeader.raw value) {
                if (rawDataBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    rawData_ = value;
                    onChanged();
                } else {
                    rawDataBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
             */
            public Builder setRawData(
                    com.cryptowallet.crypto.Protocol.BlockHeader.raw.Builder builderForValue) {
                if (rawDataBuilder_ == null) {
                    rawData_ = builderForValue.build();
                    onChanged();
                } else {
                    rawDataBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
             */
            public Builder mergeRawData(com.cryptowallet.crypto.Protocol.BlockHeader.raw value) {
                if (rawDataBuilder_ == null) {
                    if (rawData_ != null) {
                        rawData_ =
                                com.cryptowallet.crypto.Protocol.BlockHeader.raw.newBuilder(rawData_).mergeFrom(value).buildPartial();
                    } else {
                        rawData_ = value;
                    }
                    onChanged();
                } else {
                    rawDataBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
             */
            public Builder clearRawData() {
                if (rawDataBuilder_ == null) {
                    rawData_ = null;
                    onChanged();
                } else {
                    rawData_ = null;
                    rawDataBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeader.raw.Builder getRawDataBuilder() {

                onChanged();
                return getRawDataFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeader.rawOrBuilder getRawDataOrBuilder() {
                if (rawDataBuilder_ != null) {
                    return rawDataBuilder_.getMessageOrBuilder();
                } else {
                    return rawData_ == null ?
                            com.cryptowallet.crypto.Protocol.BlockHeader.raw.getDefaultInstance() : rawData_;
                }
            }
            /**
             * <code>.protocol.BlockHeader.raw raw_data = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.BlockHeader.raw, com.cryptowallet.crypto.Protocol.BlockHeader.raw.Builder, com.cryptowallet.crypto.Protocol.BlockHeader.rawOrBuilder>
            getRawDataFieldBuilder() {
                if (rawDataBuilder_ == null) {
                    rawDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.BlockHeader.raw, com.cryptowallet.crypto.Protocol.BlockHeader.raw.Builder, com.cryptowallet.crypto.Protocol.BlockHeader.rawOrBuilder>(
                            getRawData(),
                            getParentForChildren(),
                            isClean());
                    rawData_ = null;
                }
                return rawDataBuilder_;
            }

            private com.google.protobuf.ByteString witnessSignature_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes witness_signature = 2;</code>
             */
            public com.google.protobuf.ByteString getWitnessSignature() {
                return witnessSignature_;
            }
            /**
             * <code>bytes witness_signature = 2;</code>
             */
            public Builder setWitnessSignature(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                witnessSignature_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes witness_signature = 2;</code>
             */
            public Builder clearWitnessSignature() {

                witnessSignature_ = getDefaultInstance().getWitnessSignature();
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.BlockHeader)
        }

        // @@protoc_insertion_point(class_scope:protocol.BlockHeader)
        private static final com.cryptowallet.crypto.Protocol.BlockHeader DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.BlockHeader();
        }

        public static com.cryptowallet.crypto.Protocol.BlockHeader getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BlockHeader>
                PARSER = new com.google.protobuf.AbstractParser<BlockHeader>() {
            public BlockHeader parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new BlockHeader(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<BlockHeader> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<BlockHeader> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.BlockHeader getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface BlockOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Block)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.Transaction>
        getTransactionsList();
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.Transaction getTransactions(int index);
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        int getTransactionsCount();
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
        getTransactionsOrBuilderList();
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionsOrBuilder(
                int index);

        /**
         * <code>.protocol.BlockHeader block_header = 2;</code>
         */
        boolean hasBlockHeader();
        /**
         * <code>.protocol.BlockHeader block_header = 2;</code>
         */
        com.cryptowallet.crypto.Protocol.BlockHeader getBlockHeader();
        /**
         * <code>.protocol.BlockHeader block_header = 2;</code>
         */
        com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder getBlockHeaderOrBuilder();
    }
    /**
     * <pre>
     * block
     * </pre>
     *
     * Protobuf type {@code protocol.Block}
     */
    public  static final class Block extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Block)
            BlockOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Block.newBuilder() to construct.
        private Block(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Block() {
            transactions_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Block(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                transactions_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Transaction>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            transactions_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.Transaction.parser(), extensionRegistry));
                            break;
                        }
                        case 18: {
                            com.cryptowallet.crypto.Protocol.BlockHeader.Builder subBuilder = null;
                            if (blockHeader_ != null) {
                                subBuilder = blockHeader_.toBuilder();
                            }
                            blockHeader_ = input.readMessage(com.cryptowallet.crypto.Protocol.BlockHeader.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(blockHeader_);
                                blockHeader_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    transactions_ = java.util.Collections.unmodifiableList(transactions_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Block_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Block_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Block.class, com.cryptowallet.crypto.Protocol.Block.Builder.class);
        }

        private int bitField0_;
        public static final int TRANSACTIONS_FIELD_NUMBER = 1;
        private java.util.List<com.cryptowallet.crypto.Protocol.Transaction> transactions_;
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.Transaction> getTransactionsList() {
            return transactions_;
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
        getTransactionsOrBuilderList() {
            return transactions_;
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        public int getTransactionsCount() {
            return transactions_.size();
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.Transaction getTransactions(int index) {
            return transactions_.get(index);
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionsOrBuilder(
                int index) {
            return transactions_.get(index);
        }

        public static final int BLOCK_HEADER_FIELD_NUMBER = 2;
        private com.cryptowallet.crypto.Protocol.BlockHeader blockHeader_;
        /**
         * <code>.protocol.BlockHeader block_header = 2;</code>
         */
        public boolean hasBlockHeader() {
            return blockHeader_ != null;
        }
        /**
         * <code>.protocol.BlockHeader block_header = 2;</code>
         */
        public com.cryptowallet.crypto.Protocol.BlockHeader getBlockHeader() {
            return blockHeader_ == null ? com.cryptowallet.crypto.Protocol.BlockHeader.getDefaultInstance() : blockHeader_;
        }
        /**
         * <code>.protocol.BlockHeader block_header = 2;</code>
         */
        public com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder getBlockHeaderOrBuilder() {
            return getBlockHeader();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < transactions_.size(); i++) {
                output.writeMessage(1, transactions_.get(i));
            }
            if (blockHeader_ != null) {
                output.writeMessage(2, getBlockHeader());
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < transactions_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, transactions_.get(i));
            }
            if (blockHeader_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getBlockHeader());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Block)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Block other = (com.cryptowallet.crypto.Protocol.Block) obj;

            boolean result = true;
            result = result && getTransactionsList()
                    .equals(other.getTransactionsList());
            result = result && (hasBlockHeader() == other.hasBlockHeader());
            if (hasBlockHeader()) {
                result = result && getBlockHeader()
                        .equals(other.getBlockHeader());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getTransactionsCount() > 0) {
                hash = (37 * hash) + TRANSACTIONS_FIELD_NUMBER;
                hash = (53 * hash) + getTransactionsList().hashCode();
            }
            if (hasBlockHeader()) {
                hash = (37 * hash) + BLOCK_HEADER_FIELD_NUMBER;
                hash = (53 * hash) + getBlockHeader().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Block parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Block parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Block prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         * block
         * </pre>
         *
         * Protobuf type {@code protocol.Block}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Block)
                com.cryptowallet.crypto.Protocol.BlockOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Block_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Block_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Block.class, com.cryptowallet.crypto.Protocol.Block.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Block.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getTransactionsFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (transactionsBuilder_ == null) {
                    transactions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    transactionsBuilder_.clear();
                }
                if (blockHeaderBuilder_ == null) {
                    blockHeader_ = null;
                } else {
                    blockHeader_ = null;
                    blockHeaderBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Block_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Block getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Block.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Block build() {
                com.cryptowallet.crypto.Protocol.Block result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Block buildPartial() {
                com.cryptowallet.crypto.Protocol.Block result = new com.cryptowallet.crypto.Protocol.Block(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (transactionsBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        transactions_ = java.util.Collections.unmodifiableList(transactions_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.transactions_ = transactions_;
                } else {
                    result.transactions_ = transactionsBuilder_.build();
                }
                if (blockHeaderBuilder_ == null) {
                    result.blockHeader_ = blockHeader_;
                } else {
                    result.blockHeader_ = blockHeaderBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Block) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Block)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Block other) {
                if (other == com.cryptowallet.crypto.Protocol.Block.getDefaultInstance()) return this;
                if (transactionsBuilder_ == null) {
                    if (!other.transactions_.isEmpty()) {
                        if (transactions_.isEmpty()) {
                            transactions_ = other.transactions_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureTransactionsIsMutable();
                            transactions_.addAll(other.transactions_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.transactions_.isEmpty()) {
                        if (transactionsBuilder_.isEmpty()) {
                            transactionsBuilder_.dispose();
                            transactionsBuilder_ = null;
                            transactions_ = other.transactions_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            transactionsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getTransactionsFieldBuilder() : null;
                        } else {
                            transactionsBuilder_.addAllMessages(other.transactions_);
                        }
                    }
                }
                if (other.hasBlockHeader()) {
                    mergeBlockHeader(other.getBlockHeader());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Block parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Block) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private java.util.List<com.cryptowallet.crypto.Protocol.Transaction> transactions_ =
                    java.util.Collections.emptyList();
            private void ensureTransactionsIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    transactions_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Transaction>(transactions_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder> transactionsBuilder_;

            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Transaction> getTransactionsList() {
                if (transactionsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(transactions_);
                } else {
                    return transactionsBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public int getTransactionsCount() {
                if (transactionsBuilder_ == null) {
                    return transactions_.size();
                } else {
                    return transactionsBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction getTransactions(int index) {
                if (transactionsBuilder_ == null) {
                    return transactions_.get(index);
                } else {
                    return transactionsBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder setTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionsIsMutable();
                    transactions_.set(index, value);
                    onChanged();
                } else {
                    transactionsBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder setTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction.Builder builderForValue) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    transactionsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder addTransactions(com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionsIsMutable();
                    transactions_.add(value);
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder addTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionsIsMutable();
                    transactions_.add(index, value);
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder addTransactions(
                    com.cryptowallet.crypto.Protocol.Transaction.Builder builderForValue) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.add(builderForValue.build());
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder addTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction.Builder builderForValue) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder addAllTransactions(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Transaction> values) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, transactions_);
                    onChanged();
                } else {
                    transactionsBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder clearTransactions() {
                if (transactionsBuilder_ == null) {
                    transactions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    transactionsBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public Builder removeTransactions(int index) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.remove(index);
                    onChanged();
                } else {
                    transactionsBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Builder getTransactionsBuilder(
                    int index) {
                return getTransactionsFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionsOrBuilder(
                    int index) {
                if (transactionsBuilder_ == null) {
                    return transactions_.get(index);  } else {
                    return transactionsBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
            getTransactionsOrBuilderList() {
                if (transactionsBuilder_ != null) {
                    return transactionsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(transactions_);
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Builder addTransactionsBuilder() {
                return getTransactionsFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Builder addTransactionsBuilder(
                    int index) {
                return getTransactionsFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Builder>
            getTransactionsBuilderList() {
                return getTransactionsFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
            getTransactionsFieldBuilder() {
                if (transactionsBuilder_ == null) {
                    transactionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder>(
                            transactions_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    transactions_ = null;
                }
                return transactionsBuilder_;
            }

            private com.cryptowallet.crypto.Protocol.BlockHeader blockHeader_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.BlockHeader, com.cryptowallet.crypto.Protocol.BlockHeader.Builder, com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder> blockHeaderBuilder_;
            /**
             * <code>.protocol.BlockHeader block_header = 2;</code>
             */
            public boolean hasBlockHeader() {
                return blockHeaderBuilder_ != null || blockHeader_ != null;
            }
            /**
             * <code>.protocol.BlockHeader block_header = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeader getBlockHeader() {
                if (blockHeaderBuilder_ == null) {
                    return blockHeader_ == null ? com.cryptowallet.crypto.Protocol.BlockHeader.getDefaultInstance() : blockHeader_;
                } else {
                    return blockHeaderBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.BlockHeader block_header = 2;</code>
             */
            public Builder setBlockHeader(com.cryptowallet.crypto.Protocol.BlockHeader value) {
                if (blockHeaderBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    blockHeader_ = value;
                    onChanged();
                } else {
                    blockHeaderBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.BlockHeader block_header = 2;</code>
             */
            public Builder setBlockHeader(
                    com.cryptowallet.crypto.Protocol.BlockHeader.Builder builderForValue) {
                if (blockHeaderBuilder_ == null) {
                    blockHeader_ = builderForValue.build();
                    onChanged();
                } else {
                    blockHeaderBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.BlockHeader block_header = 2;</code>
             */
            public Builder mergeBlockHeader(com.cryptowallet.crypto.Protocol.BlockHeader value) {
                if (blockHeaderBuilder_ == null) {
                    if (blockHeader_ != null) {
                        blockHeader_ =
                                com.cryptowallet.crypto.Protocol.BlockHeader.newBuilder(blockHeader_).mergeFrom(value).buildPartial();
                    } else {
                        blockHeader_ = value;
                    }
                    onChanged();
                } else {
                    blockHeaderBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.BlockHeader block_header = 2;</code>
             */
            public Builder clearBlockHeader() {
                if (blockHeaderBuilder_ == null) {
                    blockHeader_ = null;
                    onChanged();
                } else {
                    blockHeader_ = null;
                    blockHeaderBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.BlockHeader block_header = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeader.Builder getBlockHeaderBuilder() {

                onChanged();
                return getBlockHeaderFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.BlockHeader block_header = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder getBlockHeaderOrBuilder() {
                if (blockHeaderBuilder_ != null) {
                    return blockHeaderBuilder_.getMessageOrBuilder();
                } else {
                    return blockHeader_ == null ?
                            com.cryptowallet.crypto.Protocol.BlockHeader.getDefaultInstance() : blockHeader_;
                }
            }
            /**
             * <code>.protocol.BlockHeader block_header = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.BlockHeader, com.cryptowallet.crypto.Protocol.BlockHeader.Builder, com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder>
            getBlockHeaderFieldBuilder() {
                if (blockHeaderBuilder_ == null) {
                    blockHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.BlockHeader, com.cryptowallet.crypto.Protocol.BlockHeader.Builder, com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder>(
                            getBlockHeader(),
                            getParentForChildren(),
                            isClean());
                    blockHeader_ = null;
                }
                return blockHeaderBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Block)
        }

        // @@protoc_insertion_point(class_scope:protocol.Block)
        private static final com.cryptowallet.crypto.Protocol.Block DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Block();
        }

        public static com.cryptowallet.crypto.Protocol.Block getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Block>
                PARSER = new com.google.protobuf.AbstractParser<Block>() {
            public Block parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Block(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Block> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Block> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Block getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ChainInventoryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.ChainInventory)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.ChainInventory.BlockId>
        getIdsList();
        /**
         * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.ChainInventory.BlockId getIds(int index);
        /**
         * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
         */
        int getIdsCount();
        /**
         * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.ChainInventory.BlockIdOrBuilder>
        getIdsOrBuilderList();
        /**
         * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.ChainInventory.BlockIdOrBuilder getIdsOrBuilder(
                int index);

        /**
         * <code>int64 remain_num = 2;</code>
         */
        long getRemainNum();
    }
    /**
     * Protobuf type {@code protocol.ChainInventory}
     */
    public  static final class ChainInventory extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.ChainInventory)
            ChainInventoryOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use ChainInventory.newBuilder() to construct.
        private ChainInventory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ChainInventory() {
            ids_ = java.util.Collections.emptyList();
            remainNum_ = 0L;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private ChainInventory(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                ids_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.ChainInventory.BlockId>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            ids_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.parser(), extensionRegistry));
                            break;
                        }
                        case 16: {

                            remainNum_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    ids_ = java.util.Collections.unmodifiableList(ids_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainInventory_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainInventory_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.ChainInventory.class, com.cryptowallet.crypto.Protocol.ChainInventory.Builder.class);
        }

        public interface BlockIdOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.ChainInventory.BlockId)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>bytes hash = 1;</code>
             */
            com.google.protobuf.ByteString getHash();

            /**
             * <code>int64 number = 2;</code>
             */
            long getNumber();
        }
        /**
         * Protobuf type {@code protocol.ChainInventory.BlockId}
         */
        public  static final class BlockId extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.ChainInventory.BlockId)
                BlockIdOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use BlockId.newBuilder() to construct.
            private BlockId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private BlockId() {
                hash_ = com.google.protobuf.ByteString.EMPTY;
                number_ = 0L;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private BlockId(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {

                                hash_ = input.readBytes();
                                break;
                            }
                            case 16: {

                                number_ = input.readInt64();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainInventory_BlockId_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainInventory_BlockId_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.class, com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder.class);
            }

            public static final int HASH_FIELD_NUMBER = 1;
            private com.google.protobuf.ByteString hash_;
            /**
             * <code>bytes hash = 1;</code>
             */
            public com.google.protobuf.ByteString getHash() {
                return hash_;
            }

            public static final int NUMBER_FIELD_NUMBER = 2;
            private long number_;
            /**
             * <code>int64 number = 2;</code>
             */
            public long getNumber() {
                return number_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (!hash_.isEmpty()) {
                    output.writeBytes(1, hash_);
                }
                if (number_ != 0L) {
                    output.writeInt64(2, number_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!hash_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(1, hash_);
                }
                if (number_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(2, number_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.ChainInventory.BlockId)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.ChainInventory.BlockId other = (com.cryptowallet.crypto.Protocol.ChainInventory.BlockId) obj;

                boolean result = true;
                result = result && getHash()
                        .equals(other.getHash());
                result = result && (getNumber()
                        == other.getNumber());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + HASH_FIELD_NUMBER;
                hash = (53 * hash) + getHash().hashCode();
                hash = (37 * hash) + NUMBER_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getNumber());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.ChainInventory.BlockId prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.ChainInventory.BlockId}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.ChainInventory.BlockId)
                    com.cryptowallet.crypto.Protocol.ChainInventory.BlockIdOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainInventory_BlockId_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainInventory_BlockId_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.class, com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    hash_ = com.google.protobuf.ByteString.EMPTY;

                    number_ = 0L;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainInventory_BlockId_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.ChainInventory.BlockId getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.ChainInventory.BlockId build() {
                    com.cryptowallet.crypto.Protocol.ChainInventory.BlockId result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.ChainInventory.BlockId buildPartial() {
                    com.cryptowallet.crypto.Protocol.ChainInventory.BlockId result = new com.cryptowallet.crypto.Protocol.ChainInventory.BlockId(this);
                    result.hash_ = hash_;
                    result.number_ = number_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.ChainInventory.BlockId) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.ChainInventory.BlockId)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.ChainInventory.BlockId other) {
                    if (other == com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.getDefaultInstance()) return this;
                    if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
                        setHash(other.getHash());
                    }
                    if (other.getNumber() != 0L) {
                        setNumber(other.getNumber());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.ChainInventory.BlockId parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.ChainInventory.BlockId) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes hash = 1;</code>
                 */
                public com.google.protobuf.ByteString getHash() {
                    return hash_;
                }
                /**
                 * <code>bytes hash = 1;</code>
                 */
                public Builder setHash(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    hash_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes hash = 1;</code>
                 */
                public Builder clearHash() {

                    hash_ = getDefaultInstance().getHash();
                    onChanged();
                    return this;
                }

                private long number_ ;
                /**
                 * <code>int64 number = 2;</code>
                 */
                public long getNumber() {
                    return number_;
                }
                /**
                 * <code>int64 number = 2;</code>
                 */
                public Builder setNumber(long value) {

                    number_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 number = 2;</code>
                 */
                public Builder clearNumber() {

                    number_ = 0L;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.ChainInventory.BlockId)
            }

            // @@protoc_insertion_point(class_scope:protocol.ChainInventory.BlockId)
            private static final com.cryptowallet.crypto.Protocol.ChainInventory.BlockId DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.ChainInventory.BlockId();
            }

            public static com.cryptowallet.crypto.Protocol.ChainInventory.BlockId getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<BlockId>
                    PARSER = new com.google.protobuf.AbstractParser<BlockId>() {
                public BlockId parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new BlockId(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<BlockId> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<BlockId> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.ChainInventory.BlockId getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int IDS_FIELD_NUMBER = 1;
        private java.util.List<com.cryptowallet.crypto.Protocol.ChainInventory.BlockId> ids_;
        /**
         * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.ChainInventory.BlockId> getIdsList() {
            return ids_;
        }
        /**
         * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.ChainInventory.BlockIdOrBuilder>
        getIdsOrBuilderList() {
            return ids_;
        }
        /**
         * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
         */
        public int getIdsCount() {
            return ids_.size();
        }
        /**
         * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.ChainInventory.BlockId getIds(int index) {
            return ids_.get(index);
        }
        /**
         * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.ChainInventory.BlockIdOrBuilder getIdsOrBuilder(
                int index) {
            return ids_.get(index);
        }

        public static final int REMAIN_NUM_FIELD_NUMBER = 2;
        private long remainNum_;
        /**
         * <code>int64 remain_num = 2;</code>
         */
        public long getRemainNum() {
            return remainNum_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < ids_.size(); i++) {
                output.writeMessage(1, ids_.get(i));
            }
            if (remainNum_ != 0L) {
                output.writeInt64(2, remainNum_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < ids_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, ids_.get(i));
            }
            if (remainNum_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, remainNum_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.ChainInventory)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.ChainInventory other = (com.cryptowallet.crypto.Protocol.ChainInventory) obj;

            boolean result = true;
            result = result && getIdsList()
                    .equals(other.getIdsList());
            result = result && (getRemainNum()
                    == other.getRemainNum());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getIdsCount() > 0) {
                hash = (37 * hash) + IDS_FIELD_NUMBER;
                hash = (53 * hash) + getIdsList().hashCode();
            }
            hash = (37 * hash) + REMAIN_NUM_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getRemainNum());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.ChainInventory parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.ChainInventory parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.ChainInventory prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.ChainInventory}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.ChainInventory)
                com.cryptowallet.crypto.Protocol.ChainInventoryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainInventory_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainInventory_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.ChainInventory.class, com.cryptowallet.crypto.Protocol.ChainInventory.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.ChainInventory.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getIdsFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (idsBuilder_ == null) {
                    ids_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    idsBuilder_.clear();
                }
                remainNum_ = 0L;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_ChainInventory_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.ChainInventory getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.ChainInventory.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.ChainInventory build() {
                com.cryptowallet.crypto.Protocol.ChainInventory result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.ChainInventory buildPartial() {
                com.cryptowallet.crypto.Protocol.ChainInventory result = new com.cryptowallet.crypto.Protocol.ChainInventory(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (idsBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        ids_ = java.util.Collections.unmodifiableList(ids_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.ids_ = ids_;
                } else {
                    result.ids_ = idsBuilder_.build();
                }
                result.remainNum_ = remainNum_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.ChainInventory) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.ChainInventory)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.ChainInventory other) {
                if (other == com.cryptowallet.crypto.Protocol.ChainInventory.getDefaultInstance()) return this;
                if (idsBuilder_ == null) {
                    if (!other.ids_.isEmpty()) {
                        if (ids_.isEmpty()) {
                            ids_ = other.ids_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureIdsIsMutable();
                            ids_.addAll(other.ids_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.ids_.isEmpty()) {
                        if (idsBuilder_.isEmpty()) {
                            idsBuilder_.dispose();
                            idsBuilder_ = null;
                            ids_ = other.ids_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            idsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getIdsFieldBuilder() : null;
                        } else {
                            idsBuilder_.addAllMessages(other.ids_);
                        }
                    }
                }
                if (other.getRemainNum() != 0L) {
                    setRemainNum(other.getRemainNum());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.ChainInventory parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.ChainInventory) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private java.util.List<com.cryptowallet.crypto.Protocol.ChainInventory.BlockId> ids_ =
                    java.util.Collections.emptyList();
            private void ensureIdsIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    ids_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.ChainInventory.BlockId>(ids_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.ChainInventory.BlockId, com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder, com.cryptowallet.crypto.Protocol.ChainInventory.BlockIdOrBuilder> idsBuilder_;

            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.ChainInventory.BlockId> getIdsList() {
                if (idsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(ids_);
                } else {
                    return idsBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public int getIdsCount() {
                if (idsBuilder_ == null) {
                    return ids_.size();
                } else {
                    return idsBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ChainInventory.BlockId getIds(int index) {
                if (idsBuilder_ == null) {
                    return ids_.get(index);
                } else {
                    return idsBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public Builder setIds(
                    int index, com.cryptowallet.crypto.Protocol.ChainInventory.BlockId value) {
                if (idsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureIdsIsMutable();
                    ids_.set(index, value);
                    onChanged();
                } else {
                    idsBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public Builder setIds(
                    int index, com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder builderForValue) {
                if (idsBuilder_ == null) {
                    ensureIdsIsMutable();
                    ids_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    idsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public Builder addIds(com.cryptowallet.crypto.Protocol.ChainInventory.BlockId value) {
                if (idsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureIdsIsMutable();
                    ids_.add(value);
                    onChanged();
                } else {
                    idsBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public Builder addIds(
                    int index, com.cryptowallet.crypto.Protocol.ChainInventory.BlockId value) {
                if (idsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureIdsIsMutable();
                    ids_.add(index, value);
                    onChanged();
                } else {
                    idsBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public Builder addIds(
                    com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder builderForValue) {
                if (idsBuilder_ == null) {
                    ensureIdsIsMutable();
                    ids_.add(builderForValue.build());
                    onChanged();
                } else {
                    idsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public Builder addIds(
                    int index, com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder builderForValue) {
                if (idsBuilder_ == null) {
                    ensureIdsIsMutable();
                    ids_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    idsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public Builder addAllIds(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.ChainInventory.BlockId> values) {
                if (idsBuilder_ == null) {
                    ensureIdsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, ids_);
                    onChanged();
                } else {
                    idsBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public Builder clearIds() {
                if (idsBuilder_ == null) {
                    ids_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    idsBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public Builder removeIds(int index) {
                if (idsBuilder_ == null) {
                    ensureIdsIsMutable();
                    ids_.remove(index);
                    onChanged();
                } else {
                    idsBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder getIdsBuilder(
                    int index) {
                return getIdsFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ChainInventory.BlockIdOrBuilder getIdsOrBuilder(
                    int index) {
                if (idsBuilder_ == null) {
                    return ids_.get(index);  } else {
                    return idsBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.ChainInventory.BlockIdOrBuilder>
            getIdsOrBuilderList() {
                if (idsBuilder_ != null) {
                    return idsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(ids_);
                }
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder addIdsBuilder() {
                return getIdsFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder addIdsBuilder(
                    int index) {
                return getIdsFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.ChainInventory.BlockId ids = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder>
            getIdsBuilderList() {
                return getIdsFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.ChainInventory.BlockId, com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder, com.cryptowallet.crypto.Protocol.ChainInventory.BlockIdOrBuilder>
            getIdsFieldBuilder() {
                if (idsBuilder_ == null) {
                    idsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.ChainInventory.BlockId, com.cryptowallet.crypto.Protocol.ChainInventory.BlockId.Builder, com.cryptowallet.crypto.Protocol.ChainInventory.BlockIdOrBuilder>(
                            ids_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    ids_ = null;
                }
                return idsBuilder_;
            }

            private long remainNum_ ;
            /**
             * <code>int64 remain_num = 2;</code>
             */
            public long getRemainNum() {
                return remainNum_;
            }
            /**
             * <code>int64 remain_num = 2;</code>
             */
            public Builder setRemainNum(long value) {

                remainNum_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 remain_num = 2;</code>
             */
            public Builder clearRemainNum() {

                remainNum_ = 0L;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.ChainInventory)
        }

        // @@protoc_insertion_point(class_scope:protocol.ChainInventory)
        private static final com.cryptowallet.crypto.Protocol.ChainInventory DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.ChainInventory();
        }

        public static com.cryptowallet.crypto.Protocol.ChainInventory getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ChainInventory>
                PARSER = new com.google.protobuf.AbstractParser<ChainInventory>() {
            public ChainInventory parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ChainInventory(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ChainInventory> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ChainInventory> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.ChainInventory getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface BlockInventoryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.BlockInventory)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.BlockInventory.BlockId>
        getIdsList();
        /**
         * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.BlockInventory.BlockId getIds(int index);
        /**
         * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
         */
        int getIdsCount();
        /**
         * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.BlockInventory.BlockIdOrBuilder>
        getIdsOrBuilderList();
        /**
         * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.BlockInventory.BlockIdOrBuilder getIdsOrBuilder(
                int index);

        /**
         * <code>.protocol.BlockInventory.Type type = 2;</code>
         */
        int getTypeValue();
        /**
         * <code>.protocol.BlockInventory.Type type = 2;</code>
         */
        com.cryptowallet.crypto.Protocol.BlockInventory.Type getType();
    }
    /**
     * <pre>
     * Inventory
     * </pre>
     *
     * Protobuf type {@code protocol.BlockInventory}
     */
    public  static final class BlockInventory extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.BlockInventory)
            BlockInventoryOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use BlockInventory.newBuilder() to construct.
        private BlockInventory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private BlockInventory() {
            ids_ = java.util.Collections.emptyList();
            type_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private BlockInventory(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                ids_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.BlockInventory.BlockId>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            ids_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.parser(), extensionRegistry));
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            type_ = rawValue;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    ids_ = java.util.Collections.unmodifiableList(ids_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockInventory_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockInventory_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.BlockInventory.class, com.cryptowallet.crypto.Protocol.BlockInventory.Builder.class);
        }

        /**
         * Protobuf enum {@code protocol.BlockInventory.Type}
         */
        public enum Type
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>SYNC = 0;</code>
             */
            SYNC(0),
            /**
             * <code>ADVTISE = 1;</code>
             */
            ADVTISE(1),
            /**
             * <code>FETCH = 2;</code>
             */
            FETCH(2),
            UNRECOGNIZED(-1),
            ;

            /**
             * <code>SYNC = 0;</code>
             */
            public static final int SYNC_VALUE = 0;
            /**
             * <code>ADVTISE = 1;</code>
             */
            public static final int ADVTISE_VALUE = 1;
            /**
             * <code>FETCH = 2;</code>
             */
            public static final int FETCH_VALUE = 2;


            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new java.lang.IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static Type valueOf(int value) {
                return forNumber(value);
            }

            public static Type forNumber(int value) {
                switch (value) {
                    case 0: return SYNC;
                    case 1: return ADVTISE;
                    case 2: return FETCH;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
                return internalValueMap;
            }
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    Type> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                        public Type findValueByNumber(int number) {
                            return Type.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }
            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }
            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.BlockInventory.getDescriptor().getEnumTypes().get(0);
            }

            private static final Type[] VALUES = values();

            public static Type valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private Type(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:protocol.BlockInventory.Type)
        }

        public interface BlockIdOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.BlockInventory.BlockId)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>bytes hash = 1;</code>
             */
            com.google.protobuf.ByteString getHash();

            /**
             * <code>int64 number = 2;</code>
             */
            long getNumber();
        }
        /**
         * Protobuf type {@code protocol.BlockInventory.BlockId}
         */
        public  static final class BlockId extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.BlockInventory.BlockId)
                BlockIdOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use BlockId.newBuilder() to construct.
            private BlockId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private BlockId() {
                hash_ = com.google.protobuf.ByteString.EMPTY;
                number_ = 0L;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private BlockId(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {

                                hash_ = input.readBytes();
                                break;
                            }
                            case 16: {

                                number_ = input.readInt64();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockInventory_BlockId_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockInventory_BlockId_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.class, com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder.class);
            }

            public static final int HASH_FIELD_NUMBER = 1;
            private com.google.protobuf.ByteString hash_;
            /**
             * <code>bytes hash = 1;</code>
             */
            public com.google.protobuf.ByteString getHash() {
                return hash_;
            }

            public static final int NUMBER_FIELD_NUMBER = 2;
            private long number_;
            /**
             * <code>int64 number = 2;</code>
             */
            public long getNumber() {
                return number_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (!hash_.isEmpty()) {
                    output.writeBytes(1, hash_);
                }
                if (number_ != 0L) {
                    output.writeInt64(2, number_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!hash_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(1, hash_);
                }
                if (number_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(2, number_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.BlockInventory.BlockId)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.BlockInventory.BlockId other = (com.cryptowallet.crypto.Protocol.BlockInventory.BlockId) obj;

                boolean result = true;
                result = result && getHash()
                        .equals(other.getHash());
                result = result && (getNumber()
                        == other.getNumber());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + HASH_FIELD_NUMBER;
                hash = (53 * hash) + getHash().hashCode();
                hash = (37 * hash) + NUMBER_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getNumber());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.BlockInventory.BlockId prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.BlockInventory.BlockId}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.BlockInventory.BlockId)
                    com.cryptowallet.crypto.Protocol.BlockInventory.BlockIdOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockInventory_BlockId_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockInventory_BlockId_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.class, com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    hash_ = com.google.protobuf.ByteString.EMPTY;

                    number_ = 0L;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockInventory_BlockId_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.BlockInventory.BlockId getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.BlockInventory.BlockId build() {
                    com.cryptowallet.crypto.Protocol.BlockInventory.BlockId result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.BlockInventory.BlockId buildPartial() {
                    com.cryptowallet.crypto.Protocol.BlockInventory.BlockId result = new com.cryptowallet.crypto.Protocol.BlockInventory.BlockId(this);
                    result.hash_ = hash_;
                    result.number_ = number_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.BlockInventory.BlockId) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.BlockInventory.BlockId)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.BlockInventory.BlockId other) {
                    if (other == com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.getDefaultInstance()) return this;
                    if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
                        setHash(other.getHash());
                    }
                    if (other.getNumber() != 0L) {
                        setNumber(other.getNumber());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.BlockInventory.BlockId parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.BlockInventory.BlockId) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes hash = 1;</code>
                 */
                public com.google.protobuf.ByteString getHash() {
                    return hash_;
                }
                /**
                 * <code>bytes hash = 1;</code>
                 */
                public Builder setHash(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    hash_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes hash = 1;</code>
                 */
                public Builder clearHash() {

                    hash_ = getDefaultInstance().getHash();
                    onChanged();
                    return this;
                }

                private long number_ ;
                /**
                 * <code>int64 number = 2;</code>
                 */
                public long getNumber() {
                    return number_;
                }
                /**
                 * <code>int64 number = 2;</code>
                 */
                public Builder setNumber(long value) {

                    number_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 number = 2;</code>
                 */
                public Builder clearNumber() {

                    number_ = 0L;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.BlockInventory.BlockId)
            }

            // @@protoc_insertion_point(class_scope:protocol.BlockInventory.BlockId)
            private static final com.cryptowallet.crypto.Protocol.BlockInventory.BlockId DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.BlockInventory.BlockId();
            }

            public static com.cryptowallet.crypto.Protocol.BlockInventory.BlockId getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<BlockId>
                    PARSER = new com.google.protobuf.AbstractParser<BlockId>() {
                public BlockId parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new BlockId(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<BlockId> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<BlockId> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.BlockInventory.BlockId getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int IDS_FIELD_NUMBER = 1;
        private java.util.List<com.cryptowallet.crypto.Protocol.BlockInventory.BlockId> ids_;
        /**
         * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.BlockInventory.BlockId> getIdsList() {
            return ids_;
        }
        /**
         * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.BlockInventory.BlockIdOrBuilder>
        getIdsOrBuilderList() {
            return ids_;
        }
        /**
         * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
         */
        public int getIdsCount() {
            return ids_.size();
        }
        /**
         * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.BlockInventory.BlockId getIds(int index) {
            return ids_.get(index);
        }
        /**
         * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.BlockInventory.BlockIdOrBuilder getIdsOrBuilder(
                int index) {
            return ids_.get(index);
        }

        public static final int TYPE_FIELD_NUMBER = 2;
        private int type_;
        /**
         * <code>.protocol.BlockInventory.Type type = 2;</code>
         */
        public int getTypeValue() {
            return type_;
        }
        /**
         * <code>.protocol.BlockInventory.Type type = 2;</code>
         */
        public com.cryptowallet.crypto.Protocol.BlockInventory.Type getType() {
            com.cryptowallet.crypto.Protocol.BlockInventory.Type result = com.cryptowallet.crypto.Protocol.BlockInventory.Type.valueOf(type_);
            return result == null ? com.cryptowallet.crypto.Protocol.BlockInventory.Type.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < ids_.size(); i++) {
                output.writeMessage(1, ids_.get(i));
            }
            if (type_ != com.cryptowallet.crypto.Protocol.BlockInventory.Type.SYNC.getNumber()) {
                output.writeEnum(2, type_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < ids_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, ids_.get(i));
            }
            if (type_ != com.cryptowallet.crypto.Protocol.BlockInventory.Type.SYNC.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, type_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.BlockInventory)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.BlockInventory other = (com.cryptowallet.crypto.Protocol.BlockInventory) obj;

            boolean result = true;
            result = result && getIdsList()
                    .equals(other.getIdsList());
            result = result && type_ == other.type_;
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getIdsCount() > 0) {
                hash = (37 * hash) + IDS_FIELD_NUMBER;
                hash = (53 * hash) + getIdsList().hashCode();
            }
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + type_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.BlockInventory parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.BlockInventory parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.BlockInventory prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         * Inventory
         * </pre>
         *
         * Protobuf type {@code protocol.BlockInventory}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.BlockInventory)
                com.cryptowallet.crypto.Protocol.BlockInventoryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockInventory_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockInventory_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.BlockInventory.class, com.cryptowallet.crypto.Protocol.BlockInventory.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.BlockInventory.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getIdsFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (idsBuilder_ == null) {
                    ids_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    idsBuilder_.clear();
                }
                type_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_BlockInventory_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.BlockInventory getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.BlockInventory.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.BlockInventory build() {
                com.cryptowallet.crypto.Protocol.BlockInventory result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.BlockInventory buildPartial() {
                com.cryptowallet.crypto.Protocol.BlockInventory result = new com.cryptowallet.crypto.Protocol.BlockInventory(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (idsBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        ids_ = java.util.Collections.unmodifiableList(ids_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.ids_ = ids_;
                } else {
                    result.ids_ = idsBuilder_.build();
                }
                result.type_ = type_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.BlockInventory) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.BlockInventory)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.BlockInventory other) {
                if (other == com.cryptowallet.crypto.Protocol.BlockInventory.getDefaultInstance()) return this;
                if (idsBuilder_ == null) {
                    if (!other.ids_.isEmpty()) {
                        if (ids_.isEmpty()) {
                            ids_ = other.ids_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureIdsIsMutable();
                            ids_.addAll(other.ids_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.ids_.isEmpty()) {
                        if (idsBuilder_.isEmpty()) {
                            idsBuilder_.dispose();
                            idsBuilder_ = null;
                            ids_ = other.ids_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            idsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getIdsFieldBuilder() : null;
                        } else {
                            idsBuilder_.addAllMessages(other.ids_);
                        }
                    }
                }
                if (other.type_ != 0) {
                    setTypeValue(other.getTypeValue());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.BlockInventory parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.BlockInventory) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private java.util.List<com.cryptowallet.crypto.Protocol.BlockInventory.BlockId> ids_ =
                    java.util.Collections.emptyList();
            private void ensureIdsIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    ids_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.BlockInventory.BlockId>(ids_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.BlockInventory.BlockId, com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder, com.cryptowallet.crypto.Protocol.BlockInventory.BlockIdOrBuilder> idsBuilder_;

            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.BlockInventory.BlockId> getIdsList() {
                if (idsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(ids_);
                } else {
                    return idsBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public int getIdsCount() {
                if (idsBuilder_ == null) {
                    return ids_.size();
                } else {
                    return idsBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockInventory.BlockId getIds(int index) {
                if (idsBuilder_ == null) {
                    return ids_.get(index);
                } else {
                    return idsBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public Builder setIds(
                    int index, com.cryptowallet.crypto.Protocol.BlockInventory.BlockId value) {
                if (idsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureIdsIsMutable();
                    ids_.set(index, value);
                    onChanged();
                } else {
                    idsBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public Builder setIds(
                    int index, com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder builderForValue) {
                if (idsBuilder_ == null) {
                    ensureIdsIsMutable();
                    ids_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    idsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public Builder addIds(com.cryptowallet.crypto.Protocol.BlockInventory.BlockId value) {
                if (idsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureIdsIsMutable();
                    ids_.add(value);
                    onChanged();
                } else {
                    idsBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public Builder addIds(
                    int index, com.cryptowallet.crypto.Protocol.BlockInventory.BlockId value) {
                if (idsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureIdsIsMutable();
                    ids_.add(index, value);
                    onChanged();
                } else {
                    idsBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public Builder addIds(
                    com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder builderForValue) {
                if (idsBuilder_ == null) {
                    ensureIdsIsMutable();
                    ids_.add(builderForValue.build());
                    onChanged();
                } else {
                    idsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public Builder addIds(
                    int index, com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder builderForValue) {
                if (idsBuilder_ == null) {
                    ensureIdsIsMutable();
                    ids_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    idsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public Builder addAllIds(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.BlockInventory.BlockId> values) {
                if (idsBuilder_ == null) {
                    ensureIdsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, ids_);
                    onChanged();
                } else {
                    idsBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public Builder clearIds() {
                if (idsBuilder_ == null) {
                    ids_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    idsBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public Builder removeIds(int index) {
                if (idsBuilder_ == null) {
                    ensureIdsIsMutable();
                    ids_.remove(index);
                    onChanged();
                } else {
                    idsBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder getIdsBuilder(
                    int index) {
                return getIdsFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockInventory.BlockIdOrBuilder getIdsOrBuilder(
                    int index) {
                if (idsBuilder_ == null) {
                    return ids_.get(index);  } else {
                    return idsBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.BlockInventory.BlockIdOrBuilder>
            getIdsOrBuilderList() {
                if (idsBuilder_ != null) {
                    return idsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(ids_);
                }
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder addIdsBuilder() {
                return getIdsFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder addIdsBuilder(
                    int index) {
                return getIdsFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder>
            getIdsBuilderList() {
                return getIdsFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.BlockInventory.BlockId, com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder, com.cryptowallet.crypto.Protocol.BlockInventory.BlockIdOrBuilder>
            getIdsFieldBuilder() {
                if (idsBuilder_ == null) {
                    idsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.BlockInventory.BlockId, com.cryptowallet.crypto.Protocol.BlockInventory.BlockId.Builder, com.cryptowallet.crypto.Protocol.BlockInventory.BlockIdOrBuilder>(
                            ids_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    ids_ = null;
                }
                return idsBuilder_;
            }

            private int type_ = 0;
            /**
             * <code>.protocol.BlockInventory.Type type = 2;</code>
             */
            public int getTypeValue() {
                return type_;
            }
            /**
             * <code>.protocol.BlockInventory.Type type = 2;</code>
             */
            public Builder setTypeValue(int value) {
                type_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.BlockInventory.Type type = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockInventory.Type getType() {
                com.cryptowallet.crypto.Protocol.BlockInventory.Type result = com.cryptowallet.crypto.Protocol.BlockInventory.Type.valueOf(type_);
                return result == null ? com.cryptowallet.crypto.Protocol.BlockInventory.Type.UNRECOGNIZED : result;
            }
            /**
             * <code>.protocol.BlockInventory.Type type = 2;</code>
             */
            public Builder setType(com.cryptowallet.crypto.Protocol.BlockInventory.Type value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                type_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.BlockInventory.Type type = 2;</code>
             */
            public Builder clearType() {

                type_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.BlockInventory)
        }

        // @@protoc_insertion_point(class_scope:protocol.BlockInventory)
        private static final com.cryptowallet.crypto.Protocol.BlockInventory DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.BlockInventory();
        }

        public static com.cryptowallet.crypto.Protocol.BlockInventory getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BlockInventory>
                PARSER = new com.google.protobuf.AbstractParser<BlockInventory>() {
            public BlockInventory parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new BlockInventory(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<BlockInventory> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<BlockInventory> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.BlockInventory getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface InventoryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Inventory)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.protocol.Inventory.InventoryType type = 1;</code>
         */
        int getTypeValue();
        /**
         * <code>.protocol.Inventory.InventoryType type = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.Inventory.InventoryType getType();

        /**
         * <code>repeated bytes ids = 2;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getIdsList();
        /**
         * <code>repeated bytes ids = 2;</code>
         */
        int getIdsCount();
        /**
         * <code>repeated bytes ids = 2;</code>
         */
        com.google.protobuf.ByteString getIds(int index);
    }
    /**
     * Protobuf type {@code protocol.Inventory}
     */
    public  static final class Inventory extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Inventory)
            InventoryOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Inventory.newBuilder() to construct.
        private Inventory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Inventory() {
            type_ = 0;
            ids_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Inventory(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();

                            type_ = rawValue;
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                ids_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            ids_.add(input.readBytes());
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    ids_ = java.util.Collections.unmodifiableList(ids_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Inventory_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Inventory_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Inventory.class, com.cryptowallet.crypto.Protocol.Inventory.Builder.class);
        }

        /**
         * Protobuf enum {@code protocol.Inventory.InventoryType}
         */
        public enum InventoryType
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>TRX = 0;</code>
             */
            TRX(0),
            /**
             * <code>BLOCK = 1;</code>
             */
            BLOCK(1),
            UNRECOGNIZED(-1),
            ;

            /**
             * <code>TRX = 0;</code>
             */
            public static final int TRX_VALUE = 0;
            /**
             * <code>BLOCK = 1;</code>
             */
            public static final int BLOCK_VALUE = 1;


            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new java.lang.IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static InventoryType valueOf(int value) {
                return forNumber(value);
            }

            public static InventoryType forNumber(int value) {
                switch (value) {
                    case 0: return TRX;
                    case 1: return BLOCK;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<InventoryType>
            internalGetValueMap() {
                return internalValueMap;
            }
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    InventoryType> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<InventoryType>() {
                        public InventoryType findValueByNumber(int number) {
                            return InventoryType.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }
            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }
            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.Inventory.getDescriptor().getEnumTypes().get(0);
            }

            private static final InventoryType[] VALUES = values();

            public static InventoryType valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private InventoryType(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:protocol.Inventory.InventoryType)
        }

        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_;
        /**
         * <code>.protocol.Inventory.InventoryType type = 1;</code>
         */
        public int getTypeValue() {
            return type_;
        }
        /**
         * <code>.protocol.Inventory.InventoryType type = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.Inventory.InventoryType getType() {
            com.cryptowallet.crypto.Protocol.Inventory.InventoryType result = com.cryptowallet.crypto.Protocol.Inventory.InventoryType.valueOf(type_);
            return result == null ? com.cryptowallet.crypto.Protocol.Inventory.InventoryType.UNRECOGNIZED : result;
        }

        public static final int IDS_FIELD_NUMBER = 2;
        private java.util.List<com.google.protobuf.ByteString> ids_;
        /**
         * <code>repeated bytes ids = 2;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
        getIdsList() {
            return ids_;
        }
        /**
         * <code>repeated bytes ids = 2;</code>
         */
        public int getIdsCount() {
            return ids_.size();
        }
        /**
         * <code>repeated bytes ids = 2;</code>
         */
        public com.google.protobuf.ByteString getIds(int index) {
            return ids_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (type_ != com.cryptowallet.crypto.Protocol.Inventory.InventoryType.TRX.getNumber()) {
                output.writeEnum(1, type_);
            }
            for (int i = 0; i < ids_.size(); i++) {
                output.writeBytes(2, ids_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (type_ != com.cryptowallet.crypto.Protocol.Inventory.InventoryType.TRX.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, type_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < ids_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(ids_.get(i));
                }
                size += dataSize;
                size += 1 * getIdsList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Inventory)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Inventory other = (com.cryptowallet.crypto.Protocol.Inventory) obj;

            boolean result = true;
            result = result && type_ == other.type_;
            result = result && getIdsList()
                    .equals(other.getIdsList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + type_;
            if (getIdsCount() > 0) {
                hash = (37 * hash) + IDS_FIELD_NUMBER;
                hash = (53 * hash) + getIdsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Inventory parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Inventory parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Inventory prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.Inventory}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Inventory)
                com.cryptowallet.crypto.Protocol.InventoryOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Inventory_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Inventory_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Inventory.class, com.cryptowallet.crypto.Protocol.Inventory.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Inventory.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                type_ = 0;

                ids_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Inventory_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Inventory getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Inventory.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Inventory build() {
                com.cryptowallet.crypto.Protocol.Inventory result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Inventory buildPartial() {
                com.cryptowallet.crypto.Protocol.Inventory result = new com.cryptowallet.crypto.Protocol.Inventory(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.type_ = type_;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    ids_ = java.util.Collections.unmodifiableList(ids_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.ids_ = ids_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Inventory) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Inventory)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Inventory other) {
                if (other == com.cryptowallet.crypto.Protocol.Inventory.getDefaultInstance()) return this;
                if (other.type_ != 0) {
                    setTypeValue(other.getTypeValue());
                }
                if (!other.ids_.isEmpty()) {
                    if (ids_.isEmpty()) {
                        ids_ = other.ids_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureIdsIsMutable();
                        ids_.addAll(other.ids_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Inventory parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Inventory) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private int type_ = 0;
            /**
             * <code>.protocol.Inventory.InventoryType type = 1;</code>
             */
            public int getTypeValue() {
                return type_;
            }
            /**
             * <code>.protocol.Inventory.InventoryType type = 1;</code>
             */
            public Builder setTypeValue(int value) {
                type_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.Inventory.InventoryType type = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Inventory.InventoryType getType() {
                com.cryptowallet.crypto.Protocol.Inventory.InventoryType result = com.cryptowallet.crypto.Protocol.Inventory.InventoryType.valueOf(type_);
                return result == null ? com.cryptowallet.crypto.Protocol.Inventory.InventoryType.UNRECOGNIZED : result;
            }
            /**
             * <code>.protocol.Inventory.InventoryType type = 1;</code>
             */
            public Builder setType(com.cryptowallet.crypto.Protocol.Inventory.InventoryType value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                type_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.Inventory.InventoryType type = 1;</code>
             */
            public Builder clearType() {

                type_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<com.google.protobuf.ByteString> ids_ = java.util.Collections.emptyList();
            private void ensureIdsIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    ids_ = new java.util.ArrayList<com.google.protobuf.ByteString>(ids_);
                    bitField0_ |= 0x00000002;
                }
            }
            /**
             * <code>repeated bytes ids = 2;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getIdsList() {
                return java.util.Collections.unmodifiableList(ids_);
            }
            /**
             * <code>repeated bytes ids = 2;</code>
             */
            public int getIdsCount() {
                return ids_.size();
            }
            /**
             * <code>repeated bytes ids = 2;</code>
             */
            public com.google.protobuf.ByteString getIds(int index) {
                return ids_.get(index);
            }
            /**
             * <code>repeated bytes ids = 2;</code>
             */
            public Builder setIds(
                    int index, com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureIdsIsMutable();
                ids_.set(index, value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes ids = 2;</code>
             */
            public Builder addIds(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureIdsIsMutable();
                ids_.add(value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes ids = 2;</code>
             */
            public Builder addAllIds(
                    java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
                ensureIdsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, ids_);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes ids = 2;</code>
             */
            public Builder clearIds() {
                ids_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Inventory)
        }

        // @@protoc_insertion_point(class_scope:protocol.Inventory)
        private static final com.cryptowallet.crypto.Protocol.Inventory DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Inventory();
        }

        public static com.cryptowallet.crypto.Protocol.Inventory getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Inventory>
                PARSER = new com.google.protobuf.AbstractParser<Inventory>() {
            public Inventory parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Inventory(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Inventory> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Inventory> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Inventory getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ItemsOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.Items)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.protocol.Items.ItemType type = 1;</code>
         */
        int getTypeValue();
        /**
         * <code>.protocol.Items.ItemType type = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.Items.ItemType getType();

        /**
         * <code>repeated .protocol.Block blocks = 2;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.Block>
        getBlocksList();
        /**
         * <code>repeated .protocol.Block blocks = 2;</code>
         */
        com.cryptowallet.crypto.Protocol.Block getBlocks(int index);
        /**
         * <code>repeated .protocol.Block blocks = 2;</code>
         */
        int getBlocksCount();
        /**
         * <code>repeated .protocol.Block blocks = 2;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.BlockOrBuilder>
        getBlocksOrBuilderList();
        /**
         * <code>repeated .protocol.Block blocks = 2;</code>
         */
        com.cryptowallet.crypto.Protocol.BlockOrBuilder getBlocksOrBuilder(
                int index);

        /**
         * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.BlockHeader>
        getBlockHeadersList();
        /**
         * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
         */
        com.cryptowallet.crypto.Protocol.BlockHeader getBlockHeaders(int index);
        /**
         * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
         */
        int getBlockHeadersCount();
        /**
         * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder>
        getBlockHeadersOrBuilderList();
        /**
         * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
         */
        com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder getBlockHeadersOrBuilder(
                int index);

        /**
         * <code>repeated .protocol.Transaction transactions = 4;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.Transaction>
        getTransactionsList();
        /**
         * <code>repeated .protocol.Transaction transactions = 4;</code>
         */
        com.cryptowallet.crypto.Protocol.Transaction getTransactions(int index);
        /**
         * <code>repeated .protocol.Transaction transactions = 4;</code>
         */
        int getTransactionsCount();
        /**
         * <code>repeated .protocol.Transaction transactions = 4;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
        getTransactionsOrBuilderList();
        /**
         * <code>repeated .protocol.Transaction transactions = 4;</code>
         */
        com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionsOrBuilder(
                int index);
    }
    /**
     * Protobuf type {@code protocol.Items}
     */
    public  static final class Items extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.Items)
            ItemsOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use Items.newBuilder() to construct.
        private Items(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Items() {
            type_ = 0;
            blocks_ = java.util.Collections.emptyList();
            blockHeaders_ = java.util.Collections.emptyList();
            transactions_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private Items(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();

                            type_ = rawValue;
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                blocks_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Block>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            blocks_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.Block.parser(), extensionRegistry));
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                blockHeaders_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.BlockHeader>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            blockHeaders_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.BlockHeader.parser(), extensionRegistry));
                            break;
                        }
                        case 34: {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                transactions_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Transaction>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            transactions_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.Transaction.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    blocks_ = java.util.Collections.unmodifiableList(blocks_);
                }
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    blockHeaders_ = java.util.Collections.unmodifiableList(blockHeaders_);
                }
                if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    transactions_ = java.util.Collections.unmodifiableList(transactions_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Items_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_Items_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.Items.class, com.cryptowallet.crypto.Protocol.Items.Builder.class);
        }

        /**
         * Protobuf enum {@code protocol.Items.ItemType}
         */
        public enum ItemType
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>ERR = 0;</code>
             */
            ERR(0),
            /**
             * <code>TRX = 1;</code>
             */
            TRX(1),
            /**
             * <code>BLOCK = 2;</code>
             */
            BLOCK(2),
            /**
             * <code>BLOCKHEADER = 3;</code>
             */
            BLOCKHEADER(3),
            UNRECOGNIZED(-1),
            ;

            /**
             * <code>ERR = 0;</code>
             */
            public static final int ERR_VALUE = 0;
            /**
             * <code>TRX = 1;</code>
             */
            public static final int TRX_VALUE = 1;
            /**
             * <code>BLOCK = 2;</code>
             */
            public static final int BLOCK_VALUE = 2;
            /**
             * <code>BLOCKHEADER = 3;</code>
             */
            public static final int BLOCKHEADER_VALUE = 3;


            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new java.lang.IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static ItemType valueOf(int value) {
                return forNumber(value);
            }

            public static ItemType forNumber(int value) {
                switch (value) {
                    case 0: return ERR;
                    case 1: return TRX;
                    case 2: return BLOCK;
                    case 3: return BLOCKHEADER;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<ItemType>
            internalGetValueMap() {
                return internalValueMap;
            }
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    ItemType> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<ItemType>() {
                        public ItemType findValueByNumber(int number) {
                            return ItemType.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }
            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }
            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.Items.getDescriptor().getEnumTypes().get(0);
            }

            private static final ItemType[] VALUES = values();

            public static ItemType valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private ItemType(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:protocol.Items.ItemType)
        }

        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_;
        /**
         * <code>.protocol.Items.ItemType type = 1;</code>
         */
        public int getTypeValue() {
            return type_;
        }
        /**
         * <code>.protocol.Items.ItemType type = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.Items.ItemType getType() {
            com.cryptowallet.crypto.Protocol.Items.ItemType result = com.cryptowallet.crypto.Protocol.Items.ItemType.valueOf(type_);
            return result == null ? com.cryptowallet.crypto.Protocol.Items.ItemType.UNRECOGNIZED : result;
        }

        public static final int BLOCKS_FIELD_NUMBER = 2;
        private java.util.List<com.cryptowallet.crypto.Protocol.Block> blocks_;
        /**
         * <code>repeated .protocol.Block blocks = 2;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.Block> getBlocksList() {
            return blocks_;
        }
        /**
         * <code>repeated .protocol.Block blocks = 2;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.BlockOrBuilder>
        getBlocksOrBuilderList() {
            return blocks_;
        }
        /**
         * <code>repeated .protocol.Block blocks = 2;</code>
         */
        public int getBlocksCount() {
            return blocks_.size();
        }
        /**
         * <code>repeated .protocol.Block blocks = 2;</code>
         */
        public com.cryptowallet.crypto.Protocol.Block getBlocks(int index) {
            return blocks_.get(index);
        }
        /**
         * <code>repeated .protocol.Block blocks = 2;</code>
         */
        public com.cryptowallet.crypto.Protocol.BlockOrBuilder getBlocksOrBuilder(
                int index) {
            return blocks_.get(index);
        }

        public static final int BLOCK_HEADERS_FIELD_NUMBER = 3;
        private java.util.List<com.cryptowallet.crypto.Protocol.BlockHeader> blockHeaders_;
        /**
         * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.BlockHeader> getBlockHeadersList() {
            return blockHeaders_;
        }
        /**
         * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder>
        getBlockHeadersOrBuilderList() {
            return blockHeaders_;
        }
        /**
         * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
         */
        public int getBlockHeadersCount() {
            return blockHeaders_.size();
        }
        /**
         * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
         */
        public com.cryptowallet.crypto.Protocol.BlockHeader getBlockHeaders(int index) {
            return blockHeaders_.get(index);
        }
        /**
         * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
         */
        public com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder getBlockHeadersOrBuilder(
                int index) {
            return blockHeaders_.get(index);
        }

        public static final int TRANSACTIONS_FIELD_NUMBER = 4;
        private java.util.List<com.cryptowallet.crypto.Protocol.Transaction> transactions_;
        /**
         * <code>repeated .protocol.Transaction transactions = 4;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.Transaction> getTransactionsList() {
            return transactions_;
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 4;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
        getTransactionsOrBuilderList() {
            return transactions_;
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 4;</code>
         */
        public int getTransactionsCount() {
            return transactions_.size();
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 4;</code>
         */
        public com.cryptowallet.crypto.Protocol.Transaction getTransactions(int index) {
            return transactions_.get(index);
        }
        /**
         * <code>repeated .protocol.Transaction transactions = 4;</code>
         */
        public com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionsOrBuilder(
                int index) {
            return transactions_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (type_ != com.cryptowallet.crypto.Protocol.Items.ItemType.ERR.getNumber()) {
                output.writeEnum(1, type_);
            }
            for (int i = 0; i < blocks_.size(); i++) {
                output.writeMessage(2, blocks_.get(i));
            }
            for (int i = 0; i < blockHeaders_.size(); i++) {
                output.writeMessage(3, blockHeaders_.get(i));
            }
            for (int i = 0; i < transactions_.size(); i++) {
                output.writeMessage(4, transactions_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (type_ != com.cryptowallet.crypto.Protocol.Items.ItemType.ERR.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, type_);
            }
            for (int i = 0; i < blocks_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, blocks_.get(i));
            }
            for (int i = 0; i < blockHeaders_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, blockHeaders_.get(i));
            }
            for (int i = 0; i < transactions_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, transactions_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.Items)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.Items other = (com.cryptowallet.crypto.Protocol.Items) obj;

            boolean result = true;
            result = result && type_ == other.type_;
            result = result && getBlocksList()
                    .equals(other.getBlocksList());
            result = result && getBlockHeadersList()
                    .equals(other.getBlockHeadersList());
            result = result && getTransactionsList()
                    .equals(other.getTransactionsList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + type_;
            if (getBlocksCount() > 0) {
                hash = (37 * hash) + BLOCKS_FIELD_NUMBER;
                hash = (53 * hash) + getBlocksList().hashCode();
            }
            if (getBlockHeadersCount() > 0) {
                hash = (37 * hash) + BLOCK_HEADERS_FIELD_NUMBER;
                hash = (53 * hash) + getBlockHeadersList().hashCode();
            }
            if (getTransactionsCount() > 0) {
                hash = (37 * hash) + TRANSACTIONS_FIELD_NUMBER;
                hash = (53 * hash) + getTransactionsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.Items parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.Items parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.Items prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.Items}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.Items)
                com.cryptowallet.crypto.Protocol.ItemsOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Items_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Items_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.Items.class, com.cryptowallet.crypto.Protocol.Items.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.Items.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getBlocksFieldBuilder();
                    getBlockHeadersFieldBuilder();
                    getTransactionsFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                type_ = 0;

                if (blocksBuilder_ == null) {
                    blocks_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    blocksBuilder_.clear();
                }
                if (blockHeadersBuilder_ == null) {
                    blockHeaders_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    blockHeadersBuilder_.clear();
                }
                if (transactionsBuilder_ == null) {
                    transactions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                    transactionsBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_Items_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.Items getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.Items.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.Items build() {
                com.cryptowallet.crypto.Protocol.Items result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.Items buildPartial() {
                com.cryptowallet.crypto.Protocol.Items result = new com.cryptowallet.crypto.Protocol.Items(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.type_ = type_;
                if (blocksBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        blocks_ = java.util.Collections.unmodifiableList(blocks_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.blocks_ = blocks_;
                } else {
                    result.blocks_ = blocksBuilder_.build();
                }
                if (blockHeadersBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004)) {
                        blockHeaders_ = java.util.Collections.unmodifiableList(blockHeaders_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.blockHeaders_ = blockHeaders_;
                } else {
                    result.blockHeaders_ = blockHeadersBuilder_.build();
                }
                if (transactionsBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008)) {
                        transactions_ = java.util.Collections.unmodifiableList(transactions_);
                        bitField0_ = (bitField0_ & ~0x00000008);
                    }
                    result.transactions_ = transactions_;
                } else {
                    result.transactions_ = transactionsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.Items) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.Items)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.Items other) {
                if (other == com.cryptowallet.crypto.Protocol.Items.getDefaultInstance()) return this;
                if (other.type_ != 0) {
                    setTypeValue(other.getTypeValue());
                }
                if (blocksBuilder_ == null) {
                    if (!other.blocks_.isEmpty()) {
                        if (blocks_.isEmpty()) {
                            blocks_ = other.blocks_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureBlocksIsMutable();
                            blocks_.addAll(other.blocks_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.blocks_.isEmpty()) {
                        if (blocksBuilder_.isEmpty()) {
                            blocksBuilder_.dispose();
                            blocksBuilder_ = null;
                            blocks_ = other.blocks_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            blocksBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getBlocksFieldBuilder() : null;
                        } else {
                            blocksBuilder_.addAllMessages(other.blocks_);
                        }
                    }
                }
                if (blockHeadersBuilder_ == null) {
                    if (!other.blockHeaders_.isEmpty()) {
                        if (blockHeaders_.isEmpty()) {
                            blockHeaders_ = other.blockHeaders_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureBlockHeadersIsMutable();
                            blockHeaders_.addAll(other.blockHeaders_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.blockHeaders_.isEmpty()) {
                        if (blockHeadersBuilder_.isEmpty()) {
                            blockHeadersBuilder_.dispose();
                            blockHeadersBuilder_ = null;
                            blockHeaders_ = other.blockHeaders_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            blockHeadersBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getBlockHeadersFieldBuilder() : null;
                        } else {
                            blockHeadersBuilder_.addAllMessages(other.blockHeaders_);
                        }
                    }
                }
                if (transactionsBuilder_ == null) {
                    if (!other.transactions_.isEmpty()) {
                        if (transactions_.isEmpty()) {
                            transactions_ = other.transactions_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                        } else {
                            ensureTransactionsIsMutable();
                            transactions_.addAll(other.transactions_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.transactions_.isEmpty()) {
                        if (transactionsBuilder_.isEmpty()) {
                            transactionsBuilder_.dispose();
                            transactionsBuilder_ = null;
                            transactions_ = other.transactions_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                            transactionsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getTransactionsFieldBuilder() : null;
                        } else {
                            transactionsBuilder_.addAllMessages(other.transactions_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.Items parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.Items) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private int type_ = 0;
            /**
             * <code>.protocol.Items.ItemType type = 1;</code>
             */
            public int getTypeValue() {
                return type_;
            }
            /**
             * <code>.protocol.Items.ItemType type = 1;</code>
             */
            public Builder setTypeValue(int value) {
                type_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.Items.ItemType type = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.Items.ItemType getType() {
                com.cryptowallet.crypto.Protocol.Items.ItemType result = com.cryptowallet.crypto.Protocol.Items.ItemType.valueOf(type_);
                return result == null ? com.cryptowallet.crypto.Protocol.Items.ItemType.UNRECOGNIZED : result;
            }
            /**
             * <code>.protocol.Items.ItemType type = 1;</code>
             */
            public Builder setType(com.cryptowallet.crypto.Protocol.Items.ItemType value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                type_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.Items.ItemType type = 1;</code>
             */
            public Builder clearType() {

                type_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.Block> blocks_ =
                    java.util.Collections.emptyList();
            private void ensureBlocksIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    blocks_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Block>(blocks_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Block, com.cryptowallet.crypto.Protocol.Block.Builder, com.cryptowallet.crypto.Protocol.BlockOrBuilder> blocksBuilder_;

            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Block> getBlocksList() {
                if (blocksBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(blocks_);
                } else {
                    return blocksBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public int getBlocksCount() {
                if (blocksBuilder_ == null) {
                    return blocks_.size();
                } else {
                    return blocksBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Block getBlocks(int index) {
                if (blocksBuilder_ == null) {
                    return blocks_.get(index);
                } else {
                    return blocksBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public Builder setBlocks(
                    int index, com.cryptowallet.crypto.Protocol.Block value) {
                if (blocksBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBlocksIsMutable();
                    blocks_.set(index, value);
                    onChanged();
                } else {
                    blocksBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public Builder setBlocks(
                    int index, com.cryptowallet.crypto.Protocol.Block.Builder builderForValue) {
                if (blocksBuilder_ == null) {
                    ensureBlocksIsMutable();
                    blocks_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    blocksBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public Builder addBlocks(com.cryptowallet.crypto.Protocol.Block value) {
                if (blocksBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBlocksIsMutable();
                    blocks_.add(value);
                    onChanged();
                } else {
                    blocksBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public Builder addBlocks(
                    int index, com.cryptowallet.crypto.Protocol.Block value) {
                if (blocksBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBlocksIsMutable();
                    blocks_.add(index, value);
                    onChanged();
                } else {
                    blocksBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public Builder addBlocks(
                    com.cryptowallet.crypto.Protocol.Block.Builder builderForValue) {
                if (blocksBuilder_ == null) {
                    ensureBlocksIsMutable();
                    blocks_.add(builderForValue.build());
                    onChanged();
                } else {
                    blocksBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public Builder addBlocks(
                    int index, com.cryptowallet.crypto.Protocol.Block.Builder builderForValue) {
                if (blocksBuilder_ == null) {
                    ensureBlocksIsMutable();
                    blocks_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    blocksBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public Builder addAllBlocks(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Block> values) {
                if (blocksBuilder_ == null) {
                    ensureBlocksIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, blocks_);
                    onChanged();
                } else {
                    blocksBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public Builder clearBlocks() {
                if (blocksBuilder_ == null) {
                    blocks_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    blocksBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public Builder removeBlocks(int index) {
                if (blocksBuilder_ == null) {
                    ensureBlocksIsMutable();
                    blocks_.remove(index);
                    onChanged();
                } else {
                    blocksBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Block.Builder getBlocksBuilder(
                    int index) {
                return getBlocksFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockOrBuilder getBlocksOrBuilder(
                    int index) {
                if (blocksBuilder_ == null) {
                    return blocks_.get(index);  } else {
                    return blocksBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.BlockOrBuilder>
            getBlocksOrBuilderList() {
                if (blocksBuilder_ != null) {
                    return blocksBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(blocks_);
                }
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Block.Builder addBlocksBuilder() {
                return getBlocksFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.Block.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public com.cryptowallet.crypto.Protocol.Block.Builder addBlocksBuilder(
                    int index) {
                return getBlocksFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.Block.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Block blocks = 2;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Block.Builder>
            getBlocksBuilderList() {
                return getBlocksFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Block, com.cryptowallet.crypto.Protocol.Block.Builder, com.cryptowallet.crypto.Protocol.BlockOrBuilder>
            getBlocksFieldBuilder() {
                if (blocksBuilder_ == null) {
                    blocksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Block, com.cryptowallet.crypto.Protocol.Block.Builder, com.cryptowallet.crypto.Protocol.BlockOrBuilder>(
                            blocks_,
                            ((bitField0_ & 0x00000002) == 0x00000002),
                            getParentForChildren(),
                            isClean());
                    blocks_ = null;
                }
                return blocksBuilder_;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.BlockHeader> blockHeaders_ =
                    java.util.Collections.emptyList();
            private void ensureBlockHeadersIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    blockHeaders_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.BlockHeader>(blockHeaders_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.BlockHeader, com.cryptowallet.crypto.Protocol.BlockHeader.Builder, com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder> blockHeadersBuilder_;

            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.BlockHeader> getBlockHeadersList() {
                if (blockHeadersBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(blockHeaders_);
                } else {
                    return blockHeadersBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public int getBlockHeadersCount() {
                if (blockHeadersBuilder_ == null) {
                    return blockHeaders_.size();
                } else {
                    return blockHeadersBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeader getBlockHeaders(int index) {
                if (blockHeadersBuilder_ == null) {
                    return blockHeaders_.get(index);
                } else {
                    return blockHeadersBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public Builder setBlockHeaders(
                    int index, com.cryptowallet.crypto.Protocol.BlockHeader value) {
                if (blockHeadersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBlockHeadersIsMutable();
                    blockHeaders_.set(index, value);
                    onChanged();
                } else {
                    blockHeadersBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public Builder setBlockHeaders(
                    int index, com.cryptowallet.crypto.Protocol.BlockHeader.Builder builderForValue) {
                if (blockHeadersBuilder_ == null) {
                    ensureBlockHeadersIsMutable();
                    blockHeaders_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    blockHeadersBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public Builder addBlockHeaders(com.cryptowallet.crypto.Protocol.BlockHeader value) {
                if (blockHeadersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBlockHeadersIsMutable();
                    blockHeaders_.add(value);
                    onChanged();
                } else {
                    blockHeadersBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public Builder addBlockHeaders(
                    int index, com.cryptowallet.crypto.Protocol.BlockHeader value) {
                if (blockHeadersBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureBlockHeadersIsMutable();
                    blockHeaders_.add(index, value);
                    onChanged();
                } else {
                    blockHeadersBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public Builder addBlockHeaders(
                    com.cryptowallet.crypto.Protocol.BlockHeader.Builder builderForValue) {
                if (blockHeadersBuilder_ == null) {
                    ensureBlockHeadersIsMutable();
                    blockHeaders_.add(builderForValue.build());
                    onChanged();
                } else {
                    blockHeadersBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public Builder addBlockHeaders(
                    int index, com.cryptowallet.crypto.Protocol.BlockHeader.Builder builderForValue) {
                if (blockHeadersBuilder_ == null) {
                    ensureBlockHeadersIsMutable();
                    blockHeaders_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    blockHeadersBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public Builder addAllBlockHeaders(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.BlockHeader> values) {
                if (blockHeadersBuilder_ == null) {
                    ensureBlockHeadersIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, blockHeaders_);
                    onChanged();
                } else {
                    blockHeadersBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public Builder clearBlockHeaders() {
                if (blockHeadersBuilder_ == null) {
                    blockHeaders_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    blockHeadersBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public Builder removeBlockHeaders(int index) {
                if (blockHeadersBuilder_ == null) {
                    ensureBlockHeadersIsMutable();
                    blockHeaders_.remove(index);
                    onChanged();
                } else {
                    blockHeadersBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeader.Builder getBlockHeadersBuilder(
                    int index) {
                return getBlockHeadersFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder getBlockHeadersOrBuilder(
                    int index) {
                if (blockHeadersBuilder_ == null) {
                    return blockHeaders_.get(index);  } else {
                    return blockHeadersBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder>
            getBlockHeadersOrBuilderList() {
                if (blockHeadersBuilder_ != null) {
                    return blockHeadersBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(blockHeaders_);
                }
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeader.Builder addBlockHeadersBuilder() {
                return getBlockHeadersFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.BlockHeader.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.BlockHeader.Builder addBlockHeadersBuilder(
                    int index) {
                return getBlockHeadersFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.BlockHeader.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.BlockHeader block_headers = 3;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.BlockHeader.Builder>
            getBlockHeadersBuilderList() {
                return getBlockHeadersFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.BlockHeader, com.cryptowallet.crypto.Protocol.BlockHeader.Builder, com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder>
            getBlockHeadersFieldBuilder() {
                if (blockHeadersBuilder_ == null) {
                    blockHeadersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.BlockHeader, com.cryptowallet.crypto.Protocol.BlockHeader.Builder, com.cryptowallet.crypto.Protocol.BlockHeaderOrBuilder>(
                            blockHeaders_,
                            ((bitField0_ & 0x00000004) == 0x00000004),
                            getParentForChildren(),
                            isClean());
                    blockHeaders_ = null;
                }
                return blockHeadersBuilder_;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.Transaction> transactions_ =
                    java.util.Collections.emptyList();
            private void ensureTransactionsIsMutable() {
                if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                    transactions_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.Transaction>(transactions_);
                    bitField0_ |= 0x00000008;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder> transactionsBuilder_;

            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Transaction> getTransactionsList() {
                if (transactionsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(transactions_);
                } else {
                    return transactionsBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public int getTransactionsCount() {
                if (transactionsBuilder_ == null) {
                    return transactions_.size();
                } else {
                    return transactionsBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction getTransactions(int index) {
                if (transactionsBuilder_ == null) {
                    return transactions_.get(index);
                } else {
                    return transactionsBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public Builder setTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionsIsMutable();
                    transactions_.set(index, value);
                    onChanged();
                } else {
                    transactionsBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public Builder setTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction.Builder builderForValue) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    transactionsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public Builder addTransactions(com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionsIsMutable();
                    transactions_.add(value);
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public Builder addTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction value) {
                if (transactionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTransactionsIsMutable();
                    transactions_.add(index, value);
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public Builder addTransactions(
                    com.cryptowallet.crypto.Protocol.Transaction.Builder builderForValue) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.add(builderForValue.build());
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public Builder addTransactions(
                    int index, com.cryptowallet.crypto.Protocol.Transaction.Builder builderForValue) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    transactionsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public Builder addAllTransactions(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.Transaction> values) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, transactions_);
                    onChanged();
                } else {
                    transactionsBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public Builder clearTransactions() {
                if (transactionsBuilder_ == null) {
                    transactions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                    onChanged();
                } else {
                    transactionsBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public Builder removeTransactions(int index) {
                if (transactionsBuilder_ == null) {
                    ensureTransactionsIsMutable();
                    transactions_.remove(index);
                    onChanged();
                } else {
                    transactionsBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Builder getTransactionsBuilder(
                    int index) {
                return getTransactionsFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.TransactionOrBuilder getTransactionsOrBuilder(
                    int index) {
                if (transactionsBuilder_ == null) {
                    return transactions_.get(index);  } else {
                    return transactionsBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
            getTransactionsOrBuilderList() {
                if (transactionsBuilder_ != null) {
                    return transactionsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(transactions_);
                }
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Builder addTransactionsBuilder() {
                return getTransactionsFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.Transaction.Builder addTransactionsBuilder(
                    int index) {
                return getTransactionsFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.Transaction.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.Transaction transactions = 4;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.Transaction.Builder>
            getTransactionsBuilderList() {
                return getTransactionsFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder>
            getTransactionsFieldBuilder() {
                if (transactionsBuilder_ == null) {
                    transactionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.Transaction, com.cryptowallet.crypto.Protocol.Transaction.Builder, com.cryptowallet.crypto.Protocol.TransactionOrBuilder>(
                            transactions_,
                            ((bitField0_ & 0x00000008) == 0x00000008),
                            getParentForChildren(),
                            isClean());
                    transactions_ = null;
                }
                return transactionsBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.Items)
        }

        // @@protoc_insertion_point(class_scope:protocol.Items)
        private static final com.cryptowallet.crypto.Protocol.Items DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.Items();
        }

        public static com.cryptowallet.crypto.Protocol.Items getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Items>
                PARSER = new com.google.protobuf.AbstractParser<Items>() {
            public Items parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Items(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Items> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Items> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.Items getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface DynamicPropertiesOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.DynamicProperties)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>int64 last_solidity_block_num = 1;</code>
         */
        long getLastSolidityBlockNum();
    }
    /**
     * <pre>
     * DynamicProperties
     * </pre>
     *
     * Protobuf type {@code protocol.DynamicProperties}
     */
    public  static final class DynamicProperties extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.DynamicProperties)
            DynamicPropertiesOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use DynamicProperties.newBuilder() to construct.
        private DynamicProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private DynamicProperties() {
            lastSolidityBlockNum_ = 0L;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private DynamicProperties(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            lastSolidityBlockNum_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_DynamicProperties_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_DynamicProperties_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.DynamicProperties.class, com.cryptowallet.crypto.Protocol.DynamicProperties.Builder.class);
        }

        public static final int LAST_SOLIDITY_BLOCK_NUM_FIELD_NUMBER = 1;
        private long lastSolidityBlockNum_;
        /**
         * <code>int64 last_solidity_block_num = 1;</code>
         */
        public long getLastSolidityBlockNum() {
            return lastSolidityBlockNum_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (lastSolidityBlockNum_ != 0L) {
                output.writeInt64(1, lastSolidityBlockNum_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (lastSolidityBlockNum_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, lastSolidityBlockNum_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.DynamicProperties)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.DynamicProperties other = (com.cryptowallet.crypto.Protocol.DynamicProperties) obj;

            boolean result = true;
            result = result && (getLastSolidityBlockNum()
                    == other.getLastSolidityBlockNum());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + LAST_SOLIDITY_BLOCK_NUM_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getLastSolidityBlockNum());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DynamicProperties parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.DynamicProperties prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         * DynamicProperties
         * </pre>
         *
         * Protobuf type {@code protocol.DynamicProperties}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.DynamicProperties)
                com.cryptowallet.crypto.Protocol.DynamicPropertiesOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DynamicProperties_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DynamicProperties_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.DynamicProperties.class, com.cryptowallet.crypto.Protocol.DynamicProperties.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.DynamicProperties.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                lastSolidityBlockNum_ = 0L;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DynamicProperties_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.DynamicProperties getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.DynamicProperties.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.DynamicProperties build() {
                com.cryptowallet.crypto.Protocol.DynamicProperties result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.DynamicProperties buildPartial() {
                com.cryptowallet.crypto.Protocol.DynamicProperties result = new com.cryptowallet.crypto.Protocol.DynamicProperties(this);
                result.lastSolidityBlockNum_ = lastSolidityBlockNum_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.DynamicProperties) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.DynamicProperties)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.DynamicProperties other) {
                if (other == com.cryptowallet.crypto.Protocol.DynamicProperties.getDefaultInstance()) return this;
                if (other.getLastSolidityBlockNum() != 0L) {
                    setLastSolidityBlockNum(other.getLastSolidityBlockNum());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.DynamicProperties parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.DynamicProperties) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private long lastSolidityBlockNum_ ;
            /**
             * <code>int64 last_solidity_block_num = 1;</code>
             */
            public long getLastSolidityBlockNum() {
                return lastSolidityBlockNum_;
            }
            /**
             * <code>int64 last_solidity_block_num = 1;</code>
             */
            public Builder setLastSolidityBlockNum(long value) {

                lastSolidityBlockNum_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 last_solidity_block_num = 1;</code>
             */
            public Builder clearLastSolidityBlockNum() {

                lastSolidityBlockNum_ = 0L;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.DynamicProperties)
        }

        // @@protoc_insertion_point(class_scope:protocol.DynamicProperties)
        private static final com.cryptowallet.crypto.Protocol.DynamicProperties DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.DynamicProperties();
        }

        public static com.cryptowallet.crypto.Protocol.DynamicProperties getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<DynamicProperties>
                PARSER = new com.google.protobuf.AbstractParser<DynamicProperties>() {
            public DynamicProperties parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new DynamicProperties(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<DynamicProperties> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<DynamicProperties> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.DynamicProperties getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface DisconnectMessageOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.DisconnectMessage)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.protocol.ReasonCode reason = 1;</code>
         */
        int getReasonValue();
        /**
         * <code>.protocol.ReasonCode reason = 1;</code>
         */
        com.cryptowallet.crypto.Protocol.ReasonCode getReason();
    }
    /**
     * Protobuf type {@code protocol.DisconnectMessage}
     */
    public  static final class DisconnectMessage extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.DisconnectMessage)
            DisconnectMessageOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use DisconnectMessage.newBuilder() to construct.
        private DisconnectMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private DisconnectMessage() {
            reason_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private DisconnectMessage(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();

                            reason_ = rawValue;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_DisconnectMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_DisconnectMessage_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.DisconnectMessage.class, com.cryptowallet.crypto.Protocol.DisconnectMessage.Builder.class);
        }

        public static final int REASON_FIELD_NUMBER = 1;
        private int reason_;
        /**
         * <code>.protocol.ReasonCode reason = 1;</code>
         */
        public int getReasonValue() {
            return reason_;
        }
        /**
         * <code>.protocol.ReasonCode reason = 1;</code>
         */
        public com.cryptowallet.crypto.Protocol.ReasonCode getReason() {
            com.cryptowallet.crypto.Protocol.ReasonCode result = com.cryptowallet.crypto.Protocol.ReasonCode.valueOf(reason_);
            return result == null ? com.cryptowallet.crypto.Protocol.ReasonCode.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (reason_ != com.cryptowallet.crypto.Protocol.ReasonCode.REQUESTED.getNumber()) {
                output.writeEnum(1, reason_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (reason_ != com.cryptowallet.crypto.Protocol.ReasonCode.REQUESTED.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, reason_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.DisconnectMessage)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.DisconnectMessage other = (com.cryptowallet.crypto.Protocol.DisconnectMessage) obj;

            boolean result = true;
            result = result && reason_ == other.reason_;
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + REASON_FIELD_NUMBER;
            hash = (53 * hash) + reason_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DisconnectMessage parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.DisconnectMessage prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.DisconnectMessage}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.DisconnectMessage)
                com.cryptowallet.crypto.Protocol.DisconnectMessageOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DisconnectMessage_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DisconnectMessage_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.DisconnectMessage.class, com.cryptowallet.crypto.Protocol.DisconnectMessage.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.DisconnectMessage.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                reason_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DisconnectMessage_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.DisconnectMessage getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.DisconnectMessage.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.DisconnectMessage build() {
                com.cryptowallet.crypto.Protocol.DisconnectMessage result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.DisconnectMessage buildPartial() {
                com.cryptowallet.crypto.Protocol.DisconnectMessage result = new com.cryptowallet.crypto.Protocol.DisconnectMessage(this);
                result.reason_ = reason_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.DisconnectMessage) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.DisconnectMessage)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.DisconnectMessage other) {
                if (other == com.cryptowallet.crypto.Protocol.DisconnectMessage.getDefaultInstance()) return this;
                if (other.reason_ != 0) {
                    setReasonValue(other.getReasonValue());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.DisconnectMessage parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.DisconnectMessage) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int reason_ = 0;
            /**
             * <code>.protocol.ReasonCode reason = 1;</code>
             */
            public int getReasonValue() {
                return reason_;
            }
            /**
             * <code>.protocol.ReasonCode reason = 1;</code>
             */
            public Builder setReasonValue(int value) {
                reason_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.ReasonCode reason = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.ReasonCode getReason() {
                com.cryptowallet.crypto.Protocol.ReasonCode result = com.cryptowallet.crypto.Protocol.ReasonCode.valueOf(reason_);
                return result == null ? com.cryptowallet.crypto.Protocol.ReasonCode.UNRECOGNIZED : result;
            }
            /**
             * <code>.protocol.ReasonCode reason = 1;</code>
             */
            public Builder setReason(com.cryptowallet.crypto.Protocol.ReasonCode value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                reason_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>.protocol.ReasonCode reason = 1;</code>
             */
            public Builder clearReason() {

                reason_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.DisconnectMessage)
        }

        // @@protoc_insertion_point(class_scope:protocol.DisconnectMessage)
        private static final com.cryptowallet.crypto.Protocol.DisconnectMessage DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.DisconnectMessage();
        }

        public static com.cryptowallet.crypto.Protocol.DisconnectMessage getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<DisconnectMessage>
                PARSER = new com.google.protobuf.AbstractParser<DisconnectMessage>() {
            public DisconnectMessage parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new DisconnectMessage(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<DisconnectMessage> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<DisconnectMessage> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.DisconnectMessage getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface HelloMessageOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.HelloMessage)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.protocol.Endpoint from = 1;</code>
         */
        boolean hasFrom();
        /**
         * <code>.protocol.Endpoint from = 1;</code>
         */
        com.cryptowallet.crypto.Discover.Endpoint getFrom();
        /**
         * <code>.protocol.Endpoint from = 1;</code>
         */
        com.cryptowallet.crypto.Discover.EndpointOrBuilder getFromOrBuilder();

        /**
         * <code>int32 version = 2;</code>
         */
        int getVersion();

        /**
         * <code>int64 timestamp = 3;</code>
         */
        long getTimestamp();

        /**
         * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
         */
        boolean hasGenesisBlockId();
        /**
         * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
         */
        com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getGenesisBlockId();
        /**
         * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
         */
        com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder getGenesisBlockIdOrBuilder();

        /**
         * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
         */
        boolean hasSolidBlockId();
        /**
         * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
         */
        com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getSolidBlockId();
        /**
         * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
         */
        com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder getSolidBlockIdOrBuilder();

        /**
         * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
         */
        boolean hasHeadBlockId();
        /**
         * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
         */
        com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getHeadBlockId();
        /**
         * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
         */
        com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder getHeadBlockIdOrBuilder();
    }
    /**
     * Protobuf type {@code protocol.HelloMessage}
     */
    public  static final class HelloMessage extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.HelloMessage)
            HelloMessageOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use HelloMessage.newBuilder() to construct.
        private HelloMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private HelloMessage() {
            version_ = 0;
            timestamp_ = 0L;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private HelloMessage(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.cryptowallet.crypto.Discover.Endpoint.Builder subBuilder = null;
                            if (from_ != null) {
                                subBuilder = from_.toBuilder();
                            }
                            from_ = input.readMessage(com.cryptowallet.crypto.Discover.Endpoint.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(from_);
                                from_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {

                            version_ = input.readInt32();
                            break;
                        }
                        case 24: {

                            timestamp_ = input.readInt64();
                            break;
                        }
                        case 34: {
                            com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder subBuilder = null;
                            if (genesisBlockId_ != null) {
                                subBuilder = genesisBlockId_.toBuilder();
                            }
                            genesisBlockId_ = input.readMessage(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(genesisBlockId_);
                                genesisBlockId_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 42: {
                            com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder subBuilder = null;
                            if (solidBlockId_ != null) {
                                subBuilder = solidBlockId_.toBuilder();
                            }
                            solidBlockId_ = input.readMessage(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(solidBlockId_);
                                solidBlockId_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 50: {
                            com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder subBuilder = null;
                            if (headBlockId_ != null) {
                                subBuilder = headBlockId_.toBuilder();
                            }
                            headBlockId_ = input.readMessage(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(headBlockId_);
                                headBlockId_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_HelloMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_HelloMessage_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.HelloMessage.class, com.cryptowallet.crypto.Protocol.HelloMessage.Builder.class);
        }

        public interface BlockIdOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.HelloMessage.BlockId)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>bytes hash = 1;</code>
             */
            com.google.protobuf.ByteString getHash();

            /**
             * <code>int64 number = 2;</code>
             */
            long getNumber();
        }
        /**
         * Protobuf type {@code protocol.HelloMessage.BlockId}
         */
        public  static final class BlockId extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.HelloMessage.BlockId)
                BlockIdOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use BlockId.newBuilder() to construct.
            private BlockId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private BlockId() {
                hash_ = com.google.protobuf.ByteString.EMPTY;
                number_ = 0L;
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private BlockId(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {

                                hash_ = input.readBytes();
                                break;
                            }
                            case 16: {

                                number_ = input.readInt64();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_HelloMessage_BlockId_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_HelloMessage_BlockId_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.class, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder.class);
            }

            public static final int HASH_FIELD_NUMBER = 1;
            private com.google.protobuf.ByteString hash_;
            /**
             * <code>bytes hash = 1;</code>
             */
            public com.google.protobuf.ByteString getHash() {
                return hash_;
            }

            public static final int NUMBER_FIELD_NUMBER = 2;
            private long number_;
            /**
             * <code>int64 number = 2;</code>
             */
            public long getNumber() {
                return number_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (!hash_.isEmpty()) {
                    output.writeBytes(1, hash_);
                }
                if (number_ != 0L) {
                    output.writeInt64(2, number_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (!hash_.isEmpty()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeBytesSize(1, hash_);
                }
                if (number_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(2, number_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.HelloMessage.BlockId)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.HelloMessage.BlockId other = (com.cryptowallet.crypto.Protocol.HelloMessage.BlockId) obj;

                boolean result = true;
                result = result && getHash()
                        .equals(other.getHash());
                result = result && (getNumber()
                        == other.getNumber());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + HASH_FIELD_NUMBER;
                hash = (53 * hash) + getHash().hashCode();
                hash = (37 * hash) + NUMBER_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getNumber());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.HelloMessage.BlockId}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.HelloMessage.BlockId)
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_HelloMessage_BlockId_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_HelloMessage_BlockId_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.class, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    hash_ = com.google.protobuf.ByteString.EMPTY;

                    number_ = 0L;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_HelloMessage_BlockId_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId build() {
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId buildPartial() {
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId result = new com.cryptowallet.crypto.Protocol.HelloMessage.BlockId(this);
                    result.hash_ = hash_;
                    result.number_ = number_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.HelloMessage.BlockId) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.HelloMessage.BlockId)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId other) {
                    if (other == com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance()) return this;
                    if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
                        setHash(other.getHash());
                    }
                    if (other.getNumber() != 0L) {
                        setNumber(other.getNumber());
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.HelloMessage.BlockId) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
                /**
                 * <code>bytes hash = 1;</code>
                 */
                public com.google.protobuf.ByteString getHash() {
                    return hash_;
                }
                /**
                 * <code>bytes hash = 1;</code>
                 */
                public Builder setHash(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    hash_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>bytes hash = 1;</code>
                 */
                public Builder clearHash() {

                    hash_ = getDefaultInstance().getHash();
                    onChanged();
                    return this;
                }

                private long number_ ;
                /**
                 * <code>int64 number = 2;</code>
                 */
                public long getNumber() {
                    return number_;
                }
                /**
                 * <code>int64 number = 2;</code>
                 */
                public Builder setNumber(long value) {

                    number_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>int64 number = 2;</code>
                 */
                public Builder clearNumber() {

                    number_ = 0L;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.HelloMessage.BlockId)
            }

            // @@protoc_insertion_point(class_scope:protocol.HelloMessage.BlockId)
            private static final com.cryptowallet.crypto.Protocol.HelloMessage.BlockId DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.HelloMessage.BlockId();
            }

            public static com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<BlockId>
                    PARSER = new com.google.protobuf.AbstractParser<BlockId>() {
                public BlockId parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new BlockId(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<BlockId> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<BlockId> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        public static final int FROM_FIELD_NUMBER = 1;
        private com.cryptowallet.crypto.Discover.Endpoint from_;
        /**
         * <code>.protocol.Endpoint from = 1;</code>
         */
        public boolean hasFrom() {
            return from_ != null;
        }
        /**
         * <code>.protocol.Endpoint from = 1;</code>
         */
        public com.cryptowallet.crypto.Discover.Endpoint getFrom() {
            return from_ == null ? com.cryptowallet.crypto.Discover.Endpoint.getDefaultInstance() : from_;
        }
        /**
         * <code>.protocol.Endpoint from = 1;</code>
         */
        public com.cryptowallet.crypto.Discover.EndpointOrBuilder getFromOrBuilder() {
            return getFrom();
        }

        public static final int VERSION_FIELD_NUMBER = 2;
        private int version_;
        /**
         * <code>int32 version = 2;</code>
         */
        public int getVersion() {
            return version_;
        }

        public static final int TIMESTAMP_FIELD_NUMBER = 3;
        private long timestamp_;
        /**
         * <code>int64 timestamp = 3;</code>
         */
        public long getTimestamp() {
            return timestamp_;
        }

        public static final int GENESISBLOCKID_FIELD_NUMBER = 4;
        private com.cryptowallet.crypto.Protocol.HelloMessage.BlockId genesisBlockId_;
        /**
         * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
         */
        public boolean hasGenesisBlockId() {
            return genesisBlockId_ != null;
        }
        /**
         * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
         */
        public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getGenesisBlockId() {
            return genesisBlockId_ == null ? com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance() : genesisBlockId_;
        }
        /**
         * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
         */
        public com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder getGenesisBlockIdOrBuilder() {
            return getGenesisBlockId();
        }

        public static final int SOLIDBLOCKID_FIELD_NUMBER = 5;
        private com.cryptowallet.crypto.Protocol.HelloMessage.BlockId solidBlockId_;
        /**
         * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
         */
        public boolean hasSolidBlockId() {
            return solidBlockId_ != null;
        }
        /**
         * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
         */
        public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getSolidBlockId() {
            return solidBlockId_ == null ? com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance() : solidBlockId_;
        }
        /**
         * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
         */
        public com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder getSolidBlockIdOrBuilder() {
            return getSolidBlockId();
        }

        public static final int HEADBLOCKID_FIELD_NUMBER = 6;
        private com.cryptowallet.crypto.Protocol.HelloMessage.BlockId headBlockId_;
        /**
         * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
         */
        public boolean hasHeadBlockId() {
            return headBlockId_ != null;
        }
        /**
         * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
         */
        public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getHeadBlockId() {
            return headBlockId_ == null ? com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance() : headBlockId_;
        }
        /**
         * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
         */
        public com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder getHeadBlockIdOrBuilder() {
            return getHeadBlockId();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (from_ != null) {
                output.writeMessage(1, getFrom());
            }
            if (version_ != 0) {
                output.writeInt32(2, version_);
            }
            if (timestamp_ != 0L) {
                output.writeInt64(3, timestamp_);
            }
            if (genesisBlockId_ != null) {
                output.writeMessage(4, getGenesisBlockId());
            }
            if (solidBlockId_ != null) {
                output.writeMessage(5, getSolidBlockId());
            }
            if (headBlockId_ != null) {
                output.writeMessage(6, getHeadBlockId());
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (from_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getFrom());
            }
            if (version_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(2, version_);
            }
            if (timestamp_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(3, timestamp_);
            }
            if (genesisBlockId_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, getGenesisBlockId());
            }
            if (solidBlockId_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, getSolidBlockId());
            }
            if (headBlockId_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(6, getHeadBlockId());
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.HelloMessage)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.HelloMessage other = (com.cryptowallet.crypto.Protocol.HelloMessage) obj;

            boolean result = true;
            result = result && (hasFrom() == other.hasFrom());
            if (hasFrom()) {
                result = result && getFrom()
                        .equals(other.getFrom());
            }
            result = result && (getVersion()
                    == other.getVersion());
            result = result && (getTimestamp()
                    == other.getTimestamp());
            result = result && (hasGenesisBlockId() == other.hasGenesisBlockId());
            if (hasGenesisBlockId()) {
                result = result && getGenesisBlockId()
                        .equals(other.getGenesisBlockId());
            }
            result = result && (hasSolidBlockId() == other.hasSolidBlockId());
            if (hasSolidBlockId()) {
                result = result && getSolidBlockId()
                        .equals(other.getSolidBlockId());
            }
            result = result && (hasHeadBlockId() == other.hasHeadBlockId());
            if (hasHeadBlockId()) {
                result = result && getHeadBlockId()
                        .equals(other.getHeadBlockId());
            }
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasFrom()) {
                hash = (37 * hash) + FROM_FIELD_NUMBER;
                hash = (53 * hash) + getFrom().hashCode();
            }
            hash = (37 * hash) + VERSION_FIELD_NUMBER;
            hash = (53 * hash) + getVersion();
            hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getTimestamp());
            if (hasGenesisBlockId()) {
                hash = (37 * hash) + GENESISBLOCKID_FIELD_NUMBER;
                hash = (53 * hash) + getGenesisBlockId().hashCode();
            }
            if (hasSolidBlockId()) {
                hash = (37 * hash) + SOLIDBLOCKID_FIELD_NUMBER;
                hash = (53 * hash) + getSolidBlockId().hashCode();
            }
            if (hasHeadBlockId()) {
                hash = (37 * hash) + HEADBLOCKID_FIELD_NUMBER;
                hash = (53 * hash) + getHeadBlockId().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.HelloMessage parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.HelloMessage parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.HelloMessage prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.HelloMessage}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.HelloMessage)
                com.cryptowallet.crypto.Protocol.HelloMessageOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_HelloMessage_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_HelloMessage_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.HelloMessage.class, com.cryptowallet.crypto.Protocol.HelloMessage.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.HelloMessage.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (fromBuilder_ == null) {
                    from_ = null;
                } else {
                    from_ = null;
                    fromBuilder_ = null;
                }
                version_ = 0;

                timestamp_ = 0L;

                if (genesisBlockIdBuilder_ == null) {
                    genesisBlockId_ = null;
                } else {
                    genesisBlockId_ = null;
                    genesisBlockIdBuilder_ = null;
                }
                if (solidBlockIdBuilder_ == null) {
                    solidBlockId_ = null;
                } else {
                    solidBlockId_ = null;
                    solidBlockIdBuilder_ = null;
                }
                if (headBlockIdBuilder_ == null) {
                    headBlockId_ = null;
                } else {
                    headBlockId_ = null;
                    headBlockIdBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_HelloMessage_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.HelloMessage getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.HelloMessage.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.HelloMessage build() {
                com.cryptowallet.crypto.Protocol.HelloMessage result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.HelloMessage buildPartial() {
                com.cryptowallet.crypto.Protocol.HelloMessage result = new com.cryptowallet.crypto.Protocol.HelloMessage(this);
                if (fromBuilder_ == null) {
                    result.from_ = from_;
                } else {
                    result.from_ = fromBuilder_.build();
                }
                result.version_ = version_;
                result.timestamp_ = timestamp_;
                if (genesisBlockIdBuilder_ == null) {
                    result.genesisBlockId_ = genesisBlockId_;
                } else {
                    result.genesisBlockId_ = genesisBlockIdBuilder_.build();
                }
                if (solidBlockIdBuilder_ == null) {
                    result.solidBlockId_ = solidBlockId_;
                } else {
                    result.solidBlockId_ = solidBlockIdBuilder_.build();
                }
                if (headBlockIdBuilder_ == null) {
                    result.headBlockId_ = headBlockId_;
                } else {
                    result.headBlockId_ = headBlockIdBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.HelloMessage) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.HelloMessage)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.HelloMessage other) {
                if (other == com.cryptowallet.crypto.Protocol.HelloMessage.getDefaultInstance()) return this;
                if (other.hasFrom()) {
                    mergeFrom(other.getFrom());
                }
                if (other.getVersion() != 0) {
                    setVersion(other.getVersion());
                }
                if (other.getTimestamp() != 0L) {
                    setTimestamp(other.getTimestamp());
                }
                if (other.hasGenesisBlockId()) {
                    mergeGenesisBlockId(other.getGenesisBlockId());
                }
                if (other.hasSolidBlockId()) {
                    mergeSolidBlockId(other.getSolidBlockId());
                }
                if (other.hasHeadBlockId()) {
                    mergeHeadBlockId(other.getHeadBlockId());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.HelloMessage parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.HelloMessage) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.cryptowallet.crypto.Discover.Endpoint from_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Discover.Endpoint, com.cryptowallet.crypto.Discover.Endpoint.Builder, com.cryptowallet.crypto.Discover.EndpointOrBuilder> fromBuilder_;
            /**
             * <code>.protocol.Endpoint from = 1;</code>
             */
            public boolean hasFrom() {
                return fromBuilder_ != null || from_ != null;
            }
            /**
             * <code>.protocol.Endpoint from = 1;</code>
             */
            public com.cryptowallet.crypto.Discover.Endpoint getFrom() {
                if (fromBuilder_ == null) {
                    return from_ == null ? com.cryptowallet.crypto.Discover.Endpoint.getDefaultInstance() : from_;
                } else {
                    return fromBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.Endpoint from = 1;</code>
             */
            public Builder setFrom(com.cryptowallet.crypto.Discover.Endpoint value) {
                if (fromBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    from_ = value;
                    onChanged();
                } else {
                    fromBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.Endpoint from = 1;</code>
             */
            public Builder setFrom(
                    com.cryptowallet.crypto.Discover.Endpoint.Builder builderForValue) {
                if (fromBuilder_ == null) {
                    from_ = builderForValue.build();
                    onChanged();
                } else {
                    fromBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.Endpoint from = 1;</code>
             */
            public Builder mergeFrom(com.cryptowallet.crypto.Discover.Endpoint value) {
                if (fromBuilder_ == null) {
                    if (from_ != null) {
                        from_ =
                                com.cryptowallet.crypto.Discover.Endpoint.newBuilder(from_).mergeFrom(value).buildPartial();
                    } else {
                        from_ = value;
                    }
                    onChanged();
                } else {
                    fromBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.Endpoint from = 1;</code>
             */
            public Builder clearFrom() {
                if (fromBuilder_ == null) {
                    from_ = null;
                    onChanged();
                } else {
                    from_ = null;
                    fromBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.Endpoint from = 1;</code>
             */
            public com.cryptowallet.crypto.Discover.Endpoint.Builder getFromBuilder() {

                onChanged();
                return getFromFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.Endpoint from = 1;</code>
             */
            public com.cryptowallet.crypto.Discover.EndpointOrBuilder getFromOrBuilder() {
                if (fromBuilder_ != null) {
                    return fromBuilder_.getMessageOrBuilder();
                } else {
                    return from_ == null ?
                            com.cryptowallet.crypto.Discover.Endpoint.getDefaultInstance() : from_;
                }
            }
            /**
             * <code>.protocol.Endpoint from = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Discover.Endpoint, com.cryptowallet.crypto.Discover.Endpoint.Builder, com.cryptowallet.crypto.Discover.EndpointOrBuilder>
            getFromFieldBuilder() {
                if (fromBuilder_ == null) {
                    fromBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Discover.Endpoint, com.cryptowallet.crypto.Discover.Endpoint.Builder, com.cryptowallet.crypto.Discover.EndpointOrBuilder>(
                            getFrom(),
                            getParentForChildren(),
                            isClean());
                    from_ = null;
                }
                return fromBuilder_;
            }

            private int version_ ;
            /**
             * <code>int32 version = 2;</code>
             */
            public int getVersion() {
                return version_;
            }
            /**
             * <code>int32 version = 2;</code>
             */
            public Builder setVersion(int value) {

                version_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int32 version = 2;</code>
             */
            public Builder clearVersion() {

                version_ = 0;
                onChanged();
                return this;
            }

            private long timestamp_ ;
            /**
             * <code>int64 timestamp = 3;</code>
             */
            public long getTimestamp() {
                return timestamp_;
            }
            /**
             * <code>int64 timestamp = 3;</code>
             */
            public Builder setTimestamp(long value) {

                timestamp_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 timestamp = 3;</code>
             */
            public Builder clearTimestamp() {

                timestamp_ = 0L;
                onChanged();
                return this;
            }

            private com.cryptowallet.crypto.Protocol.HelloMessage.BlockId genesisBlockId_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder, com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder> genesisBlockIdBuilder_;
            /**
             * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
             */
            public boolean hasGenesisBlockId() {
                return genesisBlockIdBuilder_ != null || genesisBlockId_ != null;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getGenesisBlockId() {
                if (genesisBlockIdBuilder_ == null) {
                    return genesisBlockId_ == null ? com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance() : genesisBlockId_;
                } else {
                    return genesisBlockIdBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
             */
            public Builder setGenesisBlockId(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId value) {
                if (genesisBlockIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    genesisBlockId_ = value;
                    onChanged();
                } else {
                    genesisBlockIdBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
             */
            public Builder setGenesisBlockId(
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder builderForValue) {
                if (genesisBlockIdBuilder_ == null) {
                    genesisBlockId_ = builderForValue.build();
                    onChanged();
                } else {
                    genesisBlockIdBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
             */
            public Builder mergeGenesisBlockId(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId value) {
                if (genesisBlockIdBuilder_ == null) {
                    if (genesisBlockId_ != null) {
                        genesisBlockId_ =
                                com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.newBuilder(genesisBlockId_).mergeFrom(value).buildPartial();
                    } else {
                        genesisBlockId_ = value;
                    }
                    onChanged();
                } else {
                    genesisBlockIdBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
             */
            public Builder clearGenesisBlockId() {
                if (genesisBlockIdBuilder_ == null) {
                    genesisBlockId_ = null;
                    onChanged();
                } else {
                    genesisBlockId_ = null;
                    genesisBlockIdBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder getGenesisBlockIdBuilder() {

                onChanged();
                return getGenesisBlockIdFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder getGenesisBlockIdOrBuilder() {
                if (genesisBlockIdBuilder_ != null) {
                    return genesisBlockIdBuilder_.getMessageOrBuilder();
                } else {
                    return genesisBlockId_ == null ?
                            com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance() : genesisBlockId_;
                }
            }
            /**
             * <code>.protocol.HelloMessage.BlockId genesisBlockId = 4;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder, com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder>
            getGenesisBlockIdFieldBuilder() {
                if (genesisBlockIdBuilder_ == null) {
                    genesisBlockIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.HelloMessage.BlockId, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder, com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder>(
                            getGenesisBlockId(),
                            getParentForChildren(),
                            isClean());
                    genesisBlockId_ = null;
                }
                return genesisBlockIdBuilder_;
            }

            private com.cryptowallet.crypto.Protocol.HelloMessage.BlockId solidBlockId_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder, com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder> solidBlockIdBuilder_;
            /**
             * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
             */
            public boolean hasSolidBlockId() {
                return solidBlockIdBuilder_ != null || solidBlockId_ != null;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getSolidBlockId() {
                if (solidBlockIdBuilder_ == null) {
                    return solidBlockId_ == null ? com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance() : solidBlockId_;
                } else {
                    return solidBlockIdBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
             */
            public Builder setSolidBlockId(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId value) {
                if (solidBlockIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    solidBlockId_ = value;
                    onChanged();
                } else {
                    solidBlockIdBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
             */
            public Builder setSolidBlockId(
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder builderForValue) {
                if (solidBlockIdBuilder_ == null) {
                    solidBlockId_ = builderForValue.build();
                    onChanged();
                } else {
                    solidBlockIdBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
             */
            public Builder mergeSolidBlockId(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId value) {
                if (solidBlockIdBuilder_ == null) {
                    if (solidBlockId_ != null) {
                        solidBlockId_ =
                                com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.newBuilder(solidBlockId_).mergeFrom(value).buildPartial();
                    } else {
                        solidBlockId_ = value;
                    }
                    onChanged();
                } else {
                    solidBlockIdBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
             */
            public Builder clearSolidBlockId() {
                if (solidBlockIdBuilder_ == null) {
                    solidBlockId_ = null;
                    onChanged();
                } else {
                    solidBlockId_ = null;
                    solidBlockIdBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder getSolidBlockIdBuilder() {

                onChanged();
                return getSolidBlockIdFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
             */
            public com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder getSolidBlockIdOrBuilder() {
                if (solidBlockIdBuilder_ != null) {
                    return solidBlockIdBuilder_.getMessageOrBuilder();
                } else {
                    return solidBlockId_ == null ?
                            com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance() : solidBlockId_;
                }
            }
            /**
             * <code>.protocol.HelloMessage.BlockId solidBlockId = 5;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder, com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder>
            getSolidBlockIdFieldBuilder() {
                if (solidBlockIdBuilder_ == null) {
                    solidBlockIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.HelloMessage.BlockId, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder, com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder>(
                            getSolidBlockId(),
                            getParentForChildren(),
                            isClean());
                    solidBlockId_ = null;
                }
                return solidBlockIdBuilder_;
            }

            private com.cryptowallet.crypto.Protocol.HelloMessage.BlockId headBlockId_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder, com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder> headBlockIdBuilder_;
            /**
             * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
             */
            public boolean hasHeadBlockId() {
                return headBlockIdBuilder_ != null || headBlockId_ != null;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
             */
            public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId getHeadBlockId() {
                if (headBlockIdBuilder_ == null) {
                    return headBlockId_ == null ? com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance() : headBlockId_;
                } else {
                    return headBlockIdBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
             */
            public Builder setHeadBlockId(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId value) {
                if (headBlockIdBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    headBlockId_ = value;
                    onChanged();
                } else {
                    headBlockIdBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
             */
            public Builder setHeadBlockId(
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder builderForValue) {
                if (headBlockIdBuilder_ == null) {
                    headBlockId_ = builderForValue.build();
                    onChanged();
                } else {
                    headBlockIdBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
             */
            public Builder mergeHeadBlockId(com.cryptowallet.crypto.Protocol.HelloMessage.BlockId value) {
                if (headBlockIdBuilder_ == null) {
                    if (headBlockId_ != null) {
                        headBlockId_ =
                                com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.newBuilder(headBlockId_).mergeFrom(value).buildPartial();
                    } else {
                        headBlockId_ = value;
                    }
                    onChanged();
                } else {
                    headBlockIdBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
             */
            public Builder clearHeadBlockId() {
                if (headBlockIdBuilder_ == null) {
                    headBlockId_ = null;
                    onChanged();
                } else {
                    headBlockId_ = null;
                    headBlockIdBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
             */
            public com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder getHeadBlockIdBuilder() {

                onChanged();
                return getHeadBlockIdFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
             */
            public com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder getHeadBlockIdOrBuilder() {
                if (headBlockIdBuilder_ != null) {
                    return headBlockIdBuilder_.getMessageOrBuilder();
                } else {
                    return headBlockId_ == null ?
                            com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.getDefaultInstance() : headBlockId_;
                }
            }
            /**
             * <code>.protocol.HelloMessage.BlockId headBlockId = 6;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.HelloMessage.BlockId, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder, com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder>
            getHeadBlockIdFieldBuilder() {
                if (headBlockIdBuilder_ == null) {
                    headBlockIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.HelloMessage.BlockId, com.cryptowallet.crypto.Protocol.HelloMessage.BlockId.Builder, com.cryptowallet.crypto.Protocol.HelloMessage.BlockIdOrBuilder>(
                            getHeadBlockId(),
                            getParentForChildren(),
                            isClean());
                    headBlockId_ = null;
                }
                return headBlockIdBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.HelloMessage)
        }

        // @@protoc_insertion_point(class_scope:protocol.HelloMessage)
        private static final com.cryptowallet.crypto.Protocol.HelloMessage DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.HelloMessage();
        }

        public static com.cryptowallet.crypto.Protocol.HelloMessage getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<HelloMessage>
                PARSER = new com.google.protobuf.AbstractParser<HelloMessage>() {
            public HelloMessage parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HelloMessage(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<HelloMessage> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<HelloMessage> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.HelloMessage getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface SmartContractOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.SmartContract)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>bytes origin_address = 1;</code>
         */
        com.google.protobuf.ByteString getOriginAddress();

        /**
         * <code>bytes contract_address = 2;</code>
         */
        com.google.protobuf.ByteString getContractAddress();

        /**
         * <code>.protocol.SmartContract.ABI abi = 3;</code>
         */
        boolean hasAbi();
        /**
         * <code>.protocol.SmartContract.ABI abi = 3;</code>
         */
        com.cryptowallet.crypto.Protocol.SmartContract.ABI getAbi();
        /**
         * <code>.protocol.SmartContract.ABI abi = 3;</code>
         */
        com.cryptowallet.crypto.Protocol.SmartContract.ABIOrBuilder getAbiOrBuilder();

        /**
         * <code>bytes bytecode = 4;</code>
         */
        com.google.protobuf.ByteString getBytecode();

        /**
         * <code>int64 call_value = 5;</code>
         */
        long getCallValue();

        /**
         * <code>int64 consume_user_resource_percent = 6;</code>
         */
        long getConsumeUserResourcePercent();

        /**
         * <code>string name = 7;</code>
         */
        java.lang.String getName();
        /**
         * <code>string name = 7;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <code>int64 origin_energy_limit = 8;</code>
         */
        long getOriginEnergyLimit();
    }
    /**
     * Protobuf type {@code protocol.SmartContract}
     */
    public  static final class SmartContract extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.SmartContract)
            SmartContractOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use SmartContract.newBuilder() to construct.
        private SmartContract(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private SmartContract() {
            originAddress_ = com.google.protobuf.ByteString.EMPTY;
            contractAddress_ = com.google.protobuf.ByteString.EMPTY;
            bytecode_ = com.google.protobuf.ByteString.EMPTY;
            callValue_ = 0L;
            consumeUserResourcePercent_ = 0L;
            name_ = "";
            originEnergyLimit_ = 0L;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private SmartContract(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {

                            originAddress_ = input.readBytes();
                            break;
                        }
                        case 18: {

                            contractAddress_ = input.readBytes();
                            break;
                        }
                        case 26: {
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Builder subBuilder = null;
                            if (abi_ != null) {
                                subBuilder = abi_.toBuilder();
                            }
                            abi_ = input.readMessage(com.cryptowallet.crypto.Protocol.SmartContract.ABI.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(abi_);
                                abi_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 34: {

                            bytecode_ = input.readBytes();
                            break;
                        }
                        case 40: {

                            callValue_ = input.readInt64();
                            break;
                        }
                        case 48: {

                            consumeUserResourcePercent_ = input.readInt64();
                            break;
                        }
                        case 58: {
                            java.lang.String s = input.readStringRequireUtf8();

                            name_ = s;
                            break;
                        }
                        case 64: {

                            originEnergyLimit_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.SmartContract.class, com.cryptowallet.crypto.Protocol.SmartContract.Builder.class);
        }

        public interface ABIOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.SmartContract.ABI)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
             */
            java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry>
            getEntrysList();
            /**
             * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
             */
            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry getEntrys(int index);
            /**
             * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
             */
            int getEntrysCount();
            /**
             * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
             */
            java.util.List<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.EntryOrBuilder>
            getEntrysOrBuilderList();
            /**
             * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
             */
            com.cryptowallet.crypto.Protocol.SmartContract.ABI.EntryOrBuilder getEntrysOrBuilder(
                    int index);
        }
        /**
         * Protobuf type {@code protocol.SmartContract.ABI}
         */
        public  static final class ABI extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.SmartContract.ABI)
                ABIOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use ABI.newBuilder() to construct.
            private ABI(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private ABI() {
                entrys_ = java.util.Collections.emptyList();
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private ABI(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {
                                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                    entrys_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry>();
                                    mutable_bitField0_ |= 0x00000001;
                                }
                                entrys_.add(
                                        input.readMessage(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.parser(), extensionRegistry));
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                        entrys_ = java.util.Collections.unmodifiableList(entrys_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.SmartContract.ABI.class, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Builder.class);
            }

            public interface EntryOrBuilder extends
                    // @@protoc_insertion_point(interface_extends:protocol.SmartContract.ABI.Entry)
                    com.google.protobuf.MessageOrBuilder {

                /**
                 * <code>bool anonymous = 1;</code>
                 */
                boolean getAnonymous();

                /**
                 * <code>bool constant = 2;</code>
                 */
                boolean getConstant();

                /**
                 * <code>string name = 3;</code>
                 */
                java.lang.String getName();
                /**
                 * <code>string name = 3;</code>
                 */
                com.google.protobuf.ByteString
                getNameBytes();

                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                 */
                java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param>
                getInputsList();
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                 */
                com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param getInputs(int index);
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                 */
                int getInputsCount();
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                 */
                java.util.List<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder>
                getInputsOrBuilderList();
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                 */
                com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder getInputsOrBuilder(
                        int index);

                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                 */
                java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param>
                getOutputsList();
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                 */
                com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param getOutputs(int index);
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                 */
                int getOutputsCount();
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                 */
                java.util.List<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder>
                getOutputsOrBuilderList();
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                 */
                com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder getOutputsOrBuilder(
                        int index);

                /**
                 * <code>.protocol.SmartContract.ABI.Entry.EntryType type = 6;</code>
                 */
                int getTypeValue();
                /**
                 * <code>.protocol.SmartContract.ABI.Entry.EntryType type = 6;</code>
                 */
                com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType getType();

                /**
                 * <code>bool payable = 7;</code>
                 */
                boolean getPayable();

                /**
                 * <code>.protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;</code>
                 */
                int getStateMutabilityValue();
                /**
                 * <code>.protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;</code>
                 */
                com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType getStateMutability();
            }
            /**
             * Protobuf type {@code protocol.SmartContract.ABI.Entry}
             */
            public  static final class Entry extends
                    com.google.protobuf.GeneratedMessageV3 implements
                    // @@protoc_insertion_point(message_implements:protocol.SmartContract.ABI.Entry)
                    EntryOrBuilder {
                private static final long serialVersionUID = 0L;
                // Use Entry.newBuilder() to construct.
                private Entry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                    super(builder);
                }
                private Entry() {
                    anonymous_ = false;
                    constant_ = false;
                    name_ = "";
                    inputs_ = java.util.Collections.emptyList();
                    outputs_ = java.util.Collections.emptyList();
                    type_ = 0;
                    payable_ = false;
                    stateMutability_ = 0;
                }

                @java.lang.Override
                public final com.google.protobuf.UnknownFieldSet
                getUnknownFields() {
                    return this.unknownFields;
                }
                private Entry(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    this();
                    if (extensionRegistry == null) {
                        throw new java.lang.NullPointerException();
                    }
                    int mutable_bitField0_ = 0;
                    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                            com.google.protobuf.UnknownFieldSet.newBuilder();
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!parseUnknownFieldProto3(
                                            input, unknownFields, extensionRegistry, tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 8: {

                                    anonymous_ = input.readBool();
                                    break;
                                }
                                case 16: {

                                    constant_ = input.readBool();
                                    break;
                                }
                                case 26: {
                                    java.lang.String s = input.readStringRequireUtf8();

                                    name_ = s;
                                    break;
                                }
                                case 34: {
                                    if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                        inputs_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param>();
                                        mutable_bitField0_ |= 0x00000008;
                                    }
                                    inputs_.add(
                                            input.readMessage(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.parser(), extensionRegistry));
                                    break;
                                }
                                case 42: {
                                    if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                                        outputs_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param>();
                                        mutable_bitField0_ |= 0x00000010;
                                    }
                                    outputs_.add(
                                            input.readMessage(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.parser(), extensionRegistry));
                                    break;
                                }
                                case 48: {
                                    int rawValue = input.readEnum();

                                    type_ = rawValue;
                                    break;
                                }
                                case 56: {

                                    payable_ = input.readBool();
                                    break;
                                }
                                case 64: {
                                    int rawValue = input.readEnum();

                                    stateMutability_ = rawValue;
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (java.io.IOException e) {
                        throw new com.google.protobuf.InvalidProtocolBufferException(
                                e).setUnfinishedMessage(this);
                    } finally {
                        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                            inputs_ = java.util.Collections.unmodifiableList(inputs_);
                        }
                        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                            outputs_ = java.util.Collections.unmodifiableList(outputs_);
                        }
                        this.unknownFields = unknownFields.build();
                        makeExtensionsImmutable();
                    }
                }
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_Entry_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_Entry_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.class, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder.class);
                }

                /**
                 * Protobuf enum {@code protocol.SmartContract.ABI.Entry.EntryType}
                 */
                public enum EntryType
                        implements com.google.protobuf.ProtocolMessageEnum {
                    /**
                     * <code>UnknownEntryType = 0;</code>
                     */
                    UnknownEntryType(0),
                    /**
                     * <code>Constructor = 1;</code>
                     */
                    Constructor(1),
                    /**
                     * <code>Function = 2;</code>
                     */
                    Function(2),
                    /**
                     * <code>Event = 3;</code>
                     */
                    Event(3),
                    /**
                     * <code>Fallback = 4;</code>
                     */
                    Fallback(4),
                    UNRECOGNIZED(-1),
                    ;

                    /**
                     * <code>UnknownEntryType = 0;</code>
                     */
                    public static final int UnknownEntryType_VALUE = 0;
                    /**
                     * <code>Constructor = 1;</code>
                     */
                    public static final int Constructor_VALUE = 1;
                    /**
                     * <code>Function = 2;</code>
                     */
                    public static final int Function_VALUE = 2;
                    /**
                     * <code>Event = 3;</code>
                     */
                    public static final int Event_VALUE = 3;
                    /**
                     * <code>Fallback = 4;</code>
                     */
                    public static final int Fallback_VALUE = 4;


                    public final int getNumber() {
                        if (this == UNRECOGNIZED) {
                            throw new java.lang.IllegalArgumentException(
                                    "Can't get the number of an unknown enum value.");
                        }
                        return value;
                    }

                    /**
                     * @deprecated Use {@link #forNumber(int)} instead.
                     */
                    @java.lang.Deprecated
                    public static EntryType valueOf(int value) {
                        return forNumber(value);
                    }

                    public static EntryType forNumber(int value) {
                        switch (value) {
                            case 0: return UnknownEntryType;
                            case 1: return Constructor;
                            case 2: return Function;
                            case 3: return Event;
                            case 4: return Fallback;
                            default: return null;
                        }
                    }

                    public static com.google.protobuf.Internal.EnumLiteMap<EntryType>
                    internalGetValueMap() {
                        return internalValueMap;
                    }
                    private static final com.google.protobuf.Internal.EnumLiteMap<
                            EntryType> internalValueMap =
                            new com.google.protobuf.Internal.EnumLiteMap<EntryType>() {
                                public EntryType findValueByNumber(int number) {
                                    return EntryType.forNumber(number);
                                }
                            };

                    public final com.google.protobuf.Descriptors.EnumValueDescriptor
                    getValueDescriptor() {
                        return getDescriptor().getValues().get(ordinal());
                    }
                    public final com.google.protobuf.Descriptors.EnumDescriptor
                    getDescriptorForType() {
                        return getDescriptor();
                    }
                    public static final com.google.protobuf.Descriptors.EnumDescriptor
                    getDescriptor() {
                        return com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.getDescriptor().getEnumTypes().get(0);
                    }

                    private static final EntryType[] VALUES = values();

                    public static EntryType valueOf(
                            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                        if (desc.getType() != getDescriptor()) {
                            throw new java.lang.IllegalArgumentException(
                                    "EnumValueDescriptor is not for this type.");
                        }
                        if (desc.getIndex() == -1) {
                            return UNRECOGNIZED;
                        }
                        return VALUES[desc.getIndex()];
                    }

                    private final int value;

                    private EntryType(int value) {
                        this.value = value;
                    }

                    // @@protoc_insertion_point(enum_scope:protocol.SmartContract.ABI.Entry.EntryType)
                }

                /**
                 * Protobuf enum {@code protocol.SmartContract.ABI.Entry.StateMutabilityType}
                 */
                public enum StateMutabilityType
                        implements com.google.protobuf.ProtocolMessageEnum {
                    /**
                     * <code>UnknownMutabilityType = 0;</code>
                     */
                    UnknownMutabilityType(0),
                    /**
                     * <code>Pure = 1;</code>
                     */
                    Pure(1),
                    /**
                     * <code>View = 2;</code>
                     */
                    View(2),
                    /**
                     * <code>Nonpayable = 3;</code>
                     */
                    Nonpayable(3),
                    /**
                     * <code>Payable = 4;</code>
                     */
                    Payable(4),
                    UNRECOGNIZED(-1),
                    ;

                    /**
                     * <code>UnknownMutabilityType = 0;</code>
                     */
                    public static final int UnknownMutabilityType_VALUE = 0;
                    /**
                     * <code>Pure = 1;</code>
                     */
                    public static final int Pure_VALUE = 1;
                    /**
                     * <code>View = 2;</code>
                     */
                    public static final int View_VALUE = 2;
                    /**
                     * <code>Nonpayable = 3;</code>
                     */
                    public static final int Nonpayable_VALUE = 3;
                    /**
                     * <code>Payable = 4;</code>
                     */
                    public static final int Payable_VALUE = 4;


                    public final int getNumber() {
                        if (this == UNRECOGNIZED) {
                            throw new java.lang.IllegalArgumentException(
                                    "Can't get the number of an unknown enum value.");
                        }
                        return value;
                    }

                    /**
                     * @deprecated Use {@link #forNumber(int)} instead.
                     */
                    @java.lang.Deprecated
                    public static StateMutabilityType valueOf(int value) {
                        return forNumber(value);
                    }

                    public static StateMutabilityType forNumber(int value) {
                        switch (value) {
                            case 0: return UnknownMutabilityType;
                            case 1: return Pure;
                            case 2: return View;
                            case 3: return Nonpayable;
                            case 4: return Payable;
                            default: return null;
                        }
                    }

                    public static com.google.protobuf.Internal.EnumLiteMap<StateMutabilityType>
                    internalGetValueMap() {
                        return internalValueMap;
                    }
                    private static final com.google.protobuf.Internal.EnumLiteMap<
                            StateMutabilityType> internalValueMap =
                            new com.google.protobuf.Internal.EnumLiteMap<StateMutabilityType>() {
                                public StateMutabilityType findValueByNumber(int number) {
                                    return StateMutabilityType.forNumber(number);
                                }
                            };

                    public final com.google.protobuf.Descriptors.EnumValueDescriptor
                    getValueDescriptor() {
                        return getDescriptor().getValues().get(ordinal());
                    }
                    public final com.google.protobuf.Descriptors.EnumDescriptor
                    getDescriptorForType() {
                        return getDescriptor();
                    }
                    public static final com.google.protobuf.Descriptors.EnumDescriptor
                    getDescriptor() {
                        return com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.getDescriptor().getEnumTypes().get(1);
                    }

                    private static final StateMutabilityType[] VALUES = values();

                    public static StateMutabilityType valueOf(
                            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                        if (desc.getType() != getDescriptor()) {
                            throw new java.lang.IllegalArgumentException(
                                    "EnumValueDescriptor is not for this type.");
                        }
                        if (desc.getIndex() == -1) {
                            return UNRECOGNIZED;
                        }
                        return VALUES[desc.getIndex()];
                    }

                    private final int value;

                    private StateMutabilityType(int value) {
                        this.value = value;
                    }

                    // @@protoc_insertion_point(enum_scope:protocol.SmartContract.ABI.Entry.StateMutabilityType)
                }

                public interface ParamOrBuilder extends
                        // @@protoc_insertion_point(interface_extends:protocol.SmartContract.ABI.Entry.Param)
                        com.google.protobuf.MessageOrBuilder {

                    /**
                     * <code>bool indexed = 1;</code>
                     */
                    boolean getIndexed();

                    /**
                     * <code>string name = 2;</code>
                     */
                    java.lang.String getName();
                    /**
                     * <code>string name = 2;</code>
                     */
                    com.google.protobuf.ByteString
                    getNameBytes();

                    /**
                     * <pre>
                     * SolidityType type = 3;
                     * </pre>
                     *
                     * <code>string type = 3;</code>
                     */
                    java.lang.String getType();
                    /**
                     * <pre>
                     * SolidityType type = 3;
                     * </pre>
                     *
                     * <code>string type = 3;</code>
                     */
                    com.google.protobuf.ByteString
                    getTypeBytes();
                }
                /**
                 * Protobuf type {@code protocol.SmartContract.ABI.Entry.Param}
                 */
                public  static final class Param extends
                        com.google.protobuf.GeneratedMessageV3 implements
                        // @@protoc_insertion_point(message_implements:protocol.SmartContract.ABI.Entry.Param)
                        ParamOrBuilder {
                    private static final long serialVersionUID = 0L;
                    // Use Param.newBuilder() to construct.
                    private Param(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                        super(builder);
                    }
                    private Param() {
                        indexed_ = false;
                        name_ = "";
                        type_ = "";
                    }

                    @java.lang.Override
                    public final com.google.protobuf.UnknownFieldSet
                    getUnknownFields() {
                        return this.unknownFields;
                    }
                    private Param(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        this();
                        if (extensionRegistry == null) {
                            throw new java.lang.NullPointerException();
                        }
                        int mutable_bitField0_ = 0;
                        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                                com.google.protobuf.UnknownFieldSet.newBuilder();
                        try {
                            boolean done = false;
                            while (!done) {
                                int tag = input.readTag();
                                switch (tag) {
                                    case 0:
                                        done = true;
                                        break;
                                    default: {
                                        if (!parseUnknownFieldProto3(
                                                input, unknownFields, extensionRegistry, tag)) {
                                            done = true;
                                        }
                                        break;
                                    }
                                    case 8: {

                                        indexed_ = input.readBool();
                                        break;
                                    }
                                    case 18: {
                                        java.lang.String s = input.readStringRequireUtf8();

                                        name_ = s;
                                        break;
                                    }
                                    case 26: {
                                        java.lang.String s = input.readStringRequireUtf8();

                                        type_ = s;
                                        break;
                                    }
                                }
                            }
                        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                            throw e.setUnfinishedMessage(this);
                        } catch (java.io.IOException e) {
                            throw new com.google.protobuf.InvalidProtocolBufferException(
                                    e).setUnfinishedMessage(this);
                        } finally {
                            this.unknownFields = unknownFields.build();
                            makeExtensionsImmutable();
                        }
                    }
                    public static final com.google.protobuf.Descriptors.Descriptor
                    getDescriptor() {
                        return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_Entry_Param_descriptor;
                    }

                    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                    internalGetFieldAccessorTable() {
                        return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_Entry_Param_fieldAccessorTable
                                .ensureFieldAccessorsInitialized(
                                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.class, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder.class);
                    }

                    public static final int INDEXED_FIELD_NUMBER = 1;
                    private boolean indexed_;
                    /**
                     * <code>bool indexed = 1;</code>
                     */
                    public boolean getIndexed() {
                        return indexed_;
                    }

                    public static final int NAME_FIELD_NUMBER = 2;
                    private volatile java.lang.Object name_;
                    /**
                     * <code>string name = 2;</code>
                     */
                    public java.lang.String getName() {
                        java.lang.Object ref = name_;
                        if (ref instanceof java.lang.String) {
                            return (java.lang.String) ref;
                        } else {
                            com.google.protobuf.ByteString bs =
                                    (com.google.protobuf.ByteString) ref;
                            java.lang.String s = bs.toStringUtf8();
                            name_ = s;
                            return s;
                        }
                    }
                    /**
                     * <code>string name = 2;</code>
                     */
                    public com.google.protobuf.ByteString
                    getNameBytes() {
                        java.lang.Object ref = name_;
                        if (ref instanceof java.lang.String) {
                            com.google.protobuf.ByteString b =
                                    com.google.protobuf.ByteString.copyFromUtf8(
                                            (java.lang.String) ref);
                            name_ = b;
                            return b;
                        } else {
                            return (com.google.protobuf.ByteString) ref;
                        }
                    }

                    public static final int TYPE_FIELD_NUMBER = 3;
                    private volatile java.lang.Object type_;
                    /**
                     * <pre>
                     * SolidityType type = 3;
                     * </pre>
                     *
                     * <code>string type = 3;</code>
                     */
                    public java.lang.String getType() {
                        java.lang.Object ref = type_;
                        if (ref instanceof java.lang.String) {
                            return (java.lang.String) ref;
                        } else {
                            com.google.protobuf.ByteString bs =
                                    (com.google.protobuf.ByteString) ref;
                            java.lang.String s = bs.toStringUtf8();
                            type_ = s;
                            return s;
                        }
                    }
                    /**
                     * <pre>
                     * SolidityType type = 3;
                     * </pre>
                     *
                     * <code>string type = 3;</code>
                     */
                    public com.google.protobuf.ByteString
                    getTypeBytes() {
                        java.lang.Object ref = type_;
                        if (ref instanceof java.lang.String) {
                            com.google.protobuf.ByteString b =
                                    com.google.protobuf.ByteString.copyFromUtf8(
                                            (java.lang.String) ref);
                            type_ = b;
                            return b;
                        } else {
                            return (com.google.protobuf.ByteString) ref;
                        }
                    }

                    private byte memoizedIsInitialized = -1;
                    public final boolean isInitialized() {
                        byte isInitialized = memoizedIsInitialized;
                        if (isInitialized == 1) return true;
                        if (isInitialized == 0) return false;

                        memoizedIsInitialized = 1;
                        return true;
                    }

                    public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
                        if (indexed_ != false) {
                            output.writeBool(1, indexed_);
                        }
                        if (!getNameBytes().isEmpty()) {
                            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
                        }
                        if (!getTypeBytes().isEmpty()) {
                            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, type_);
                        }
                        unknownFields.writeTo(output);
                    }

                    public int getSerializedSize() {
                        int size = memoizedSize;
                        if (size != -1) return size;

                        size = 0;
                        if (indexed_ != false) {
                            size += com.google.protobuf.CodedOutputStream
                                    .computeBoolSize(1, indexed_);
                        }
                        if (!getNameBytes().isEmpty()) {
                            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
                        }
                        if (!getTypeBytes().isEmpty()) {
                            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, type_);
                        }
                        size += unknownFields.getSerializedSize();
                        memoizedSize = size;
                        return size;
                    }

                    @java.lang.Override
                    public boolean equals(final java.lang.Object obj) {
                        if (obj == this) {
                            return true;
                        }
                        if (!(obj instanceof com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param)) {
                            return super.equals(obj);
                        }
                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param other = (com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param) obj;

                        boolean result = true;
                        result = result && (getIndexed()
                                == other.getIndexed());
                        result = result && getName()
                                .equals(other.getName());
                        result = result && getType()
                                .equals(other.getType());
                        result = result && unknownFields.equals(other.unknownFields);
                        return result;
                    }

                    @java.lang.Override
                    public int hashCode() {
                        if (memoizedHashCode != 0) {
                            return memoizedHashCode;
                        }
                        int hash = 41;
                        hash = (19 * hash) + getDescriptor().hashCode();
                        hash = (37 * hash) + INDEXED_FIELD_NUMBER;
                        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                                getIndexed());
                        hash = (37 * hash) + NAME_FIELD_NUMBER;
                        hash = (53 * hash) + getName().hashCode();
                        hash = (37 * hash) + TYPE_FIELD_NUMBER;
                        hash = (53 * hash) + getType().hashCode();
                        hash = (29 * hash) + unknownFields.hashCode();
                        memoizedHashCode = hash;
                        return hash;
                    }

                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseFrom(
                            java.nio.ByteBuffer data)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return PARSER.parseFrom(data);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseFrom(
                            java.nio.ByteBuffer data,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return PARSER.parseFrom(data, extensionRegistry);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseFrom(
                            com.google.protobuf.ByteString data)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return PARSER.parseFrom(data);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseFrom(
                            com.google.protobuf.ByteString data,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return PARSER.parseFrom(data, extensionRegistry);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseFrom(byte[] data)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return PARSER.parseFrom(data);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseFrom(
                            byte[] data,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return PARSER.parseFrom(data, extensionRegistry);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseFrom(java.io.InputStream input)
                            throws java.io.IOException {
                        return com.google.protobuf.GeneratedMessageV3
                                .parseWithIOException(PARSER, input);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseFrom(
                            java.io.InputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws java.io.IOException {
                        return com.google.protobuf.GeneratedMessageV3
                                .parseWithIOException(PARSER, input, extensionRegistry);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseDelimitedFrom(java.io.InputStream input)
                            throws java.io.IOException {
                        return com.google.protobuf.GeneratedMessageV3
                                .parseDelimitedWithIOException(PARSER, input);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseDelimitedFrom(
                            java.io.InputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws java.io.IOException {
                        return com.google.protobuf.GeneratedMessageV3
                                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseFrom(
                            com.google.protobuf.CodedInputStream input)
                            throws java.io.IOException {
                        return com.google.protobuf.GeneratedMessageV3
                                .parseWithIOException(PARSER, input);
                    }
                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parseFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws java.io.IOException {
                        return com.google.protobuf.GeneratedMessageV3
                                .parseWithIOException(PARSER, input, extensionRegistry);
                    }

                    public Builder newBuilderForType() { return newBuilder(); }
                    public static Builder newBuilder() {
                        return DEFAULT_INSTANCE.toBuilder();
                    }
                    public static Builder newBuilder(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param prototype) {
                        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                    }
                    public Builder toBuilder() {
                        return this == DEFAULT_INSTANCE
                                ? new Builder() : new Builder().mergeFrom(this);
                    }

                    @java.lang.Override
                    protected Builder newBuilderForType(
                            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                        Builder builder = new Builder(parent);
                        return builder;
                    }
                    /**
                     * Protobuf type {@code protocol.SmartContract.ABI.Entry.Param}
                     */
                    public static final class Builder extends
                            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                            // @@protoc_insertion_point(builder_implements:protocol.SmartContract.ABI.Entry.Param)
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder {
                        public static final com.google.protobuf.Descriptors.Descriptor
                        getDescriptor() {
                            return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_Entry_Param_descriptor;
                        }

                        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                        internalGetFieldAccessorTable() {
                            return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_Entry_Param_fieldAccessorTable
                                    .ensureFieldAccessorsInitialized(
                                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.class, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder.class);
                        }

                        // Construct using com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.newBuilder()
                        private Builder() {
                            maybeForceBuilderInitialization();
                        }

                        private Builder(
                                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                            super(parent);
                            maybeForceBuilderInitialization();
                        }
                        private void maybeForceBuilderInitialization() {
                            if (com.google.protobuf.GeneratedMessageV3
                                    .alwaysUseFieldBuilders) {
                            }
                        }
                        public Builder clear() {
                            super.clear();
                            indexed_ = false;

                            name_ = "";

                            type_ = "";

                            return this;
                        }

                        public com.google.protobuf.Descriptors.Descriptor
                        getDescriptorForType() {
                            return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_Entry_Param_descriptor;
                        }

                        public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param getDefaultInstanceForType() {
                            return com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.getDefaultInstance();
                        }

                        public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param build() {
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param result = buildPartial();
                            if (!result.isInitialized()) {
                                throw newUninitializedMessageException(result);
                            }
                            return result;
                        }

                        public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param buildPartial() {
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param result = new com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param(this);
                            result.indexed_ = indexed_;
                            result.name_ = name_;
                            result.type_ = type_;
                            onBuilt();
                            return result;
                        }

                        public Builder clone() {
                            return (Builder) super.clone();
                        }
                        public Builder setField(
                                com.google.protobuf.Descriptors.FieldDescriptor field,
                                java.lang.Object value) {
                            return (Builder) super.setField(field, value);
                        }
                        public Builder clearField(
                                com.google.protobuf.Descriptors.FieldDescriptor field) {
                            return (Builder) super.clearField(field);
                        }
                        public Builder clearOneof(
                                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                            return (Builder) super.clearOneof(oneof);
                        }
                        public Builder setRepeatedField(
                                com.google.protobuf.Descriptors.FieldDescriptor field,
                                int index, java.lang.Object value) {
                            return (Builder) super.setRepeatedField(field, index, value);
                        }
                        public Builder addRepeatedField(
                                com.google.protobuf.Descriptors.FieldDescriptor field,
                                java.lang.Object value) {
                            return (Builder) super.addRepeatedField(field, value);
                        }
                        public Builder mergeFrom(com.google.protobuf.Message other) {
                            if (other instanceof com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param) {
                                return mergeFrom((com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param)other);
                            } else {
                                super.mergeFrom(other);
                                return this;
                            }
                        }

                        public Builder mergeFrom(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param other) {
                            if (other == com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.getDefaultInstance()) return this;
                            if (other.getIndexed() != false) {
                                setIndexed(other.getIndexed());
                            }
                            if (!other.getName().isEmpty()) {
                                name_ = other.name_;
                                onChanged();
                            }
                            if (!other.getType().isEmpty()) {
                                type_ = other.type_;
                                onChanged();
                            }
                            this.mergeUnknownFields(other.unknownFields);
                            onChanged();
                            return this;
                        }

                        public final boolean isInitialized() {
                            return true;
                        }

                        public Builder mergeFrom(
                                com.google.protobuf.CodedInputStream input,
                                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                                throws java.io.IOException {
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param parsedMessage = null;
                            try {
                                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                                parsedMessage = (com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param) e.getUnfinishedMessage();
                                throw e.unwrapIOException();
                            } finally {
                                if (parsedMessage != null) {
                                    mergeFrom(parsedMessage);
                                }
                            }
                            return this;
                        }

                        private boolean indexed_ ;
                        /**
                         * <code>bool indexed = 1;</code>
                         */
                        public boolean getIndexed() {
                            return indexed_;
                        }
                        /**
                         * <code>bool indexed = 1;</code>
                         */
                        public Builder setIndexed(boolean value) {

                            indexed_ = value;
                            onChanged();
                            return this;
                        }
                        /**
                         * <code>bool indexed = 1;</code>
                         */
                        public Builder clearIndexed() {

                            indexed_ = false;
                            onChanged();
                            return this;
                        }

                        private java.lang.Object name_ = "";
                        /**
                         * <code>string name = 2;</code>
                         */
                        public java.lang.String getName() {
                            java.lang.Object ref = name_;
                            if (!(ref instanceof java.lang.String)) {
                                com.google.protobuf.ByteString bs =
                                        (com.google.protobuf.ByteString) ref;
                                java.lang.String s = bs.toStringUtf8();
                                name_ = s;
                                return s;
                            } else {
                                return (java.lang.String) ref;
                            }
                        }
                        /**
                         * <code>string name = 2;</code>
                         */
                        public com.google.protobuf.ByteString
                        getNameBytes() {
                            java.lang.Object ref = name_;
                            if (ref instanceof String) {
                                com.google.protobuf.ByteString b =
                                        com.google.protobuf.ByteString.copyFromUtf8(
                                                (java.lang.String) ref);
                                name_ = b;
                                return b;
                            } else {
                                return (com.google.protobuf.ByteString) ref;
                            }
                        }
                        /**
                         * <code>string name = 2;</code>
                         */
                        public Builder setName(
                                java.lang.String value) {
                            if (value == null) {
                                throw new NullPointerException();
                            }

                            name_ = value;
                            onChanged();
                            return this;
                        }
                        /**
                         * <code>string name = 2;</code>
                         */
                        public Builder clearName() {

                            name_ = getDefaultInstance().getName();
                            onChanged();
                            return this;
                        }
                        /**
                         * <code>string name = 2;</code>
                         */
                        public Builder setNameBytes(
                                com.google.protobuf.ByteString value) {
                            if (value == null) {
                                throw new NullPointerException();
                            }
                            checkByteStringIsUtf8(value);

                            name_ = value;
                            onChanged();
                            return this;
                        }

                        private java.lang.Object type_ = "";
                        /**
                         * <pre>
                         * SolidityType type = 3;
                         * </pre>
                         *
                         * <code>string type = 3;</code>
                         */
                        public java.lang.String getType() {
                            java.lang.Object ref = type_;
                            if (!(ref instanceof java.lang.String)) {
                                com.google.protobuf.ByteString bs =
                                        (com.google.protobuf.ByteString) ref;
                                java.lang.String s = bs.toStringUtf8();
                                type_ = s;
                                return s;
                            } else {
                                return (java.lang.String) ref;
                            }
                        }
                        /**
                         * <pre>
                         * SolidityType type = 3;
                         * </pre>
                         *
                         * <code>string type = 3;</code>
                         */
                        public com.google.protobuf.ByteString
                        getTypeBytes() {
                            java.lang.Object ref = type_;
                            if (ref instanceof String) {
                                com.google.protobuf.ByteString b =
                                        com.google.protobuf.ByteString.copyFromUtf8(
                                                (java.lang.String) ref);
                                type_ = b;
                                return b;
                            } else {
                                return (com.google.protobuf.ByteString) ref;
                            }
                        }
                        /**
                         * <pre>
                         * SolidityType type = 3;
                         * </pre>
                         *
                         * <code>string type = 3;</code>
                         */
                        public Builder setType(
                                java.lang.String value) {
                            if (value == null) {
                                throw new NullPointerException();
                            }

                            type_ = value;
                            onChanged();
                            return this;
                        }
                        /**
                         * <pre>
                         * SolidityType type = 3;
                         * </pre>
                         *
                         * <code>string type = 3;</code>
                         */
                        public Builder clearType() {

                            type_ = getDefaultInstance().getType();
                            onChanged();
                            return this;
                        }
                        /**
                         * <pre>
                         * SolidityType type = 3;
                         * </pre>
                         *
                         * <code>string type = 3;</code>
                         */
                        public Builder setTypeBytes(
                                com.google.protobuf.ByteString value) {
                            if (value == null) {
                                throw new NullPointerException();
                            }
                            checkByteStringIsUtf8(value);

                            type_ = value;
                            onChanged();
                            return this;
                        }
                        public final Builder setUnknownFields(
                                final com.google.protobuf.UnknownFieldSet unknownFields) {
                            return super.setUnknownFieldsProto3(unknownFields);
                        }

                        public final Builder mergeUnknownFields(
                                final com.google.protobuf.UnknownFieldSet unknownFields) {
                            return super.mergeUnknownFields(unknownFields);
                        }


                        // @@protoc_insertion_point(builder_scope:protocol.SmartContract.ABI.Entry.Param)
                    }

                    // @@protoc_insertion_point(class_scope:protocol.SmartContract.ABI.Entry.Param)
                    private static final com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param DEFAULT_INSTANCE;
                    static {
                        DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param();
                    }

                    public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param getDefaultInstance() {
                        return DEFAULT_INSTANCE;
                    }

                    private static final com.google.protobuf.Parser<Param>
                            PARSER = new com.google.protobuf.AbstractParser<Param>() {
                        public Param parsePartialFrom(
                                com.google.protobuf.CodedInputStream input,
                                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                                throws com.google.protobuf.InvalidProtocolBufferException {
                            return new Param(input, extensionRegistry);
                        }
                    };

                    public static com.google.protobuf.Parser<Param> parser() {
                        return PARSER;
                    }

                    @java.lang.Override
                    public com.google.protobuf.Parser<Param> getParserForType() {
                        return PARSER;
                    }

                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param getDefaultInstanceForType() {
                        return DEFAULT_INSTANCE;
                    }

                }

                private int bitField0_;
                public static final int ANONYMOUS_FIELD_NUMBER = 1;
                private boolean anonymous_;
                /**
                 * <code>bool anonymous = 1;</code>
                 */
                public boolean getAnonymous() {
                    return anonymous_;
                }

                public static final int CONSTANT_FIELD_NUMBER = 2;
                private boolean constant_;
                /**
                 * <code>bool constant = 2;</code>
                 */
                public boolean getConstant() {
                    return constant_;
                }

                public static final int NAME_FIELD_NUMBER = 3;
                private volatile java.lang.Object name_;
                /**
                 * <code>string name = 3;</code>
                 */
                public java.lang.String getName() {
                    java.lang.Object ref = name_;
                    if (ref instanceof java.lang.String) {
                        return (java.lang.String) ref;
                    } else {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        name_ = s;
                        return s;
                    }
                }
                /**
                 * <code>string name = 3;</code>
                 */
                public com.google.protobuf.ByteString
                getNameBytes() {
                    java.lang.Object ref = name_;
                    if (ref instanceof java.lang.String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        name_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                public static final int INPUTS_FIELD_NUMBER = 4;
                private java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param> inputs_;
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                 */
                public java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param> getInputsList() {
                    return inputs_;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                 */
                public java.util.List<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder>
                getInputsOrBuilderList() {
                    return inputs_;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                 */
                public int getInputsCount() {
                    return inputs_.size();
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param getInputs(int index) {
                    return inputs_.get(index);
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder getInputsOrBuilder(
                        int index) {
                    return inputs_.get(index);
                }

                public static final int OUTPUTS_FIELD_NUMBER = 5;
                private java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param> outputs_;
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                 */
                public java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param> getOutputsList() {
                    return outputs_;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                 */
                public java.util.List<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder>
                getOutputsOrBuilderList() {
                    return outputs_;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                 */
                public int getOutputsCount() {
                    return outputs_.size();
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param getOutputs(int index) {
                    return outputs_.get(index);
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder getOutputsOrBuilder(
                        int index) {
                    return outputs_.get(index);
                }

                public static final int TYPE_FIELD_NUMBER = 6;
                private int type_;
                /**
                 * <code>.protocol.SmartContract.ABI.Entry.EntryType type = 6;</code>
                 */
                public int getTypeValue() {
                    return type_;
                }
                /**
                 * <code>.protocol.SmartContract.ABI.Entry.EntryType type = 6;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType getType() {
                    com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType result = com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType.valueOf(type_);
                    return result == null ? com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType.UNRECOGNIZED : result;
                }

                public static final int PAYABLE_FIELD_NUMBER = 7;
                private boolean payable_;
                /**
                 * <code>bool payable = 7;</code>
                 */
                public boolean getPayable() {
                    return payable_;
                }

                public static final int STATEMUTABILITY_FIELD_NUMBER = 8;
                private int stateMutability_;
                /**
                 * <code>.protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;</code>
                 */
                public int getStateMutabilityValue() {
                    return stateMutability_;
                }
                /**
                 * <code>.protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType getStateMutability() {
                    com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType result = com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType.valueOf(stateMutability_);
                    return result == null ? com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType.UNRECOGNIZED : result;
                }

                private byte memoizedIsInitialized = -1;
                public final boolean isInitialized() {
                    byte isInitialized = memoizedIsInitialized;
                    if (isInitialized == 1) return true;
                    if (isInitialized == 0) return false;

                    memoizedIsInitialized = 1;
                    return true;
                }

                public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
                    if (anonymous_ != false) {
                        output.writeBool(1, anonymous_);
                    }
                    if (constant_ != false) {
                        output.writeBool(2, constant_);
                    }
                    if (!getNameBytes().isEmpty()) {
                        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
                    }
                    for (int i = 0; i < inputs_.size(); i++) {
                        output.writeMessage(4, inputs_.get(i));
                    }
                    for (int i = 0; i < outputs_.size(); i++) {
                        output.writeMessage(5, outputs_.get(i));
                    }
                    if (type_ != com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType.UnknownEntryType.getNumber()) {
                        output.writeEnum(6, type_);
                    }
                    if (payable_ != false) {
                        output.writeBool(7, payable_);
                    }
                    if (stateMutability_ != com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType.UnknownMutabilityType.getNumber()) {
                        output.writeEnum(8, stateMutability_);
                    }
                    unknownFields.writeTo(output);
                }

                public int getSerializedSize() {
                    int size = memoizedSize;
                    if (size != -1) return size;

                    size = 0;
                    if (anonymous_ != false) {
                        size += com.google.protobuf.CodedOutputStream
                                .computeBoolSize(1, anonymous_);
                    }
                    if (constant_ != false) {
                        size += com.google.protobuf.CodedOutputStream
                                .computeBoolSize(2, constant_);
                    }
                    if (!getNameBytes().isEmpty()) {
                        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
                    }
                    for (int i = 0; i < inputs_.size(); i++) {
                        size += com.google.protobuf.CodedOutputStream
                                .computeMessageSize(4, inputs_.get(i));
                    }
                    for (int i = 0; i < outputs_.size(); i++) {
                        size += com.google.protobuf.CodedOutputStream
                                .computeMessageSize(5, outputs_.get(i));
                    }
                    if (type_ != com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType.UnknownEntryType.getNumber()) {
                        size += com.google.protobuf.CodedOutputStream
                                .computeEnumSize(6, type_);
                    }
                    if (payable_ != false) {
                        size += com.google.protobuf.CodedOutputStream
                                .computeBoolSize(7, payable_);
                    }
                    if (stateMutability_ != com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType.UnknownMutabilityType.getNumber()) {
                        size += com.google.protobuf.CodedOutputStream
                                .computeEnumSize(8, stateMutability_);
                    }
                    size += unknownFields.getSerializedSize();
                    memoizedSize = size;
                    return size;
                }

                @java.lang.Override
                public boolean equals(final java.lang.Object obj) {
                    if (obj == this) {
                        return true;
                    }
                    if (!(obj instanceof com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry)) {
                        return super.equals(obj);
                    }
                    com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry other = (com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry) obj;

                    boolean result = true;
                    result = result && (getAnonymous()
                            == other.getAnonymous());
                    result = result && (getConstant()
                            == other.getConstant());
                    result = result && getName()
                            .equals(other.getName());
                    result = result && getInputsList()
                            .equals(other.getInputsList());
                    result = result && getOutputsList()
                            .equals(other.getOutputsList());
                    result = result && type_ == other.type_;
                    result = result && (getPayable()
                            == other.getPayable());
                    result = result && stateMutability_ == other.stateMutability_;
                    result = result && unknownFields.equals(other.unknownFields);
                    return result;
                }

                @java.lang.Override
                public int hashCode() {
                    if (memoizedHashCode != 0) {
                        return memoizedHashCode;
                    }
                    int hash = 41;
                    hash = (19 * hash) + getDescriptor().hashCode();
                    hash = (37 * hash) + ANONYMOUS_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getAnonymous());
                    hash = (37 * hash) + CONSTANT_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getConstant());
                    hash = (37 * hash) + NAME_FIELD_NUMBER;
                    hash = (53 * hash) + getName().hashCode();
                    if (getInputsCount() > 0) {
                        hash = (37 * hash) + INPUTS_FIELD_NUMBER;
                        hash = (53 * hash) + getInputsList().hashCode();
                    }
                    if (getOutputsCount() > 0) {
                        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
                        hash = (53 * hash) + getOutputsList().hashCode();
                    }
                    hash = (37 * hash) + TYPE_FIELD_NUMBER;
                    hash = (53 * hash) + type_;
                    hash = (37 * hash) + PAYABLE_FIELD_NUMBER;
                    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                            getPayable());
                    hash = (37 * hash) + STATEMUTABILITY_FIELD_NUMBER;
                    hash = (53 * hash) + stateMutability_;
                    hash = (29 * hash) + unknownFields.hashCode();
                    memoizedHashCode = hash;
                    return hash;
                }

                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseFrom(
                        java.nio.ByteBuffer data)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return PARSER.parseFrom(data);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseFrom(
                        java.nio.ByteBuffer data,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return PARSER.parseFrom(data, extensionRegistry);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseFrom(
                        com.google.protobuf.ByteString data)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return PARSER.parseFrom(data);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseFrom(
                        com.google.protobuf.ByteString data,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return PARSER.parseFrom(data, extensionRegistry);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseFrom(byte[] data)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return PARSER.parseFrom(data);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseFrom(
                        byte[] data,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return PARSER.parseFrom(data, extensionRegistry);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseFrom(java.io.InputStream input)
                        throws java.io.IOException {
                    return com.google.protobuf.GeneratedMessageV3
                            .parseWithIOException(PARSER, input);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseFrom(
                        java.io.InputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    return com.google.protobuf.GeneratedMessageV3
                            .parseWithIOException(PARSER, input, extensionRegistry);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseDelimitedFrom(java.io.InputStream input)
                        throws java.io.IOException {
                    return com.google.protobuf.GeneratedMessageV3
                            .parseDelimitedWithIOException(PARSER, input);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseDelimitedFrom(
                        java.io.InputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    return com.google.protobuf.GeneratedMessageV3
                            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseFrom(
                        com.google.protobuf.CodedInputStream input)
                        throws java.io.IOException {
                    return com.google.protobuf.GeneratedMessageV3
                            .parseWithIOException(PARSER, input);
                }
                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parseFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    return com.google.protobuf.GeneratedMessageV3
                            .parseWithIOException(PARSER, input, extensionRegistry);
                }

                public Builder newBuilderForType() { return newBuilder(); }
                public static Builder newBuilder() {
                    return DEFAULT_INSTANCE.toBuilder();
                }
                public static Builder newBuilder(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry prototype) {
                    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
                }
                public Builder toBuilder() {
                    return this == DEFAULT_INSTANCE
                            ? new Builder() : new Builder().mergeFrom(this);
                }

                @java.lang.Override
                protected Builder newBuilderForType(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    Builder builder = new Builder(parent);
                    return builder;
                }
                /**
                 * Protobuf type {@code protocol.SmartContract.ABI.Entry}
                 */
                public static final class Builder extends
                        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                        // @@protoc_insertion_point(builder_implements:protocol.SmartContract.ABI.Entry)
                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.EntryOrBuilder {
                    public static final com.google.protobuf.Descriptors.Descriptor
                    getDescriptor() {
                        return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_Entry_descriptor;
                    }

                    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                    internalGetFieldAccessorTable() {
                        return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_Entry_fieldAccessorTable
                                .ensureFieldAccessorsInitialized(
                                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.class, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder.class);
                    }

                    // Construct using com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.newBuilder()
                    private Builder() {
                        maybeForceBuilderInitialization();
                    }

                    private Builder(
                            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                        super(parent);
                        maybeForceBuilderInitialization();
                    }
                    private void maybeForceBuilderInitialization() {
                        if (com.google.protobuf.GeneratedMessageV3
                                .alwaysUseFieldBuilders) {
                            getInputsFieldBuilder();
                            getOutputsFieldBuilder();
                        }
                    }
                    public Builder clear() {
                        super.clear();
                        anonymous_ = false;

                        constant_ = false;

                        name_ = "";

                        if (inputsBuilder_ == null) {
                            inputs_ = java.util.Collections.emptyList();
                            bitField0_ = (bitField0_ & ~0x00000008);
                        } else {
                            inputsBuilder_.clear();
                        }
                        if (outputsBuilder_ == null) {
                            outputs_ = java.util.Collections.emptyList();
                            bitField0_ = (bitField0_ & ~0x00000010);
                        } else {
                            outputsBuilder_.clear();
                        }
                        type_ = 0;

                        payable_ = false;

                        stateMutability_ = 0;

                        return this;
                    }

                    public com.google.protobuf.Descriptors.Descriptor
                    getDescriptorForType() {
                        return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_Entry_descriptor;
                    }

                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry getDefaultInstanceForType() {
                        return com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.getDefaultInstance();
                    }

                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry build() {
                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry result = buildPartial();
                        if (!result.isInitialized()) {
                            throw newUninitializedMessageException(result);
                        }
                        return result;
                    }

                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry buildPartial() {
                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry result = new com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry(this);
                        int from_bitField0_ = bitField0_;
                        int to_bitField0_ = 0;
                        result.anonymous_ = anonymous_;
                        result.constant_ = constant_;
                        result.name_ = name_;
                        if (inputsBuilder_ == null) {
                            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                                inputs_ = java.util.Collections.unmodifiableList(inputs_);
                                bitField0_ = (bitField0_ & ~0x00000008);
                            }
                            result.inputs_ = inputs_;
                        } else {
                            result.inputs_ = inputsBuilder_.build();
                        }
                        if (outputsBuilder_ == null) {
                            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                                outputs_ = java.util.Collections.unmodifiableList(outputs_);
                                bitField0_ = (bitField0_ & ~0x00000010);
                            }
                            result.outputs_ = outputs_;
                        } else {
                            result.outputs_ = outputsBuilder_.build();
                        }
                        result.type_ = type_;
                        result.payable_ = payable_;
                        result.stateMutability_ = stateMutability_;
                        result.bitField0_ = to_bitField0_;
                        onBuilt();
                        return result;
                    }

                    public Builder clone() {
                        return (Builder) super.clone();
                    }
                    public Builder setField(
                            com.google.protobuf.Descriptors.FieldDescriptor field,
                            java.lang.Object value) {
                        return (Builder) super.setField(field, value);
                    }
                    public Builder clearField(
                            com.google.protobuf.Descriptors.FieldDescriptor field) {
                        return (Builder) super.clearField(field);
                    }
                    public Builder clearOneof(
                            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                        return (Builder) super.clearOneof(oneof);
                    }
                    public Builder setRepeatedField(
                            com.google.protobuf.Descriptors.FieldDescriptor field,
                            int index, java.lang.Object value) {
                        return (Builder) super.setRepeatedField(field, index, value);
                    }
                    public Builder addRepeatedField(
                            com.google.protobuf.Descriptors.FieldDescriptor field,
                            java.lang.Object value) {
                        return (Builder) super.addRepeatedField(field, value);
                    }
                    public Builder mergeFrom(com.google.protobuf.Message other) {
                        if (other instanceof com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry) {
                            return mergeFrom((com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry)other);
                        } else {
                            super.mergeFrom(other);
                            return this;
                        }
                    }

                    public Builder mergeFrom(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry other) {
                        if (other == com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.getDefaultInstance()) return this;
                        if (other.getAnonymous() != false) {
                            setAnonymous(other.getAnonymous());
                        }
                        if (other.getConstant() != false) {
                            setConstant(other.getConstant());
                        }
                        if (!other.getName().isEmpty()) {
                            name_ = other.name_;
                            onChanged();
                        }
                        if (inputsBuilder_ == null) {
                            if (!other.inputs_.isEmpty()) {
                                if (inputs_.isEmpty()) {
                                    inputs_ = other.inputs_;
                                    bitField0_ = (bitField0_ & ~0x00000008);
                                } else {
                                    ensureInputsIsMutable();
                                    inputs_.addAll(other.inputs_);
                                }
                                onChanged();
                            }
                        } else {
                            if (!other.inputs_.isEmpty()) {
                                if (inputsBuilder_.isEmpty()) {
                                    inputsBuilder_.dispose();
                                    inputsBuilder_ = null;
                                    inputs_ = other.inputs_;
                                    bitField0_ = (bitField0_ & ~0x00000008);
                                    inputsBuilder_ =
                                            com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                                    getInputsFieldBuilder() : null;
                                } else {
                                    inputsBuilder_.addAllMessages(other.inputs_);
                                }
                            }
                        }
                        if (outputsBuilder_ == null) {
                            if (!other.outputs_.isEmpty()) {
                                if (outputs_.isEmpty()) {
                                    outputs_ = other.outputs_;
                                    bitField0_ = (bitField0_ & ~0x00000010);
                                } else {
                                    ensureOutputsIsMutable();
                                    outputs_.addAll(other.outputs_);
                                }
                                onChanged();
                            }
                        } else {
                            if (!other.outputs_.isEmpty()) {
                                if (outputsBuilder_.isEmpty()) {
                                    outputsBuilder_.dispose();
                                    outputsBuilder_ = null;
                                    outputs_ = other.outputs_;
                                    bitField0_ = (bitField0_ & ~0x00000010);
                                    outputsBuilder_ =
                                            com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                                    getOutputsFieldBuilder() : null;
                                } else {
                                    outputsBuilder_.addAllMessages(other.outputs_);
                                }
                            }
                        }
                        if (other.type_ != 0) {
                            setTypeValue(other.getTypeValue());
                        }
                        if (other.getPayable() != false) {
                            setPayable(other.getPayable());
                        }
                        if (other.stateMutability_ != 0) {
                            setStateMutabilityValue(other.getStateMutabilityValue());
                        }
                        this.mergeUnknownFields(other.unknownFields);
                        onChanged();
                        return this;
                    }

                    public final boolean isInitialized() {
                        return true;
                    }

                    public Builder mergeFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws java.io.IOException {
                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry parsedMessage = null;
                        try {
                            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                            parsedMessage = (com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry) e.getUnfinishedMessage();
                            throw e.unwrapIOException();
                        } finally {
                            if (parsedMessage != null) {
                                mergeFrom(parsedMessage);
                            }
                        }
                        return this;
                    }
                    private int bitField0_;

                    private boolean anonymous_ ;
                    /**
                     * <code>bool anonymous = 1;</code>
                     */
                    public boolean getAnonymous() {
                        return anonymous_;
                    }
                    /**
                     * <code>bool anonymous = 1;</code>
                     */
                    public Builder setAnonymous(boolean value) {

                        anonymous_ = value;
                        onChanged();
                        return this;
                    }
                    /**
                     * <code>bool anonymous = 1;</code>
                     */
                    public Builder clearAnonymous() {

                        anonymous_ = false;
                        onChanged();
                        return this;
                    }

                    private boolean constant_ ;
                    /**
                     * <code>bool constant = 2;</code>
                     */
                    public boolean getConstant() {
                        return constant_;
                    }
                    /**
                     * <code>bool constant = 2;</code>
                     */
                    public Builder setConstant(boolean value) {

                        constant_ = value;
                        onChanged();
                        return this;
                    }
                    /**
                     * <code>bool constant = 2;</code>
                     */
                    public Builder clearConstant() {

                        constant_ = false;
                        onChanged();
                        return this;
                    }

                    private java.lang.Object name_ = "";
                    /**
                     * <code>string name = 3;</code>
                     */
                    public java.lang.String getName() {
                        java.lang.Object ref = name_;
                        if (!(ref instanceof java.lang.String)) {
                            com.google.protobuf.ByteString bs =
                                    (com.google.protobuf.ByteString) ref;
                            java.lang.String s = bs.toStringUtf8();
                            name_ = s;
                            return s;
                        } else {
                            return (java.lang.String) ref;
                        }
                    }
                    /**
                     * <code>string name = 3;</code>
                     */
                    public com.google.protobuf.ByteString
                    getNameBytes() {
                        java.lang.Object ref = name_;
                        if (ref instanceof String) {
                            com.google.protobuf.ByteString b =
                                    com.google.protobuf.ByteString.copyFromUtf8(
                                            (java.lang.String) ref);
                            name_ = b;
                            return b;
                        } else {
                            return (com.google.protobuf.ByteString) ref;
                        }
                    }
                    /**
                     * <code>string name = 3;</code>
                     */
                    public Builder setName(
                            java.lang.String value) {
                        if (value == null) {
                            throw new NullPointerException();
                        }

                        name_ = value;
                        onChanged();
                        return this;
                    }
                    /**
                     * <code>string name = 3;</code>
                     */
                    public Builder clearName() {

                        name_ = getDefaultInstance().getName();
                        onChanged();
                        return this;
                    }
                    /**
                     * <code>string name = 3;</code>
                     */
                    public Builder setNameBytes(
                            com.google.protobuf.ByteString value) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        checkByteStringIsUtf8(value);

                        name_ = value;
                        onChanged();
                        return this;
                    }

                    private java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param> inputs_ =
                            java.util.Collections.emptyList();
                    private void ensureInputsIsMutable() {
                        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                            inputs_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param>(inputs_);
                            bitField0_ |= 0x00000008;
                        }
                    }

                    private com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder> inputsBuilder_;

                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param> getInputsList() {
                        if (inputsBuilder_ == null) {
                            return java.util.Collections.unmodifiableList(inputs_);
                        } else {
                            return inputsBuilder_.getMessageList();
                        }
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public int getInputsCount() {
                        if (inputsBuilder_ == null) {
                            return inputs_.size();
                        } else {
                            return inputsBuilder_.getCount();
                        }
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param getInputs(int index) {
                        if (inputsBuilder_ == null) {
                            return inputs_.get(index);
                        } else {
                            return inputsBuilder_.getMessage(index);
                        }
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public Builder setInputs(
                            int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param value) {
                        if (inputsBuilder_ == null) {
                            if (value == null) {
                                throw new NullPointerException();
                            }
                            ensureInputsIsMutable();
                            inputs_.set(index, value);
                            onChanged();
                        } else {
                            inputsBuilder_.setMessage(index, value);
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public Builder setInputs(
                            int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder builderForValue) {
                        if (inputsBuilder_ == null) {
                            ensureInputsIsMutable();
                            inputs_.set(index, builderForValue.build());
                            onChanged();
                        } else {
                            inputsBuilder_.setMessage(index, builderForValue.build());
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public Builder addInputs(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param value) {
                        if (inputsBuilder_ == null) {
                            if (value == null) {
                                throw new NullPointerException();
                            }
                            ensureInputsIsMutable();
                            inputs_.add(value);
                            onChanged();
                        } else {
                            inputsBuilder_.addMessage(value);
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public Builder addInputs(
                            int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param value) {
                        if (inputsBuilder_ == null) {
                            if (value == null) {
                                throw new NullPointerException();
                            }
                            ensureInputsIsMutable();
                            inputs_.add(index, value);
                            onChanged();
                        } else {
                            inputsBuilder_.addMessage(index, value);
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public Builder addInputs(
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder builderForValue) {
                        if (inputsBuilder_ == null) {
                            ensureInputsIsMutable();
                            inputs_.add(builderForValue.build());
                            onChanged();
                        } else {
                            inputsBuilder_.addMessage(builderForValue.build());
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public Builder addInputs(
                            int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder builderForValue) {
                        if (inputsBuilder_ == null) {
                            ensureInputsIsMutable();
                            inputs_.add(index, builderForValue.build());
                            onChanged();
                        } else {
                            inputsBuilder_.addMessage(index, builderForValue.build());
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public Builder addAllInputs(
                            java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param> values) {
                        if (inputsBuilder_ == null) {
                            ensureInputsIsMutable();
                            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                                    values, inputs_);
                            onChanged();
                        } else {
                            inputsBuilder_.addAllMessages(values);
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public Builder clearInputs() {
                        if (inputsBuilder_ == null) {
                            inputs_ = java.util.Collections.emptyList();
                            bitField0_ = (bitField0_ & ~0x00000008);
                            onChanged();
                        } else {
                            inputsBuilder_.clear();
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public Builder removeInputs(int index) {
                        if (inputsBuilder_ == null) {
                            ensureInputsIsMutable();
                            inputs_.remove(index);
                            onChanged();
                        } else {
                            inputsBuilder_.remove(index);
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder getInputsBuilder(
                            int index) {
                        return getInputsFieldBuilder().getBuilder(index);
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder getInputsOrBuilder(
                            int index) {
                        if (inputsBuilder_ == null) {
                            return inputs_.get(index);  } else {
                            return inputsBuilder_.getMessageOrBuilder(index);
                        }
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public java.util.List<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder>
                    getInputsOrBuilderList() {
                        if (inputsBuilder_ != null) {
                            return inputsBuilder_.getMessageOrBuilderList();
                        } else {
                            return java.util.Collections.unmodifiableList(inputs_);
                        }
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder addInputsBuilder() {
                        return getInputsFieldBuilder().addBuilder(
                                com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.getDefaultInstance());
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder addInputsBuilder(
                            int index) {
                        return getInputsFieldBuilder().addBuilder(
                                index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.getDefaultInstance());
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param inputs = 4;</code>
                     */
                    public java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder>
                    getInputsBuilderList() {
                        return getInputsFieldBuilder().getBuilderList();
                    }
                    private com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder>
                    getInputsFieldBuilder() {
                        if (inputsBuilder_ == null) {
                            inputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                                    com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder>(
                                    inputs_,
                                    ((bitField0_ & 0x00000008) == 0x00000008),
                                    getParentForChildren(),
                                    isClean());
                            inputs_ = null;
                        }
                        return inputsBuilder_;
                    }

                    private java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param> outputs_ =
                            java.util.Collections.emptyList();
                    private void ensureOutputsIsMutable() {
                        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
                            outputs_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param>(outputs_);
                            bitField0_ |= 0x00000010;
                        }
                    }

                    private com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder> outputsBuilder_;

                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param> getOutputsList() {
                        if (outputsBuilder_ == null) {
                            return java.util.Collections.unmodifiableList(outputs_);
                        } else {
                            return outputsBuilder_.getMessageList();
                        }
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public int getOutputsCount() {
                        if (outputsBuilder_ == null) {
                            return outputs_.size();
                        } else {
                            return outputsBuilder_.getCount();
                        }
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param getOutputs(int index) {
                        if (outputsBuilder_ == null) {
                            return outputs_.get(index);
                        } else {
                            return outputsBuilder_.getMessage(index);
                        }
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public Builder setOutputs(
                            int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param value) {
                        if (outputsBuilder_ == null) {
                            if (value == null) {
                                throw new NullPointerException();
                            }
                            ensureOutputsIsMutable();
                            outputs_.set(index, value);
                            onChanged();
                        } else {
                            outputsBuilder_.setMessage(index, value);
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public Builder setOutputs(
                            int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder builderForValue) {
                        if (outputsBuilder_ == null) {
                            ensureOutputsIsMutable();
                            outputs_.set(index, builderForValue.build());
                            onChanged();
                        } else {
                            outputsBuilder_.setMessage(index, builderForValue.build());
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public Builder addOutputs(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param value) {
                        if (outputsBuilder_ == null) {
                            if (value == null) {
                                throw new NullPointerException();
                            }
                            ensureOutputsIsMutable();
                            outputs_.add(value);
                            onChanged();
                        } else {
                            outputsBuilder_.addMessage(value);
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public Builder addOutputs(
                            int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param value) {
                        if (outputsBuilder_ == null) {
                            if (value == null) {
                                throw new NullPointerException();
                            }
                            ensureOutputsIsMutable();
                            outputs_.add(index, value);
                            onChanged();
                        } else {
                            outputsBuilder_.addMessage(index, value);
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public Builder addOutputs(
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder builderForValue) {
                        if (outputsBuilder_ == null) {
                            ensureOutputsIsMutable();
                            outputs_.add(builderForValue.build());
                            onChanged();
                        } else {
                            outputsBuilder_.addMessage(builderForValue.build());
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public Builder addOutputs(
                            int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder builderForValue) {
                        if (outputsBuilder_ == null) {
                            ensureOutputsIsMutable();
                            outputs_.add(index, builderForValue.build());
                            onChanged();
                        } else {
                            outputsBuilder_.addMessage(index, builderForValue.build());
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public Builder addAllOutputs(
                            java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param> values) {
                        if (outputsBuilder_ == null) {
                            ensureOutputsIsMutable();
                            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                                    values, outputs_);
                            onChanged();
                        } else {
                            outputsBuilder_.addAllMessages(values);
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public Builder clearOutputs() {
                        if (outputsBuilder_ == null) {
                            outputs_ = java.util.Collections.emptyList();
                            bitField0_ = (bitField0_ & ~0x00000010);
                            onChanged();
                        } else {
                            outputsBuilder_.clear();
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public Builder removeOutputs(int index) {
                        if (outputsBuilder_ == null) {
                            ensureOutputsIsMutable();
                            outputs_.remove(index);
                            onChanged();
                        } else {
                            outputsBuilder_.remove(index);
                        }
                        return this;
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder getOutputsBuilder(
                            int index) {
                        return getOutputsFieldBuilder().getBuilder(index);
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder getOutputsOrBuilder(
                            int index) {
                        if (outputsBuilder_ == null) {
                            return outputs_.get(index);  } else {
                            return outputsBuilder_.getMessageOrBuilder(index);
                        }
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public java.util.List<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder>
                    getOutputsOrBuilderList() {
                        if (outputsBuilder_ != null) {
                            return outputsBuilder_.getMessageOrBuilderList();
                        } else {
                            return java.util.Collections.unmodifiableList(outputs_);
                        }
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder addOutputsBuilder() {
                        return getOutputsFieldBuilder().addBuilder(
                                com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.getDefaultInstance());
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder addOutputsBuilder(
                            int index) {
                        return getOutputsFieldBuilder().addBuilder(
                                index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.getDefaultInstance());
                    }
                    /**
                     * <code>repeated .protocol.SmartContract.ABI.Entry.Param outputs = 5;</code>
                     */
                    public java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder>
                    getOutputsBuilderList() {
                        return getOutputsFieldBuilder().getBuilderList();
                    }
                    private com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder>
                    getOutputsFieldBuilder() {
                        if (outputsBuilder_ == null) {
                            outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                                    com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Param.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.ParamOrBuilder>(
                                    outputs_,
                                    ((bitField0_ & 0x00000010) == 0x00000010),
                                    getParentForChildren(),
                                    isClean());
                            outputs_ = null;
                        }
                        return outputsBuilder_;
                    }

                    private int type_ = 0;
                    /**
                     * <code>.protocol.SmartContract.ABI.Entry.EntryType type = 6;</code>
                     */
                    public int getTypeValue() {
                        return type_;
                    }
                    /**
                     * <code>.protocol.SmartContract.ABI.Entry.EntryType type = 6;</code>
                     */
                    public Builder setTypeValue(int value) {
                        type_ = value;
                        onChanged();
                        return this;
                    }
                    /**
                     * <code>.protocol.SmartContract.ABI.Entry.EntryType type = 6;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType getType() {
                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType result = com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType.valueOf(type_);
                        return result == null ? com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType.UNRECOGNIZED : result;
                    }
                    /**
                     * <code>.protocol.SmartContract.ABI.Entry.EntryType type = 6;</code>
                     */
                    public Builder setType(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.EntryType value) {
                        if (value == null) {
                            throw new NullPointerException();
                        }

                        type_ = value.getNumber();
                        onChanged();
                        return this;
                    }
                    /**
                     * <code>.protocol.SmartContract.ABI.Entry.EntryType type = 6;</code>
                     */
                    public Builder clearType() {

                        type_ = 0;
                        onChanged();
                        return this;
                    }

                    private boolean payable_ ;
                    /**
                     * <code>bool payable = 7;</code>
                     */
                    public boolean getPayable() {
                        return payable_;
                    }
                    /**
                     * <code>bool payable = 7;</code>
                     */
                    public Builder setPayable(boolean value) {

                        payable_ = value;
                        onChanged();
                        return this;
                    }
                    /**
                     * <code>bool payable = 7;</code>
                     */
                    public Builder clearPayable() {

                        payable_ = false;
                        onChanged();
                        return this;
                    }

                    private int stateMutability_ = 0;
                    /**
                     * <code>.protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;</code>
                     */
                    public int getStateMutabilityValue() {
                        return stateMutability_;
                    }
                    /**
                     * <code>.protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;</code>
                     */
                    public Builder setStateMutabilityValue(int value) {
                        stateMutability_ = value;
                        onChanged();
                        return this;
                    }
                    /**
                     * <code>.protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;</code>
                     */
                    public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType getStateMutability() {
                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType result = com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType.valueOf(stateMutability_);
                        return result == null ? com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType.UNRECOGNIZED : result;
                    }
                    /**
                     * <code>.protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;</code>
                     */
                    public Builder setStateMutability(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.StateMutabilityType value) {
                        if (value == null) {
                            throw new NullPointerException();
                        }

                        stateMutability_ = value.getNumber();
                        onChanged();
                        return this;
                    }
                    /**
                     * <code>.protocol.SmartContract.ABI.Entry.StateMutabilityType stateMutability = 8;</code>
                     */
                    public Builder clearStateMutability() {

                        stateMutability_ = 0;
                        onChanged();
                        return this;
                    }
                    public final Builder setUnknownFields(
                            final com.google.protobuf.UnknownFieldSet unknownFields) {
                        return super.setUnknownFieldsProto3(unknownFields);
                    }

                    public final Builder mergeUnknownFields(
                            final com.google.protobuf.UnknownFieldSet unknownFields) {
                        return super.mergeUnknownFields(unknownFields);
                    }


                    // @@protoc_insertion_point(builder_scope:protocol.SmartContract.ABI.Entry)
                }

                // @@protoc_insertion_point(class_scope:protocol.SmartContract.ABI.Entry)
                private static final com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry DEFAULT_INSTANCE;
                static {
                    DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry();
                }

                public static com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry getDefaultInstance() {
                    return DEFAULT_INSTANCE;
                }

                private static final com.google.protobuf.Parser<Entry>
                        PARSER = new com.google.protobuf.AbstractParser<Entry>() {
                    public Entry parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new Entry(input, extensionRegistry);
                    }
                };

                public static com.google.protobuf.Parser<Entry> parser() {
                    return PARSER;
                }

                @java.lang.Override
                public com.google.protobuf.Parser<Entry> getParserForType() {
                    return PARSER;
                }

                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry getDefaultInstanceForType() {
                    return DEFAULT_INSTANCE;
                }

            }

            public static final int ENTRYS_FIELD_NUMBER = 1;
            private java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry> entrys_;
            /**
             * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry> getEntrysList() {
                return entrys_;
            }
            /**
             * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.EntryOrBuilder>
            getEntrysOrBuilderList() {
                return entrys_;
            }
            /**
             * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
             */
            public int getEntrysCount() {
                return entrys_.size();
            }
            /**
             * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry getEntrys(int index) {
                return entrys_.get(index);
            }
            /**
             * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
             */
            public com.cryptowallet.crypto.Protocol.SmartContract.ABI.EntryOrBuilder getEntrysOrBuilder(
                    int index) {
                return entrys_.get(index);
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                for (int i = 0; i < entrys_.size(); i++) {
                    output.writeMessage(1, entrys_.get(i));
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                for (int i = 0; i < entrys_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(1, entrys_.get(i));
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.SmartContract.ABI)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.SmartContract.ABI other = (com.cryptowallet.crypto.Protocol.SmartContract.ABI) obj;

                boolean result = true;
                result = result && getEntrysList()
                        .equals(other.getEntrysList());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                if (getEntrysCount() > 0) {
                    hash = (37 * hash) + ENTRYS_FIELD_NUMBER;
                    hash = (53 * hash) + getEntrysList().hashCode();
                }
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.SmartContract.ABI prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.SmartContract.ABI}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.SmartContract.ABI)
                    com.cryptowallet.crypto.Protocol.SmartContract.ABIOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.SmartContract.ABI.class, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.SmartContract.ABI.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                        getEntrysFieldBuilder();
                    }
                }
                public Builder clear() {
                    super.clear();
                    if (entrysBuilder_ == null) {
                        entrys_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        entrysBuilder_.clear();
                    }
                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_ABI_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.SmartContract.ABI getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.SmartContract.ABI.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.SmartContract.ABI build() {
                    com.cryptowallet.crypto.Protocol.SmartContract.ABI result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.SmartContract.ABI buildPartial() {
                    com.cryptowallet.crypto.Protocol.SmartContract.ABI result = new com.cryptowallet.crypto.Protocol.SmartContract.ABI(this);
                    int from_bitField0_ = bitField0_;
                    if (entrysBuilder_ == null) {
                        if (((bitField0_ & 0x00000001) == 0x00000001)) {
                            entrys_ = java.util.Collections.unmodifiableList(entrys_);
                            bitField0_ = (bitField0_ & ~0x00000001);
                        }
                        result.entrys_ = entrys_;
                    } else {
                        result.entrys_ = entrysBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.SmartContract.ABI) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.SmartContract.ABI)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.SmartContract.ABI other) {
                    if (other == com.cryptowallet.crypto.Protocol.SmartContract.ABI.getDefaultInstance()) return this;
                    if (entrysBuilder_ == null) {
                        if (!other.entrys_.isEmpty()) {
                            if (entrys_.isEmpty()) {
                                entrys_ = other.entrys_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                            } else {
                                ensureEntrysIsMutable();
                                entrys_.addAll(other.entrys_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.entrys_.isEmpty()) {
                            if (entrysBuilder_.isEmpty()) {
                                entrysBuilder_.dispose();
                                entrysBuilder_ = null;
                                entrys_ = other.entrys_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                                entrysBuilder_ =
                                        com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                                getEntrysFieldBuilder() : null;
                            } else {
                                entrysBuilder_.addAllMessages(other.entrys_);
                            }
                        }
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.SmartContract.ABI parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.SmartContract.ABI) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }
                private int bitField0_;

                private java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry> entrys_ =
                        java.util.Collections.emptyList();
                private void ensureEntrysIsMutable() {
                    if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                        entrys_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry>(entrys_);
                        bitField0_ |= 0x00000001;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilderV3<
                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABI.EntryOrBuilder> entrysBuilder_;

                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry> getEntrysList() {
                    if (entrysBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(entrys_);
                    } else {
                        return entrysBuilder_.getMessageList();
                    }
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public int getEntrysCount() {
                    if (entrysBuilder_ == null) {
                        return entrys_.size();
                    } else {
                        return entrysBuilder_.getCount();
                    }
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry getEntrys(int index) {
                    if (entrysBuilder_ == null) {
                        return entrys_.get(index);
                    } else {
                        return entrysBuilder_.getMessage(index);
                    }
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public Builder setEntrys(
                        int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry value) {
                    if (entrysBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureEntrysIsMutable();
                        entrys_.set(index, value);
                        onChanged();
                    } else {
                        entrysBuilder_.setMessage(index, value);
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public Builder setEntrys(
                        int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder builderForValue) {
                    if (entrysBuilder_ == null) {
                        ensureEntrysIsMutable();
                        entrys_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        entrysBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public Builder addEntrys(com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry value) {
                    if (entrysBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureEntrysIsMutable();
                        entrys_.add(value);
                        onChanged();
                    } else {
                        entrysBuilder_.addMessage(value);
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public Builder addEntrys(
                        int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry value) {
                    if (entrysBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureEntrysIsMutable();
                        entrys_.add(index, value);
                        onChanged();
                    } else {
                        entrysBuilder_.addMessage(index, value);
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public Builder addEntrys(
                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder builderForValue) {
                    if (entrysBuilder_ == null) {
                        ensureEntrysIsMutable();
                        entrys_.add(builderForValue.build());
                        onChanged();
                    } else {
                        entrysBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public Builder addEntrys(
                        int index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder builderForValue) {
                    if (entrysBuilder_ == null) {
                        ensureEntrysIsMutable();
                        entrys_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        entrysBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public Builder addAllEntrys(
                        java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry> values) {
                    if (entrysBuilder_ == null) {
                        ensureEntrysIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                                values, entrys_);
                        onChanged();
                    } else {
                        entrysBuilder_.addAllMessages(values);
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public Builder clearEntrys() {
                    if (entrysBuilder_ == null) {
                        entrys_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                        onChanged();
                    } else {
                        entrysBuilder_.clear();
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public Builder removeEntrys(int index) {
                    if (entrysBuilder_ == null) {
                        ensureEntrysIsMutable();
                        entrys_.remove(index);
                        onChanged();
                    } else {
                        entrysBuilder_.remove(index);
                    }
                    return this;
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder getEntrysBuilder(
                        int index) {
                    return getEntrysFieldBuilder().getBuilder(index);
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.EntryOrBuilder getEntrysOrBuilder(
                        int index) {
                    if (entrysBuilder_ == null) {
                        return entrys_.get(index);  } else {
                        return entrysBuilder_.getMessageOrBuilder(index);
                    }
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public java.util.List<? extends com.cryptowallet.crypto.Protocol.SmartContract.ABI.EntryOrBuilder>
                getEntrysOrBuilderList() {
                    if (entrysBuilder_ != null) {
                        return entrysBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(entrys_);
                    }
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder addEntrysBuilder() {
                    return getEntrysFieldBuilder().addBuilder(
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.getDefaultInstance());
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder addEntrysBuilder(
                        int index) {
                    return getEntrysFieldBuilder().addBuilder(
                            index, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.getDefaultInstance());
                }
                /**
                 * <code>repeated .protocol.SmartContract.ABI.Entry entrys = 1;</code>
                 */
                public java.util.List<com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder>
                getEntrysBuilderList() {
                    return getEntrysFieldBuilder().getBuilderList();
                }
                private com.google.protobuf.RepeatedFieldBuilderV3<
                        com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABI.EntryOrBuilder>
                getEntrysFieldBuilder() {
                    if (entrysBuilder_ == null) {
                        entrysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                                com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Entry.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABI.EntryOrBuilder>(
                                entrys_,
                                ((bitField0_ & 0x00000001) == 0x00000001),
                                getParentForChildren(),
                                isClean());
                        entrys_ = null;
                    }
                    return entrysBuilder_;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.SmartContract.ABI)
            }

            // @@protoc_insertion_point(class_scope:protocol.SmartContract.ABI)
            private static final com.cryptowallet.crypto.Protocol.SmartContract.ABI DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.SmartContract.ABI();
            }

            public static com.cryptowallet.crypto.Protocol.SmartContract.ABI getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<ABI>
                    PARSER = new com.google.protobuf.AbstractParser<ABI>() {
                public ABI parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new ABI(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<ABI> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<ABI> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.SmartContract.ABI getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        public static final int ORIGIN_ADDRESS_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString originAddress_;
        /**
         * <code>bytes origin_address = 1;</code>
         */
        public com.google.protobuf.ByteString getOriginAddress() {
            return originAddress_;
        }

        public static final int CONTRACT_ADDRESS_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString contractAddress_;
        /**
         * <code>bytes contract_address = 2;</code>
         */
        public com.google.protobuf.ByteString getContractAddress() {
            return contractAddress_;
        }

        public static final int ABI_FIELD_NUMBER = 3;
        private com.cryptowallet.crypto.Protocol.SmartContract.ABI abi_;
        /**
         * <code>.protocol.SmartContract.ABI abi = 3;</code>
         */
        public boolean hasAbi() {
            return abi_ != null;
        }
        /**
         * <code>.protocol.SmartContract.ABI abi = 3;</code>
         */
        public com.cryptowallet.crypto.Protocol.SmartContract.ABI getAbi() {
            return abi_ == null ? com.cryptowallet.crypto.Protocol.SmartContract.ABI.getDefaultInstance() : abi_;
        }
        /**
         * <code>.protocol.SmartContract.ABI abi = 3;</code>
         */
        public com.cryptowallet.crypto.Protocol.SmartContract.ABIOrBuilder getAbiOrBuilder() {
            return getAbi();
        }

        public static final int BYTECODE_FIELD_NUMBER = 4;
        private com.google.protobuf.ByteString bytecode_;
        /**
         * <code>bytes bytecode = 4;</code>
         */
        public com.google.protobuf.ByteString getBytecode() {
            return bytecode_;
        }

        public static final int CALL_VALUE_FIELD_NUMBER = 5;
        private long callValue_;
        /**
         * <code>int64 call_value = 5;</code>
         */
        public long getCallValue() {
            return callValue_;
        }

        public static final int CONSUME_USER_RESOURCE_PERCENT_FIELD_NUMBER = 6;
        private long consumeUserResourcePercent_;
        /**
         * <code>int64 consume_user_resource_percent = 6;</code>
         */
        public long getConsumeUserResourcePercent() {
            return consumeUserResourcePercent_;
        }

        public static final int NAME_FIELD_NUMBER = 7;
        private volatile java.lang.Object name_;
        /**
         * <code>string name = 7;</code>
         */
        public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                name_ = s;
                return s;
            }
        }
        /**
         * <code>string name = 7;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ORIGIN_ENERGY_LIMIT_FIELD_NUMBER = 8;
        private long originEnergyLimit_;
        /**
         * <code>int64 origin_energy_limit = 8;</code>
         */
        public long getOriginEnergyLimit() {
            return originEnergyLimit_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!originAddress_.isEmpty()) {
                output.writeBytes(1, originAddress_);
            }
            if (!contractAddress_.isEmpty()) {
                output.writeBytes(2, contractAddress_);
            }
            if (abi_ != null) {
                output.writeMessage(3, getAbi());
            }
            if (!bytecode_.isEmpty()) {
                output.writeBytes(4, bytecode_);
            }
            if (callValue_ != 0L) {
                output.writeInt64(5, callValue_);
            }
            if (consumeUserResourcePercent_ != 0L) {
                output.writeInt64(6, consumeUserResourcePercent_);
            }
            if (!getNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, name_);
            }
            if (originEnergyLimit_ != 0L) {
                output.writeInt64(8, originEnergyLimit_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!originAddress_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, originAddress_);
            }
            if (!contractAddress_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, contractAddress_);
            }
            if (abi_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, getAbi());
            }
            if (!bytecode_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(4, bytecode_);
            }
            if (callValue_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(5, callValue_);
            }
            if (consumeUserResourcePercent_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(6, consumeUserResourcePercent_);
            }
            if (!getNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, name_);
            }
            if (originEnergyLimit_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(8, originEnergyLimit_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.SmartContract)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.SmartContract other = (com.cryptowallet.crypto.Protocol.SmartContract) obj;

            boolean result = true;
            result = result && getOriginAddress()
                    .equals(other.getOriginAddress());
            result = result && getContractAddress()
                    .equals(other.getContractAddress());
            result = result && (hasAbi() == other.hasAbi());
            if (hasAbi()) {
                result = result && getAbi()
                        .equals(other.getAbi());
            }
            result = result && getBytecode()
                    .equals(other.getBytecode());
            result = result && (getCallValue()
                    == other.getCallValue());
            result = result && (getConsumeUserResourcePercent()
                    == other.getConsumeUserResourcePercent());
            result = result && getName()
                    .equals(other.getName());
            result = result && (getOriginEnergyLimit()
                    == other.getOriginEnergyLimit());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ORIGIN_ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getOriginAddress().hashCode();
            hash = (37 * hash) + CONTRACT_ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getContractAddress().hashCode();
            if (hasAbi()) {
                hash = (37 * hash) + ABI_FIELD_NUMBER;
                hash = (53 * hash) + getAbi().hashCode();
            }
            hash = (37 * hash) + BYTECODE_FIELD_NUMBER;
            hash = (53 * hash) + getBytecode().hashCode();
            hash = (37 * hash) + CALL_VALUE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getCallValue());
            hash = (37 * hash) + CONSUME_USER_RESOURCE_PERCENT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getConsumeUserResourcePercent());
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + ORIGIN_ENERGY_LIMIT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getOriginEnergyLimit());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.SmartContract parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.SmartContract parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.SmartContract prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.SmartContract}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.SmartContract)
                com.cryptowallet.crypto.Protocol.SmartContractOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.SmartContract.class, com.cryptowallet.crypto.Protocol.SmartContract.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.SmartContract.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                originAddress_ = com.google.protobuf.ByteString.EMPTY;

                contractAddress_ = com.google.protobuf.ByteString.EMPTY;

                if (abiBuilder_ == null) {
                    abi_ = null;
                } else {
                    abi_ = null;
                    abiBuilder_ = null;
                }
                bytecode_ = com.google.protobuf.ByteString.EMPTY;

                callValue_ = 0L;

                consumeUserResourcePercent_ = 0L;

                name_ = "";

                originEnergyLimit_ = 0L;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_SmartContract_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.SmartContract getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.SmartContract.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.SmartContract build() {
                com.cryptowallet.crypto.Protocol.SmartContract result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.SmartContract buildPartial() {
                com.cryptowallet.crypto.Protocol.SmartContract result = new com.cryptowallet.crypto.Protocol.SmartContract(this);
                result.originAddress_ = originAddress_;
                result.contractAddress_ = contractAddress_;
                if (abiBuilder_ == null) {
                    result.abi_ = abi_;
                } else {
                    result.abi_ = abiBuilder_.build();
                }
                result.bytecode_ = bytecode_;
                result.callValue_ = callValue_;
                result.consumeUserResourcePercent_ = consumeUserResourcePercent_;
                result.name_ = name_;
                result.originEnergyLimit_ = originEnergyLimit_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.SmartContract) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.SmartContract)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.SmartContract other) {
                if (other == com.cryptowallet.crypto.Protocol.SmartContract.getDefaultInstance()) return this;
                if (other.getOriginAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setOriginAddress(other.getOriginAddress());
                }
                if (other.getContractAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setContractAddress(other.getContractAddress());
                }
                if (other.hasAbi()) {
                    mergeAbi(other.getAbi());
                }
                if (other.getBytecode() != com.google.protobuf.ByteString.EMPTY) {
                    setBytecode(other.getBytecode());
                }
                if (other.getCallValue() != 0L) {
                    setCallValue(other.getCallValue());
                }
                if (other.getConsumeUserResourcePercent() != 0L) {
                    setConsumeUserResourcePercent(other.getConsumeUserResourcePercent());
                }
                if (!other.getName().isEmpty()) {
                    name_ = other.name_;
                    onChanged();
                }
                if (other.getOriginEnergyLimit() != 0L) {
                    setOriginEnergyLimit(other.getOriginEnergyLimit());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.SmartContract parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.SmartContract) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private com.google.protobuf.ByteString originAddress_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes origin_address = 1;</code>
             */
            public com.google.protobuf.ByteString getOriginAddress() {
                return originAddress_;
            }
            /**
             * <code>bytes origin_address = 1;</code>
             */
            public Builder setOriginAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                originAddress_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes origin_address = 1;</code>
             */
            public Builder clearOriginAddress() {

                originAddress_ = getDefaultInstance().getOriginAddress();
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString contractAddress_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes contract_address = 2;</code>
             */
            public com.google.protobuf.ByteString getContractAddress() {
                return contractAddress_;
            }
            /**
             * <code>bytes contract_address = 2;</code>
             */
            public Builder setContractAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                contractAddress_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes contract_address = 2;</code>
             */
            public Builder clearContractAddress() {

                contractAddress_ = getDefaultInstance().getContractAddress();
                onChanged();
                return this;
            }

            private com.cryptowallet.crypto.Protocol.SmartContract.ABI abi_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.SmartContract.ABI, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABIOrBuilder> abiBuilder_;
            /**
             * <code>.protocol.SmartContract.ABI abi = 3;</code>
             */
            public boolean hasAbi() {
                return abiBuilder_ != null || abi_ != null;
            }
            /**
             * <code>.protocol.SmartContract.ABI abi = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.SmartContract.ABI getAbi() {
                if (abiBuilder_ == null) {
                    return abi_ == null ? com.cryptowallet.crypto.Protocol.SmartContract.ABI.getDefaultInstance() : abi_;
                } else {
                    return abiBuilder_.getMessage();
                }
            }
            /**
             * <code>.protocol.SmartContract.ABI abi = 3;</code>
             */
            public Builder setAbi(com.cryptowallet.crypto.Protocol.SmartContract.ABI value) {
                if (abiBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    abi_ = value;
                    onChanged();
                } else {
                    abiBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>.protocol.SmartContract.ABI abi = 3;</code>
             */
            public Builder setAbi(
                    com.cryptowallet.crypto.Protocol.SmartContract.ABI.Builder builderForValue) {
                if (abiBuilder_ == null) {
                    abi_ = builderForValue.build();
                    onChanged();
                } else {
                    abiBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>.protocol.SmartContract.ABI abi = 3;</code>
             */
            public Builder mergeAbi(com.cryptowallet.crypto.Protocol.SmartContract.ABI value) {
                if (abiBuilder_ == null) {
                    if (abi_ != null) {
                        abi_ =
                                com.cryptowallet.crypto.Protocol.SmartContract.ABI.newBuilder(abi_).mergeFrom(value).buildPartial();
                    } else {
                        abi_ = value;
                    }
                    onChanged();
                } else {
                    abiBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>.protocol.SmartContract.ABI abi = 3;</code>
             */
            public Builder clearAbi() {
                if (abiBuilder_ == null) {
                    abi_ = null;
                    onChanged();
                } else {
                    abi_ = null;
                    abiBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>.protocol.SmartContract.ABI abi = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.SmartContract.ABI.Builder getAbiBuilder() {

                onChanged();
                return getAbiFieldBuilder().getBuilder();
            }
            /**
             * <code>.protocol.SmartContract.ABI abi = 3;</code>
             */
            public com.cryptowallet.crypto.Protocol.SmartContract.ABIOrBuilder getAbiOrBuilder() {
                if (abiBuilder_ != null) {
                    return abiBuilder_.getMessageOrBuilder();
                } else {
                    return abi_ == null ?
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI.getDefaultInstance() : abi_;
                }
            }
            /**
             * <code>.protocol.SmartContract.ABI abi = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.SmartContract.ABI, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABIOrBuilder>
            getAbiFieldBuilder() {
                if (abiBuilder_ == null) {
                    abiBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.SmartContract.ABI, com.cryptowallet.crypto.Protocol.SmartContract.ABI.Builder, com.cryptowallet.crypto.Protocol.SmartContract.ABIOrBuilder>(
                            getAbi(),
                            getParentForChildren(),
                            isClean());
                    abi_ = null;
                }
                return abiBuilder_;
            }

            private com.google.protobuf.ByteString bytecode_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes bytecode = 4;</code>
             */
            public com.google.protobuf.ByteString getBytecode() {
                return bytecode_;
            }
            /**
             * <code>bytes bytecode = 4;</code>
             */
            public Builder setBytecode(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                bytecode_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes bytecode = 4;</code>
             */
            public Builder clearBytecode() {

                bytecode_ = getDefaultInstance().getBytecode();
                onChanged();
                return this;
            }

            private long callValue_ ;
            /**
             * <code>int64 call_value = 5;</code>
             */
            public long getCallValue() {
                return callValue_;
            }
            /**
             * <code>int64 call_value = 5;</code>
             */
            public Builder setCallValue(long value) {

                callValue_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 call_value = 5;</code>
             */
            public Builder clearCallValue() {

                callValue_ = 0L;
                onChanged();
                return this;
            }

            private long consumeUserResourcePercent_ ;
            /**
             * <code>int64 consume_user_resource_percent = 6;</code>
             */
            public long getConsumeUserResourcePercent() {
                return consumeUserResourcePercent_;
            }
            /**
             * <code>int64 consume_user_resource_percent = 6;</code>
             */
            public Builder setConsumeUserResourcePercent(long value) {

                consumeUserResourcePercent_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 consume_user_resource_percent = 6;</code>
             */
            public Builder clearConsumeUserResourcePercent() {

                consumeUserResourcePercent_ = 0L;
                onChanged();
                return this;
            }

            private java.lang.Object name_ = "";
            /**
             * <code>string name = 7;</code>
             */
            public java.lang.String getName() {
                java.lang.Object ref = name_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>string name = 7;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                java.lang.Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>string name = 7;</code>
             */
            public Builder setName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>string name = 7;</code>
             */
            public Builder clearName() {

                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }
            /**
             * <code>string name = 7;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                name_ = value;
                onChanged();
                return this;
            }

            private long originEnergyLimit_ ;
            /**
             * <code>int64 origin_energy_limit = 8;</code>
             */
            public long getOriginEnergyLimit() {
                return originEnergyLimit_;
            }
            /**
             * <code>int64 origin_energy_limit = 8;</code>
             */
            public Builder setOriginEnergyLimit(long value) {

                originEnergyLimit_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>int64 origin_energy_limit = 8;</code>
             */
            public Builder clearOriginEnergyLimit() {

                originEnergyLimit_ = 0L;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.SmartContract)
        }

        // @@protoc_insertion_point(class_scope:protocol.SmartContract)
        private static final com.cryptowallet.crypto.Protocol.SmartContract DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.SmartContract();
        }

        public static com.cryptowallet.crypto.Protocol.SmartContract getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<SmartContract>
                PARSER = new com.google.protobuf.AbstractParser<SmartContract>() {
            public SmartContract parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new SmartContract(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<SmartContract> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SmartContract> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.SmartContract getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface InternalTransactionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.InternalTransaction)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * internalTransaction identity, the root InternalTransaction hash
         * should equals to root transaction id.
         * </pre>
         *
         * <code>bytes hash = 1;</code>
         */
        com.google.protobuf.ByteString getHash();

        /**
         * <pre>
         * the one send trx (TBD: or token) via function
         * </pre>
         *
         * <code>bytes caller_address = 2;</code>
         */
        com.google.protobuf.ByteString getCallerAddress();

        /**
         * <pre>
         * the one recieve trx (TBD: or token) via function
         * </pre>
         *
         * <code>bytes transferTo_address = 3;</code>
         */
        com.google.protobuf.ByteString getTransferToAddress();

        /**
         * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
         */
        java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo>
        getCallValueInfoList();
        /**
         * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
         */
        com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo getCallValueInfo(int index);
        /**
         * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
         */
        int getCallValueInfoCount();
        /**
         * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
         */
        java.util.List<? extends com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfoOrBuilder>
        getCallValueInfoOrBuilderList();
        /**
         * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
         */
        com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfoOrBuilder getCallValueInfoOrBuilder(
                int index);

        /**
         * <code>bytes note = 5;</code>
         */
        com.google.protobuf.ByteString getNote();

        /**
         * <code>bool rejected = 6;</code>
         */
        boolean getRejected();
    }
    /**
     * Protobuf type {@code protocol.InternalTransaction}
     */
    public  static final class InternalTransaction extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.InternalTransaction)
            InternalTransactionOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use InternalTransaction.newBuilder() to construct.
        private InternalTransaction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private InternalTransaction() {
            hash_ = com.google.protobuf.ByteString.EMPTY;
            callerAddress_ = com.google.protobuf.ByteString.EMPTY;
            transferToAddress_ = com.google.protobuf.ByteString.EMPTY;
            callValueInfo_ = java.util.Collections.emptyList();
            note_ = com.google.protobuf.ByteString.EMPTY;
            rejected_ = false;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private InternalTransaction(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {

                            hash_ = input.readBytes();
                            break;
                        }
                        case 18: {

                            callerAddress_ = input.readBytes();
                            break;
                        }
                        case 26: {

                            transferToAddress_ = input.readBytes();
                            break;
                        }
                        case 34: {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                callValueInfo_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            callValueInfo_.add(
                                    input.readMessage(com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.parser(), extensionRegistry));
                            break;
                        }
                        case 42: {

                            note_ = input.readBytes();
                            break;
                        }
                        case 48: {

                            rejected_ = input.readBool();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    callValueInfo_ = java.util.Collections.unmodifiableList(callValueInfo_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_InternalTransaction_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_InternalTransaction_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.InternalTransaction.class, com.cryptowallet.crypto.Protocol.InternalTransaction.Builder.class);
        }

        public interface CallValueInfoOrBuilder extends
                // @@protoc_insertion_point(interface_extends:protocol.InternalTransaction.CallValueInfo)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             * trx (TBD: or token) value
             * </pre>
             *
             * <code>int64 callValue = 1;</code>
             */
            long getCallValue();

            /**
             * <pre>
             * TBD: tokenName, trx should be empty
             * </pre>
             *
             * <code>string tokenId = 2;</code>
             */
            java.lang.String getTokenId();
            /**
             * <pre>
             * TBD: tokenName, trx should be empty
             * </pre>
             *
             * <code>string tokenId = 2;</code>
             */
            com.google.protobuf.ByteString
            getTokenIdBytes();
        }
        /**
         * Protobuf type {@code protocol.InternalTransaction.CallValueInfo}
         */
        public  static final class CallValueInfo extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:protocol.InternalTransaction.CallValueInfo)
                CallValueInfoOrBuilder {
            private static final long serialVersionUID = 0L;
            // Use CallValueInfo.newBuilder() to construct.
            private CallValueInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private CallValueInfo() {
                callValue_ = 0L;
                tokenId_ = "";
            }

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return this.unknownFields;
            }
            private CallValueInfo(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                if (extensionRegistry == null) {
                    throw new java.lang.NullPointerException();
                }
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                        com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownFieldProto3(
                                        input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {

                                callValue_ = input.readInt64();
                                break;
                            }
                            case 18: {
                                java.lang.String s = input.readStringRequireUtf8();

                                tokenId_ = s;
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_InternalTransaction_CallValueInfo_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_InternalTransaction_CallValueInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.class, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder.class);
            }

            public static final int CALLVALUE_FIELD_NUMBER = 1;
            private long callValue_;
            /**
             * <pre>
             * trx (TBD: or token) value
             * </pre>
             *
             * <code>int64 callValue = 1;</code>
             */
            public long getCallValue() {
                return callValue_;
            }

            public static final int TOKENID_FIELD_NUMBER = 2;
            private volatile java.lang.Object tokenId_;
            /**
             * <pre>
             * TBD: tokenName, trx should be empty
             * </pre>
             *
             * <code>string tokenId = 2;</code>
             */
            public java.lang.String getTokenId() {
                java.lang.Object ref = tokenId_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    tokenId_ = s;
                    return s;
                }
            }
            /**
             * <pre>
             * TBD: tokenName, trx should be empty
             * </pre>
             *
             * <code>string tokenId = 2;</code>
             */
            public com.google.protobuf.ByteString
            getTokenIdBytes() {
                java.lang.Object ref = tokenId_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    tokenId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (callValue_ != 0L) {
                    output.writeInt64(1, callValue_);
                }
                if (!getTokenIdBytes().isEmpty()) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 2, tokenId_);
                }
                unknownFields.writeTo(output);
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (callValue_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(1, callValue_);
                }
                if (!getTokenIdBytes().isEmpty()) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, tokenId_);
                }
                size += unknownFields.getSerializedSize();
                memoizedSize = size;
                return size;
            }

            @java.lang.Override
            public boolean equals(final java.lang.Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo)) {
                    return super.equals(obj);
                }
                com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo other = (com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo) obj;

                boolean result = true;
                result = result && (getCallValue()
                        == other.getCallValue());
                result = result && getTokenId()
                        .equals(other.getTokenId());
                result = result && unknownFields.equals(other.unknownFields);
                return result;
            }

            @java.lang.Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptor().hashCode();
                hash = (37 * hash) + CALLVALUE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getCallValue());
                hash = (37 * hash) + TOKENID_FIELD_NUMBER;
                hash = (53 * hash) + getTokenId().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseFrom(
                    java.nio.ByteBuffer data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseFrom(
                    java.nio.ByteBuffer data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code protocol.InternalTransaction.CallValueInfo}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:protocol.InternalTransaction.CallValueInfo)
                    com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfoOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_InternalTransaction_CallValueInfo_descriptor;
                }

                protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_InternalTransaction_CallValueInfo_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.class, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder.class);
                }

                // Construct using com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    callValue_ = 0L;

                    tokenId_ = "";

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return com.cryptowallet.crypto.Protocol.internal_static_protocol_InternalTransaction_CallValueInfo_descriptor;
                }

                public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo getDefaultInstanceForType() {
                    return com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.getDefaultInstance();
                }

                public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo build() {
                    com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo buildPartial() {
                    com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo result = new com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo(this);
                    result.callValue_ = callValue_;
                    result.tokenId_ = tokenId_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, java.lang.Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        java.lang.Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo) {
                        return mergeFrom((com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo other) {
                    if (other == com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.getDefaultInstance()) return this;
                    if (other.getCallValue() != 0L) {
                        setCallValue(other.getCallValue());
                    }
                    if (!other.getTokenId().isEmpty()) {
                        tokenId_ = other.tokenId_;
                        onChanged();
                    }
                    this.mergeUnknownFields(other.unknownFields);
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private long callValue_ ;
                /**
                 * <pre>
                 * trx (TBD: or token) value
                 * </pre>
                 *
                 * <code>int64 callValue = 1;</code>
                 */
                public long getCallValue() {
                    return callValue_;
                }
                /**
                 * <pre>
                 * trx (TBD: or token) value
                 * </pre>
                 *
                 * <code>int64 callValue = 1;</code>
                 */
                public Builder setCallValue(long value) {

                    callValue_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 * trx (TBD: or token) value
                 * </pre>
                 *
                 * <code>int64 callValue = 1;</code>
                 */
                public Builder clearCallValue() {

                    callValue_ = 0L;
                    onChanged();
                    return this;
                }

                private java.lang.Object tokenId_ = "";
                /**
                 * <pre>
                 * TBD: tokenName, trx should be empty
                 * </pre>
                 *
                 * <code>string tokenId = 2;</code>
                 */
                public java.lang.String getTokenId() {
                    java.lang.Object ref = tokenId_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        tokenId_ = s;
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }
                /**
                 * <pre>
                 * TBD: tokenName, trx should be empty
                 * </pre>
                 *
                 * <code>string tokenId = 2;</code>
                 */
                public com.google.protobuf.ByteString
                getTokenIdBytes() {
                    java.lang.Object ref = tokenId_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (java.lang.String) ref);
                        tokenId_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }
                /**
                 * <pre>
                 * TBD: tokenName, trx should be empty
                 * </pre>
                 *
                 * <code>string tokenId = 2;</code>
                 */
                public Builder setTokenId(
                        java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    tokenId_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 * TBD: tokenName, trx should be empty
                 * </pre>
                 *
                 * <code>string tokenId = 2;</code>
                 */
                public Builder clearTokenId() {

                    tokenId_ = getDefaultInstance().getTokenId();
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 * TBD: tokenName, trx should be empty
                 * </pre>
                 *
                 * <code>string tokenId = 2;</code>
                 */
                public Builder setTokenIdBytes(
                        com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);

                    tokenId_ = value;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.setUnknownFieldsProto3(unknownFields);
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return super.mergeUnknownFields(unknownFields);
                }


                // @@protoc_insertion_point(builder_scope:protocol.InternalTransaction.CallValueInfo)
            }

            // @@protoc_insertion_point(class_scope:protocol.InternalTransaction.CallValueInfo)
            private static final com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo();
            }

            public static com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<CallValueInfo>
                    PARSER = new com.google.protobuf.AbstractParser<CallValueInfo>() {
                public CallValueInfo parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new CallValueInfo(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<CallValueInfo> parser() {
                return PARSER;
            }

            @java.lang.Override
            public com.google.protobuf.Parser<CallValueInfo> getParserForType() {
                return PARSER;
            }

            public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int HASH_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString hash_;
        /**
         * <pre>
         * internalTransaction identity, the root InternalTransaction hash
         * should equals to root transaction id.
         * </pre>
         *
         * <code>bytes hash = 1;</code>
         */
        public com.google.protobuf.ByteString getHash() {
            return hash_;
        }

        public static final int CALLER_ADDRESS_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString callerAddress_;
        /**
         * <pre>
         * the one send trx (TBD: or token) via function
         * </pre>
         *
         * <code>bytes caller_address = 2;</code>
         */
        public com.google.protobuf.ByteString getCallerAddress() {
            return callerAddress_;
        }

        public static final int TRANSFERTO_ADDRESS_FIELD_NUMBER = 3;
        private com.google.protobuf.ByteString transferToAddress_;
        /**
         * <pre>
         * the one recieve trx (TBD: or token) via function
         * </pre>
         *
         * <code>bytes transferTo_address = 3;</code>
         */
        public com.google.protobuf.ByteString getTransferToAddress() {
            return transferToAddress_;
        }

        public static final int CALLVALUEINFO_FIELD_NUMBER = 4;
        private java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo> callValueInfo_;
        /**
         * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
         */
        public java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo> getCallValueInfoList() {
            return callValueInfo_;
        }
        /**
         * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
         */
        public java.util.List<? extends com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfoOrBuilder>
        getCallValueInfoOrBuilderList() {
            return callValueInfo_;
        }
        /**
         * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
         */
        public int getCallValueInfoCount() {
            return callValueInfo_.size();
        }
        /**
         * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
         */
        public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo getCallValueInfo(int index) {
            return callValueInfo_.get(index);
        }
        /**
         * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
         */
        public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfoOrBuilder getCallValueInfoOrBuilder(
                int index) {
            return callValueInfo_.get(index);
        }

        public static final int NOTE_FIELD_NUMBER = 5;
        private com.google.protobuf.ByteString note_;
        /**
         * <code>bytes note = 5;</code>
         */
        public com.google.protobuf.ByteString getNote() {
            return note_;
        }

        public static final int REJECTED_FIELD_NUMBER = 6;
        private boolean rejected_;
        /**
         * <code>bool rejected = 6;</code>
         */
        public boolean getRejected() {
            return rejected_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!hash_.isEmpty()) {
                output.writeBytes(1, hash_);
            }
            if (!callerAddress_.isEmpty()) {
                output.writeBytes(2, callerAddress_);
            }
            if (!transferToAddress_.isEmpty()) {
                output.writeBytes(3, transferToAddress_);
            }
            for (int i = 0; i < callValueInfo_.size(); i++) {
                output.writeMessage(4, callValueInfo_.get(i));
            }
            if (!note_.isEmpty()) {
                output.writeBytes(5, note_);
            }
            if (rejected_ != false) {
                output.writeBool(6, rejected_);
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!hash_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, hash_);
            }
            if (!callerAddress_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, callerAddress_);
            }
            if (!transferToAddress_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, transferToAddress_);
            }
            for (int i = 0; i < callValueInfo_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, callValueInfo_.get(i));
            }
            if (!note_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(5, note_);
            }
            if (rejected_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(6, rejected_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.InternalTransaction)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.InternalTransaction other = (com.cryptowallet.crypto.Protocol.InternalTransaction) obj;

            boolean result = true;
            result = result && getHash()
                    .equals(other.getHash());
            result = result && getCallerAddress()
                    .equals(other.getCallerAddress());
            result = result && getTransferToAddress()
                    .equals(other.getTransferToAddress());
            result = result && getCallValueInfoList()
                    .equals(other.getCallValueInfoList());
            result = result && getNote()
                    .equals(other.getNote());
            result = result && (getRejected()
                    == other.getRejected());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + HASH_FIELD_NUMBER;
            hash = (53 * hash) + getHash().hashCode();
            hash = (37 * hash) + CALLER_ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getCallerAddress().hashCode();
            hash = (37 * hash) + TRANSFERTO_ADDRESS_FIELD_NUMBER;
            hash = (53 * hash) + getTransferToAddress().hashCode();
            if (getCallValueInfoCount() > 0) {
                hash = (37 * hash) + CALLVALUEINFO_FIELD_NUMBER;
                hash = (53 * hash) + getCallValueInfoList().hashCode();
            }
            hash = (37 * hash) + NOTE_FIELD_NUMBER;
            hash = (53 * hash) + getNote().hashCode();
            hash = (37 * hash) + REJECTED_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getRejected());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.InternalTransaction parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.InternalTransaction prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.InternalTransaction}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.InternalTransaction)
                com.cryptowallet.crypto.Protocol.InternalTransactionOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_InternalTransaction_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_InternalTransaction_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.InternalTransaction.class, com.cryptowallet.crypto.Protocol.InternalTransaction.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.InternalTransaction.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getCallValueInfoFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                hash_ = com.google.protobuf.ByteString.EMPTY;

                callerAddress_ = com.google.protobuf.ByteString.EMPTY;

                transferToAddress_ = com.google.protobuf.ByteString.EMPTY;

                if (callValueInfoBuilder_ == null) {
                    callValueInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                    callValueInfoBuilder_.clear();
                }
                note_ = com.google.protobuf.ByteString.EMPTY;

                rejected_ = false;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_InternalTransaction_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.InternalTransaction getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.InternalTransaction.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.InternalTransaction build() {
                com.cryptowallet.crypto.Protocol.InternalTransaction result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.InternalTransaction buildPartial() {
                com.cryptowallet.crypto.Protocol.InternalTransaction result = new com.cryptowallet.crypto.Protocol.InternalTransaction(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.hash_ = hash_;
                result.callerAddress_ = callerAddress_;
                result.transferToAddress_ = transferToAddress_;
                if (callValueInfoBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008)) {
                        callValueInfo_ = java.util.Collections.unmodifiableList(callValueInfo_);
                        bitField0_ = (bitField0_ & ~0x00000008);
                    }
                    result.callValueInfo_ = callValueInfo_;
                } else {
                    result.callValueInfo_ = callValueInfoBuilder_.build();
                }
                result.note_ = note_;
                result.rejected_ = rejected_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.InternalTransaction) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.InternalTransaction)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.InternalTransaction other) {
                if (other == com.cryptowallet.crypto.Protocol.InternalTransaction.getDefaultInstance()) return this;
                if (other.getHash() != com.google.protobuf.ByteString.EMPTY) {
                    setHash(other.getHash());
                }
                if (other.getCallerAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setCallerAddress(other.getCallerAddress());
                }
                if (other.getTransferToAddress() != com.google.protobuf.ByteString.EMPTY) {
                    setTransferToAddress(other.getTransferToAddress());
                }
                if (callValueInfoBuilder_ == null) {
                    if (!other.callValueInfo_.isEmpty()) {
                        if (callValueInfo_.isEmpty()) {
                            callValueInfo_ = other.callValueInfo_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                        } else {
                            ensureCallValueInfoIsMutable();
                            callValueInfo_.addAll(other.callValueInfo_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.callValueInfo_.isEmpty()) {
                        if (callValueInfoBuilder_.isEmpty()) {
                            callValueInfoBuilder_.dispose();
                            callValueInfoBuilder_ = null;
                            callValueInfo_ = other.callValueInfo_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                            callValueInfoBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getCallValueInfoFieldBuilder() : null;
                        } else {
                            callValueInfoBuilder_.addAllMessages(other.callValueInfo_);
                        }
                    }
                }
                if (other.getNote() != com.google.protobuf.ByteString.EMPTY) {
                    setNote(other.getNote());
                }
                if (other.getRejected() != false) {
                    setRejected(other.getRejected());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.InternalTransaction parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.InternalTransaction) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private com.google.protobuf.ByteString hash_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <pre>
             * internalTransaction identity, the root InternalTransaction hash
             * should equals to root transaction id.
             * </pre>
             *
             * <code>bytes hash = 1;</code>
             */
            public com.google.protobuf.ByteString getHash() {
                return hash_;
            }
            /**
             * <pre>
             * internalTransaction identity, the root InternalTransaction hash
             * should equals to root transaction id.
             * </pre>
             *
             * <code>bytes hash = 1;</code>
             */
            public Builder setHash(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                hash_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * internalTransaction identity, the root InternalTransaction hash
             * should equals to root transaction id.
             * </pre>
             *
             * <code>bytes hash = 1;</code>
             */
            public Builder clearHash() {

                hash_ = getDefaultInstance().getHash();
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString callerAddress_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <pre>
             * the one send trx (TBD: or token) via function
             * </pre>
             *
             * <code>bytes caller_address = 2;</code>
             */
            public com.google.protobuf.ByteString getCallerAddress() {
                return callerAddress_;
            }
            /**
             * <pre>
             * the one send trx (TBD: or token) via function
             * </pre>
             *
             * <code>bytes caller_address = 2;</code>
             */
            public Builder setCallerAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                callerAddress_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * the one send trx (TBD: or token) via function
             * </pre>
             *
             * <code>bytes caller_address = 2;</code>
             */
            public Builder clearCallerAddress() {

                callerAddress_ = getDefaultInstance().getCallerAddress();
                onChanged();
                return this;
            }

            private com.google.protobuf.ByteString transferToAddress_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <pre>
             * the one recieve trx (TBD: or token) via function
             * </pre>
             *
             * <code>bytes transferTo_address = 3;</code>
             */
            public com.google.protobuf.ByteString getTransferToAddress() {
                return transferToAddress_;
            }
            /**
             * <pre>
             * the one recieve trx (TBD: or token) via function
             * </pre>
             *
             * <code>bytes transferTo_address = 3;</code>
             */
            public Builder setTransferToAddress(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                transferToAddress_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * the one recieve trx (TBD: or token) via function
             * </pre>
             *
             * <code>bytes transferTo_address = 3;</code>
             */
            public Builder clearTransferToAddress() {

                transferToAddress_ = getDefaultInstance().getTransferToAddress();
                onChanged();
                return this;
            }

            private java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo> callValueInfo_ =
                    java.util.Collections.emptyList();
            private void ensureCallValueInfoIsMutable() {
                if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                    callValueInfo_ = new java.util.ArrayList<com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo>(callValueInfo_);
                    bitField0_ |= 0x00000008;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfoOrBuilder> callValueInfoBuilder_;

            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo> getCallValueInfoList() {
                if (callValueInfoBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(callValueInfo_);
                } else {
                    return callValueInfoBuilder_.getMessageList();
                }
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public int getCallValueInfoCount() {
                if (callValueInfoBuilder_ == null) {
                    return callValueInfo_.size();
                } else {
                    return callValueInfoBuilder_.getCount();
                }
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo getCallValueInfo(int index) {
                if (callValueInfoBuilder_ == null) {
                    return callValueInfo_.get(index);
                } else {
                    return callValueInfoBuilder_.getMessage(index);
                }
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public Builder setCallValueInfo(
                    int index, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo value) {
                if (callValueInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureCallValueInfoIsMutable();
                    callValueInfo_.set(index, value);
                    onChanged();
                } else {
                    callValueInfoBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public Builder setCallValueInfo(
                    int index, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder builderForValue) {
                if (callValueInfoBuilder_ == null) {
                    ensureCallValueInfoIsMutable();
                    callValueInfo_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    callValueInfoBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public Builder addCallValueInfo(com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo value) {
                if (callValueInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureCallValueInfoIsMutable();
                    callValueInfo_.add(value);
                    onChanged();
                } else {
                    callValueInfoBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public Builder addCallValueInfo(
                    int index, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo value) {
                if (callValueInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureCallValueInfoIsMutable();
                    callValueInfo_.add(index, value);
                    onChanged();
                } else {
                    callValueInfoBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public Builder addCallValueInfo(
                    com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder builderForValue) {
                if (callValueInfoBuilder_ == null) {
                    ensureCallValueInfoIsMutable();
                    callValueInfo_.add(builderForValue.build());
                    onChanged();
                } else {
                    callValueInfoBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public Builder addCallValueInfo(
                    int index, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder builderForValue) {
                if (callValueInfoBuilder_ == null) {
                    ensureCallValueInfoIsMutable();
                    callValueInfo_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    callValueInfoBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public Builder addAllCallValueInfo(
                    java.lang.Iterable<? extends com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo> values) {
                if (callValueInfoBuilder_ == null) {
                    ensureCallValueInfoIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, callValueInfo_);
                    onChanged();
                } else {
                    callValueInfoBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public Builder clearCallValueInfo() {
                if (callValueInfoBuilder_ == null) {
                    callValueInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                    onChanged();
                } else {
                    callValueInfoBuilder_.clear();
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public Builder removeCallValueInfo(int index) {
                if (callValueInfoBuilder_ == null) {
                    ensureCallValueInfoIsMutable();
                    callValueInfo_.remove(index);
                    onChanged();
                } else {
                    callValueInfoBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder getCallValueInfoBuilder(
                    int index) {
                return getCallValueInfoFieldBuilder().getBuilder(index);
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfoOrBuilder getCallValueInfoOrBuilder(
                    int index) {
                if (callValueInfoBuilder_ == null) {
                    return callValueInfo_.get(index);  } else {
                    return callValueInfoBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public java.util.List<? extends com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfoOrBuilder>
            getCallValueInfoOrBuilderList() {
                if (callValueInfoBuilder_ != null) {
                    return callValueInfoBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(callValueInfo_);
                }
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder addCallValueInfoBuilder() {
                return getCallValueInfoFieldBuilder().addBuilder(
                        com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder addCallValueInfoBuilder(
                    int index) {
                return getCallValueInfoFieldBuilder().addBuilder(
                        index, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.getDefaultInstance());
            }
            /**
             * <code>repeated .protocol.InternalTransaction.CallValueInfo callValueInfo = 4;</code>
             */
            public java.util.List<com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder>
            getCallValueInfoBuilderList() {
                return getCallValueInfoFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfoOrBuilder>
            getCallValueInfoFieldBuilder() {
                if (callValueInfoBuilder_ == null) {
                    callValueInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfo.Builder, com.cryptowallet.crypto.Protocol.InternalTransaction.CallValueInfoOrBuilder>(
                            callValueInfo_,
                            ((bitField0_ & 0x00000008) == 0x00000008),
                            getParentForChildren(),
                            isClean());
                    callValueInfo_ = null;
                }
                return callValueInfoBuilder_;
            }

            private com.google.protobuf.ByteString note_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes note = 5;</code>
             */
            public com.google.protobuf.ByteString getNote() {
                return note_;
            }
            /**
             * <code>bytes note = 5;</code>
             */
            public Builder setNote(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                note_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes note = 5;</code>
             */
            public Builder clearNote() {

                note_ = getDefaultInstance().getNote();
                onChanged();
                return this;
            }

            private boolean rejected_ ;
            /**
             * <code>bool rejected = 6;</code>
             */
            public boolean getRejected() {
                return rejected_;
            }
            /**
             * <code>bool rejected = 6;</code>
             */
            public Builder setRejected(boolean value) {

                rejected_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bool rejected = 6;</code>
             */
            public Builder clearRejected() {

                rejected_ = false;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.InternalTransaction)
        }

        // @@protoc_insertion_point(class_scope:protocol.InternalTransaction)
        private static final com.cryptowallet.crypto.Protocol.InternalTransaction DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.InternalTransaction();
        }

        public static com.cryptowallet.crypto.Protocol.InternalTransaction getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<InternalTransaction>
                PARSER = new com.google.protobuf.AbstractParser<InternalTransaction>() {
            public InternalTransaction parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new InternalTransaction(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<InternalTransaction> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<InternalTransaction> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.InternalTransaction getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface DelegatedResourceAccountIndexOrBuilder extends
            // @@protoc_insertion_point(interface_extends:protocol.DelegatedResourceAccountIndex)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>bytes account = 1;</code>
         */
        com.google.protobuf.ByteString getAccount();

        /**
         * <code>repeated bytes fromAccounts = 2;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getFromAccountsList();
        /**
         * <code>repeated bytes fromAccounts = 2;</code>
         */
        int getFromAccountsCount();
        /**
         * <code>repeated bytes fromAccounts = 2;</code>
         */
        com.google.protobuf.ByteString getFromAccounts(int index);

        /**
         * <code>repeated bytes toAccounts = 3;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getToAccountsList();
        /**
         * <code>repeated bytes toAccounts = 3;</code>
         */
        int getToAccountsCount();
        /**
         * <code>repeated bytes toAccounts = 3;</code>
         */
        com.google.protobuf.ByteString getToAccounts(int index);
    }
    /**
     * Protobuf type {@code protocol.DelegatedResourceAccountIndex}
     */
    public  static final class DelegatedResourceAccountIndex extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:protocol.DelegatedResourceAccountIndex)
            DelegatedResourceAccountIndexOrBuilder {
        private static final long serialVersionUID = 0L;
        // Use DelegatedResourceAccountIndex.newBuilder() to construct.
        private DelegatedResourceAccountIndex(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private DelegatedResourceAccountIndex() {
            account_ = com.google.protobuf.ByteString.EMPTY;
            fromAccounts_ = java.util.Collections.emptyList();
            toAccounts_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private DelegatedResourceAccountIndex(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownFieldProto3(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {

                            account_ = input.readBytes();
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                fromAccounts_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            fromAccounts_.add(input.readBytes());
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                toAccounts_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            toAccounts_.add(input.readBytes());
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    fromAccounts_ = java.util.Collections.unmodifiableList(fromAccounts_);
                }
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    toAccounts_ = java.util.Collections.unmodifiableList(toAccounts_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_DelegatedResourceAccountIndex_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return com.cryptowallet.crypto.Protocol.internal_static_protocol_DelegatedResourceAccountIndex_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex.class, com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex.Builder.class);
        }

        private int bitField0_;
        public static final int ACCOUNT_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString account_;
        /**
         * <code>bytes account = 1;</code>
         */
        public com.google.protobuf.ByteString getAccount() {
            return account_;
        }

        public static final int FROMACCOUNTS_FIELD_NUMBER = 2;
        private java.util.List<com.google.protobuf.ByteString> fromAccounts_;
        /**
         * <code>repeated bytes fromAccounts = 2;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
        getFromAccountsList() {
            return fromAccounts_;
        }
        /**
         * <code>repeated bytes fromAccounts = 2;</code>
         */
        public int getFromAccountsCount() {
            return fromAccounts_.size();
        }
        /**
         * <code>repeated bytes fromAccounts = 2;</code>
         */
        public com.google.protobuf.ByteString getFromAccounts(int index) {
            return fromAccounts_.get(index);
        }

        public static final int TOACCOUNTS_FIELD_NUMBER = 3;
        private java.util.List<com.google.protobuf.ByteString> toAccounts_;
        /**
         * <code>repeated bytes toAccounts = 3;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
        getToAccountsList() {
            return toAccounts_;
        }
        /**
         * <code>repeated bytes toAccounts = 3;</code>
         */
        public int getToAccountsCount() {
            return toAccounts_.size();
        }
        /**
         * <code>repeated bytes toAccounts = 3;</code>
         */
        public com.google.protobuf.ByteString getToAccounts(int index) {
            return toAccounts_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!account_.isEmpty()) {
                output.writeBytes(1, account_);
            }
            for (int i = 0; i < fromAccounts_.size(); i++) {
                output.writeBytes(2, fromAccounts_.get(i));
            }
            for (int i = 0; i < toAccounts_.size(); i++) {
                output.writeBytes(3, toAccounts_.get(i));
            }
            unknownFields.writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!account_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, account_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < fromAccounts_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(fromAccounts_.get(i));
                }
                size += dataSize;
                size += 1 * getFromAccountsList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < toAccounts_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(toAccounts_.get(i));
                }
                size += dataSize;
                size += 1 * getToAccountsList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex)) {
                return super.equals(obj);
            }
            com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex other = (com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex) obj;

            boolean result = true;
            result = result && getAccount()
                    .equals(other.getAccount());
            result = result && getFromAccountsList()
                    .equals(other.getFromAccountsList());
            result = result && getToAccountsList()
                    .equals(other.getToAccountsList());
            result = result && unknownFields.equals(other.unknownFields);
            return result;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            hash = (37 * hash) + ACCOUNT_FIELD_NUMBER;
            hash = (53 * hash) + getAccount().hashCode();
            if (getFromAccountsCount() > 0) {
                hash = (37 * hash) + FROMACCOUNTS_FIELD_NUMBER;
                hash = (53 * hash) + getFromAccountsList().hashCode();
            }
            if (getToAccountsCount() > 0) {
                hash = (37 * hash) + TOACCOUNTS_FIELD_NUMBER;
                hash = (53 * hash) + getToAccountsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code protocol.DelegatedResourceAccountIndex}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:protocol.DelegatedResourceAccountIndex)
                com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndexOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DelegatedResourceAccountIndex_descriptor;
            }

            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DelegatedResourceAccountIndex_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex.class, com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex.Builder.class);
            }

            // Construct using com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                account_ = com.google.protobuf.ByteString.EMPTY;

                fromAccounts_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                toAccounts_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return com.cryptowallet.crypto.Protocol.internal_static_protocol_DelegatedResourceAccountIndex_descriptor;
            }

            public com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex getDefaultInstanceForType() {
                return com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex.getDefaultInstance();
            }

            public com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex build() {
                com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex buildPartial() {
                com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex result = new com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.account_ = account_;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    fromAccounts_ = java.util.Collections.unmodifiableList(fromAccounts_);
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.fromAccounts_ = fromAccounts_;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    toAccounts_ = java.util.Collections.unmodifiableList(toAccounts_);
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.toAccounts_ = toAccounts_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex) {
                    return mergeFrom((com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex other) {
                if (other == com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex.getDefaultInstance()) return this;
                if (other.getAccount() != com.google.protobuf.ByteString.EMPTY) {
                    setAccount(other.getAccount());
                }
                if (!other.fromAccounts_.isEmpty()) {
                    if (fromAccounts_.isEmpty()) {
                        fromAccounts_ = other.fromAccounts_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureFromAccountsIsMutable();
                        fromAccounts_.addAll(other.fromAccounts_);
                    }
                    onChanged();
                }
                if (!other.toAccounts_.isEmpty()) {
                    if (toAccounts_.isEmpty()) {
                        toAccounts_ = other.toAccounts_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureToAccountsIsMutable();
                        toAccounts_.addAll(other.toAccounts_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private com.google.protobuf.ByteString account_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>bytes account = 1;</code>
             */
            public com.google.protobuf.ByteString getAccount() {
                return account_;
            }
            /**
             * <code>bytes account = 1;</code>
             */
            public Builder setAccount(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                account_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>bytes account = 1;</code>
             */
            public Builder clearAccount() {

                account_ = getDefaultInstance().getAccount();
                onChanged();
                return this;
            }

            private java.util.List<com.google.protobuf.ByteString> fromAccounts_ = java.util.Collections.emptyList();
            private void ensureFromAccountsIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    fromAccounts_ = new java.util.ArrayList<com.google.protobuf.ByteString>(fromAccounts_);
                    bitField0_ |= 0x00000002;
                }
            }
            /**
             * <code>repeated bytes fromAccounts = 2;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getFromAccountsList() {
                return java.util.Collections.unmodifiableList(fromAccounts_);
            }
            /**
             * <code>repeated bytes fromAccounts = 2;</code>
             */
            public int getFromAccountsCount() {
                return fromAccounts_.size();
            }
            /**
             * <code>repeated bytes fromAccounts = 2;</code>
             */
            public com.google.protobuf.ByteString getFromAccounts(int index) {
                return fromAccounts_.get(index);
            }
            /**
             * <code>repeated bytes fromAccounts = 2;</code>
             */
            public Builder setFromAccounts(
                    int index, com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureFromAccountsIsMutable();
                fromAccounts_.set(index, value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes fromAccounts = 2;</code>
             */
            public Builder addFromAccounts(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureFromAccountsIsMutable();
                fromAccounts_.add(value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes fromAccounts = 2;</code>
             */
            public Builder addAllFromAccounts(
                    java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
                ensureFromAccountsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, fromAccounts_);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes fromAccounts = 2;</code>
             */
            public Builder clearFromAccounts() {
                fromAccounts_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            private java.util.List<com.google.protobuf.ByteString> toAccounts_ = java.util.Collections.emptyList();
            private void ensureToAccountsIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    toAccounts_ = new java.util.ArrayList<com.google.protobuf.ByteString>(toAccounts_);
                    bitField0_ |= 0x00000004;
                }
            }
            /**
             * <code>repeated bytes toAccounts = 3;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getToAccountsList() {
                return java.util.Collections.unmodifiableList(toAccounts_);
            }
            /**
             * <code>repeated bytes toAccounts = 3;</code>
             */
            public int getToAccountsCount() {
                return toAccounts_.size();
            }
            /**
             * <code>repeated bytes toAccounts = 3;</code>
             */
            public com.google.protobuf.ByteString getToAccounts(int index) {
                return toAccounts_.get(index);
            }
            /**
             * <code>repeated bytes toAccounts = 3;</code>
             */
            public Builder setToAccounts(
                    int index, com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureToAccountsIsMutable();
                toAccounts_.set(index, value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes toAccounts = 3;</code>
             */
            public Builder addToAccounts(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureToAccountsIsMutable();
                toAccounts_.add(value);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes toAccounts = 3;</code>
             */
            public Builder addAllToAccounts(
                    java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
                ensureToAccountsIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, toAccounts_);
                onChanged();
                return this;
            }
            /**
             * <code>repeated bytes toAccounts = 3;</code>
             */
            public Builder clearToAccounts() {
                toAccounts_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFieldsProto3(unknownFields);
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:protocol.DelegatedResourceAccountIndex)
        }

        // @@protoc_insertion_point(class_scope:protocol.DelegatedResourceAccountIndex)
        private static final com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex();
        }

        public static com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<DelegatedResourceAccountIndex>
                PARSER = new com.google.protobuf.AbstractParser<DelegatedResourceAccountIndex>() {
            public DelegatedResourceAccountIndex parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new DelegatedResourceAccountIndex(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<DelegatedResourceAccountIndex> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<DelegatedResourceAccountIndex> getParserForType() {
            return PARSER;
        }

        public com.cryptowallet.crypto.Protocol.DelegatedResourceAccountIndex getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_AccountId_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_AccountId_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Vote_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Vote_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Proposal_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Proposal_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Proposal_ParametersEntry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Proposal_ParametersEntry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Exchange_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Exchange_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_ChainParameters_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_ChainParameters_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_ChainParameters_ChainParameter_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_ChainParameters_ChainParameter_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Account_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Account_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Account_Frozen_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Account_Frozen_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Account_AssetEntry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Account_AssetEntry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Account_LatestAssetOperationTimeEntry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Account_LatestAssetOperationTimeEntry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Account_FreeAssetNetUsageEntry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Account_FreeAssetNetUsageEntry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Account_AccountResource_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Account_AccountResource_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_DelegatedResource_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_DelegatedResource_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_authority_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_authority_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_permission_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_permission_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Witness_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Witness_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Votes_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Votes_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_TXOutput_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_TXOutput_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_TXInput_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_TXInput_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_TXInput_raw_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_TXInput_raw_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_TXOutputs_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_TXOutputs_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_ResourceReceipt_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_ResourceReceipt_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Transaction_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Transaction_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Transaction_Contract_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Transaction_Contract_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Transaction_Result_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Transaction_Result_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Transaction_raw_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Transaction_raw_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_TransactionInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_TransactionInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_TransactionInfo_Log_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_TransactionInfo_Log_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Transactions_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Transactions_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_TransactionSign_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_TransactionSign_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_BlockHeader_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_BlockHeader_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_BlockHeader_raw_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_BlockHeader_raw_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Block_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Block_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_ChainInventory_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_ChainInventory_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_ChainInventory_BlockId_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_ChainInventory_BlockId_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_BlockInventory_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_BlockInventory_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_BlockInventory_BlockId_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_BlockInventory_BlockId_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Inventory_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Inventory_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_Items_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_Items_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_DynamicProperties_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_DynamicProperties_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_DisconnectMessage_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_DisconnectMessage_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_HelloMessage_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_HelloMessage_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_HelloMessage_BlockId_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_HelloMessage_BlockId_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_SmartContract_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_SmartContract_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_SmartContract_ABI_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_SmartContract_ABI_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_SmartContract_ABI_Entry_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_SmartContract_ABI_Entry_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_SmartContract_ABI_Entry_Param_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_SmartContract_ABI_Entry_Param_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_InternalTransaction_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_InternalTransaction_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_InternalTransaction_CallValueInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_InternalTransaction_CallValueInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_protocol_DelegatedResourceAccountIndex_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_protocol_DelegatedResourceAccountIndex_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }
    private static  com.google.protobuf.Descriptors.FileDescriptor
            descriptor;
    static {
        java.lang.String[] descriptorData = {
                "\n\017core/Tron.proto\022\010protocol\032\031google/prot" +
                        "obuf/any.proto\032\023core/Discover.proto\"*\n\tA" +
                        "ccountId\022\014\n\004name\030\001 \001(\014\022\017\n\007address\030\002 \001(\014\"" +
                        "0\n\004Vote\022\024\n\014vote_address\030\001 \001(\014\022\022\n\nvote_co" +
                        "unt\030\002 \001(\003\"\321\002\n\010Proposal\022\023\n\013proposal_id\030\001 " +
                        "\001(\003\022\030\n\020proposer_address\030\002 \001(\014\0226\n\nparamet" +
                        "ers\030\003 \003(\0132\".protocol.Proposal.Parameters" +
                        "Entry\022\027\n\017expiration_time\030\004 \001(\003\022\023\n\013create" +
                        "_time\030\005 \001(\003\022\021\n\tapprovals\030\006 \003(\014\022\'\n\005state\030" +
                        "\007 \001(\0162\030.protocol.Proposal.State\0321\n\017Param" +
                        "etersEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\003:\002" +
                        "8\001\"A\n\005State\022\013\n\007PENDING\020\000\022\017\n\013DISAPPROVED\020" +
                        "\001\022\014\n\010APPROVED\020\002\022\014\n\010CANCELED\020\003\"\271\001\n\010Exchan" +
                        "ge\022\023\n\013exchange_id\030\001 \001(\003\022\027\n\017creator_addre" +
                        "ss\030\002 \001(\014\022\023\n\013create_time\030\003 \001(\003\022\026\n\016first_t" +
                        "oken_id\030\006 \001(\014\022\033\n\023first_token_balance\030\007 \001" +
                        "(\003\022\027\n\017second_token_id\030\010 \001(\014\022\034\n\024second_to" +
                        "ken_balance\030\t \001(\003\"\201\001\n\017ChainParameters\022@\n" +
                        "\016chainParameter\030\001 \003(\0132(.protocol.ChainPa" +
                        "rameters.ChainParameter\032,\n\016ChainParamete" +
                        "r\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\003\"\276\013\n\007Accoun" +
                        "t\022\024\n\014account_name\030\001 \001(\014\022#\n\004type\030\002 \001(\0162\025." +
                        "protocol.AccountType\022\017\n\007address\030\003 \001(\014\022\017\n" +
                        "\007balance\030\004 \001(\003\022\035\n\005votes\030\005 \003(\0132\016.protocol" +
                        ".Vote\022+\n\005asset\030\006 \003(\0132\034.protocol.Account." +
                        "AssetEntry\022(\n\006frozen\030\007 \003(\0132\030.protocol.Ac" +
                        "count.Frozen\022\021\n\tnet_usage\030\010 \001(\003\0227\n/acqui" +
                        "red_delegated_frozen_balance_for_bandwid" +
                        "th\030) \001(\003\022.\n&delegated_frozen_balance_for" +
                        "_bandwidth\030* \001(\003\022\023\n\013create_time\030\t \001(\003\022\034\n" +
                        "\024latest_opration_time\030\n \001(\003\022\021\n\tallowance" +
                        "\030\013 \001(\003\022\034\n\024latest_withdraw_time\030\014 \001(\003\022\014\n\004" +
                        "code\030\r \001(\014\022\022\n\nis_witness\030\016 \001(\010\022\024\n\014is_com" +
                        "mittee\030\017 \001(\010\022/\n\rfrozen_supply\030\020 \003(\0132\030.pr" +
                        "otocol.Account.Frozen\022\031\n\021asset_issued_na" +
                        "me\030\021 \001(\014\022T\n\033latest_asset_operation_time\030" +
                        "\022 \003(\0132/.protocol.Account.LatestAssetOper" +
                        "ationTimeEntry\022\026\n\016free_net_usage\030\023 \001(\003\022F" +
                        "\n\024free_asset_net_usage\030\024 \003(\0132(.protocol." +
                        "Account.FreeAssetNetUsageEntry\022\033\n\023latest" +
                        "_consume_time\030\025 \001(\003\022 \n\030latest_consume_fr" +
                        "ee_time\030\026 \001(\003\022\022\n\naccount_id\030\027 \001(\014\022;\n\020acc" +
                        "ount_resource\030\032 \001(\0132!.protocol.Account.A" +
                        "ccountResource\022\020\n\010codeHash\030\036 \001(\014\0325\n\006Froz" +
                        "en\022\026\n\016frozen_balance\030\001 \001(\003\022\023\n\013expire_tim" +
                        "e\030\002 \001(\003\032,\n\nAssetEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va" +
                        "lue\030\002 \001(\003:\0028\001\032?\n\035LatestAssetOperationTim" +
                        "eEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\003:\0028\001\0328" +
                        "\n\026FreeAssetNetUsageEntry\022\013\n\003key\030\001 \001(\t\022\r\n" +
                        "\005value\030\002 \001(\003:\0028\001\032\303\002\n\017AccountResource\022\024\n\014" +
                        "energy_usage\030\001 \001(\003\022;\n\031frozen_balance_for" +
                        "_energy\030\002 \001(\0132\030.protocol.Account.Frozen\022" +
                        "&\n\036latest_consume_time_for_energy\030\003 \001(\003\022" +
                        "4\n,acquired_delegated_frozen_balance_for" +
                        "_energy\030\004 \001(\003\022+\n#delegated_frozen_balanc" +
                        "e_for_energy\030\005 \001(\003\022\025\n\rstorage_limit\030\006 \001(" +
                        "\003\022\025\n\rstorage_usage\030\007 \001(\003\022$\n\034latest_excha" +
                        "nge_storage_time\030\010 \001(\003\"\271\001\n\021DelegatedReso" +
                        "urce\022\014\n\004from\030\001 \001(\014\022\n\n\002to\030\002 \001(\014\022$\n\034frozen" +
                        "_balance_for_bandwidth\030\003 \001(\003\022!\n\031frozen_b" +
                        "alance_for_energy\030\004 \001(\003\022!\n\031expire_time_f" +
                        "or_bandwidth\030\005 \001(\003\022\036\n\026expire_time_for_en" +
                        "ergy\030\006 \001(\003\"J\n\tauthority\022$\n\007account\030\001 \001(\013" +
                        "2\023.protocol.AccountId\022\027\n\017permission_name" +
                        "\030\002 \001(\014\"2\n\npermission\022$\n\007account\030\001 \001(\0132\023." +
                        "protocol.AccountId\"\265\001\n\007Witness\022\017\n\007addres" +
                        "s\030\001 \001(\014\022\021\n\tvoteCount\030\002 \001(\003\022\016\n\006pubKey\030\003 \001" +
                        "(\014\022\013\n\003url\030\004 \001(\t\022\025\n\rtotalProduced\030\005 \001(\003\022\023" +
                        "\n\013totalMissed\030\006 \001(\003\022\026\n\016latestBlockNum\030\007 " +
                        "\001(\003\022\025\n\rlatestSlotNum\030\010 \001(\003\022\016\n\006isJobs\030\t \001" +
                        "(\010\"^\n\005Votes\022\017\n\007address\030\001 \001(\014\022!\n\told_vote" +
                        "s\030\002 \003(\0132\016.protocol.Vote\022!\n\tnew_votes\030\003 \003" +
                        "(\0132\016.protocol.Vote\"-\n\010TXOutput\022\r\n\005value\030" +
                        "\001 \001(\003\022\022\n\npubKeyHash\030\002 \001(\014\"x\n\007TXInput\022\'\n\010" +
                        "raw_data\030\001 \001(\0132\025.protocol.TXInput.raw\022\021\n" +
                        "\tsignature\030\004 \001(\014\0321\n\003raw\022\014\n\004txID\030\001 \001(\014\022\014\n" +
                        "\004vout\030\002 \001(\003\022\016\n\006pubKey\030\003 \001(\014\"0\n\tTXOutputs" +
                        "\022#\n\007outputs\030\001 \003(\0132\022.protocol.TXOutput\"\325\001" +
                        "\n\017ResourceReceipt\022\024\n\014energy_usage\030\001 \001(\003\022" +
                        "\022\n\nenergy_fee\030\002 \001(\003\022\033\n\023origin_energy_usa" +
                        "ge\030\003 \001(\003\022\032\n\022energy_usage_total\030\004 \001(\003\022\021\n\t" +
                        "net_usage\030\005 \001(\003\022\017\n\007net_fee\030\006 \001(\003\022;\n\006resu" +
                        "lt\030\007 \001(\0162+.protocol.Transaction.Result.c" +
                        "ontractResult\"\245\016\n\013Transaction\022+\n\010raw_dat" +
                        "a\030\001 \001(\0132\031.protocol.Transaction.raw\022\021\n\tsi" +
                        "gnature\030\002 \003(\014\022)\n\003ret\030\005 \003(\0132\034.protocol.Tr" +
                        "ansaction.Result\032\260\007\n\010Contract\0229\n\004type\030\001 " +
                        "\001(\0162+.protocol.Transaction.Contract.Cont" +
                        "ractType\022\'\n\tparameter\030\002 \001(\0132\024.google.pro" +
                        "tobuf.Any\022\020\n\010provider\030\003 \001(\014\022\024\n\014ContractN" +
                        "ame\030\004 \001(\014\"\227\006\n\014ContractType\022\031\n\025AccountCre" +
                        "ateContract\020\000\022\024\n\020TransferContract\020\001\022\031\n\025T" +
                        "ransferAssetContract\020\002\022\025\n\021VoteAssetContr" +
                        "act\020\003\022\027\n\023VoteWitnessContract\020\004\022\031\n\025Witnes" +
                        "sCreateContract\020\005\022\026\n\022AssetIssueContract\020" +
                        "\006\022\031\n\025WitnessUpdateContract\020\010\022!\n\035Particip" +
                        "ateAssetIssueContract\020\t\022\031\n\025AccountUpdate" +
                        "Contract\020\n\022\031\n\025FreezeBalanceContract\020\013\022\033\n" +
                        "\027UnfreezeBalanceContract\020\014\022\033\n\027WithdrawBa" +
                        "lanceContract\020\r\022\031\n\025UnfreezeAssetContract" +
                        "\020\016\022\027\n\023UpdateAssetContract\020\017\022\032\n\026ProposalC" +
                        "reateContract\020\020\022\033\n\027ProposalApproveContra" +
                        "ct\020\021\022\032\n\026ProposalDeleteContract\020\022\022\030\n\024SetA" +
                        "ccountIdContract\020\023\022\022\n\016CustomContract\020\024\022\027" +
                        "\n\023CreateSmartContract\020\036\022\030\n\024TriggerSmartC" +
                        "ontract\020\037\022\017\n\013GetContract\020 \022\031\n\025UpdateSett" +
                        "ingContract\020!\022\032\n\026ExchangeCreateContract\020" +
                        ")\022\032\n\026ExchangeInjectContract\020*\022\034\n\030Exchang" +
                        "eWithdrawContract\020+\022\037\n\033ExchangeTransacti" +
                        "onContract\020,\022\035\n\031UpdateEnergyLimitContrac" +
                        "t\020-\032\370\003\n\006Result\022\013\n\003fee\030\001 \001(\003\022.\n\003ret\030\002 \001(\016" +
                        "2!.protocol.Transaction.Result.code\022@\n\013c" +
                        "ontractRet\030\003 \001(\0162+.protocol.Transaction." +
                        "Result.contractResult\022\027\n\017withdraw_amount" +
                        "\030\017 \001(\003\022\027\n\017unfreeze_amount\030\020 \001(\003\"\036\n\004code\022" +
                        "\n\n\006SUCESS\020\000\022\n\n\006FAILED\020\001\"\234\002\n\016contractResu" +
                        "lt\022\013\n\007DEFAULT\020\000\022\013\n\007SUCCESS\020\001\022\n\n\006REVERT\020\002" +
                        "\022\030\n\024BAD_JUMP_DESTINATION\020\003\022\021\n\rOUT_OF_MEM" +
                        "ORY\020\004\022\030\n\024PRECOMPILED_CONTRACT\020\005\022\023\n\017STACK" +
                        "_TOO_SMALL\020\006\022\023\n\017STACK_TOO_LARGE\020\007\022\025\n\021ILL" +
                        "EGAL_OPERATION\020\010\022\022\n\016STACK_OVERFLOW\020\t\022\021\n\r" +
                        "OUT_OF_ENERGY\020\n\022\017\n\013OUT_OF_TIME\020\013\022\027\n\023JVM_" +
                        "STACK_OVER_FLOW\020\014\022\013\n\007UNKNOWN\020\r\032\374\001\n\003raw\022\027" +
                        "\n\017ref_block_bytes\030\001 \001(\014\022\025\n\rref_block_num" +
                        "\030\003 \001(\003\022\026\n\016ref_block_hash\030\004 \001(\014\022\022\n\nexpira" +
                        "tion\030\010 \001(\003\022\"\n\005auths\030\t \003(\0132\023.protocol.aut" +
                        "hority\022\014\n\004data\030\n \001(\014\0220\n\010contract\030\013 \003(\0132\036" +
                        ".protocol.Transaction.Contract\022\017\n\007script" +
                        "s\030\014 \001(\014\022\021\n\ttimestamp\030\016 \001(\003\022\021\n\tfee_limit\030" +
                        "\022 \001(\003\"\353\003\n\017TransactionInfo\022\n\n\002id\030\001 \001(\014\022\013\n" +
                        "\003fee\030\002 \001(\003\022\023\n\013blockNumber\030\003 \001(\003\022\026\n\016block" +
                        "TimeStamp\030\004 \001(\003\022\026\n\016contractResult\030\005 \003(\014\022" +
                        "\030\n\020contract_address\030\006 \001(\014\022*\n\007receipt\030\007 \001" +
                        "(\0132\031.protocol.ResourceReceipt\022*\n\003log\030\010 \003" +
                        "(\0132\035.protocol.TransactionInfo.Log\022.\n\006res" +
                        "ult\030\t \001(\0162\036.protocol.TransactionInfo.cod" +
                        "e\022\022\n\nresMessage\030\n \001(\014\022\027\n\017withdraw_amount" +
                        "\030\017 \001(\003\022\027\n\017unfreeze_amount\030\020 \001(\003\022<\n\025inter" +
                        "nal_transactions\030\021 \003(\0132\035.protocol.Intern" +
                        "alTransaction\0324\n\003Log\022\017\n\007address\030\001 \001(\014\022\016\n" +
                        "\006topics\030\002 \003(\014\022\014\n\004data\030\003 \001(\014\"\036\n\004code\022\n\n\006S" +
                        "UCESS\020\000\022\n\n\006FAILED\020\001\";\n\014Transactions\022+\n\014t" +
                        "ransactions\030\001 \003(\0132\025.protocol.Transaction" +
                        "\"Q\n\017TransactionSign\022*\n\013transaction\030\001 \001(\013" +
                        "2\025.protocol.Transaction\022\022\n\nprivateKey\030\002 " +
                        "\001(\014\"\346\001\n\013BlockHeader\022+\n\010raw_data\030\001 \001(\0132\031." +
                        "protocol.BlockHeader.raw\022\031\n\021witness_sign" +
                        "ature\030\002 \001(\014\032\216\001\n\003raw\022\021\n\ttimestamp\030\001 \001(\003\022\022" +
                        "\n\ntxTrieRoot\030\002 \001(\014\022\022\n\nparentHash\030\003 \001(\014\022\016" +
                        "\n\006number\030\007 \001(\003\022\022\n\nwitness_id\030\010 \001(\003\022\027\n\017wi" +
                        "tness_address\030\t \001(\014\022\017\n\007version\030\n \001(\005\"a\n\005" +
                        "Block\022+\n\014transactions\030\001 \003(\0132\025.protocol.T" +
                        "ransaction\022+\n\014block_header\030\002 \001(\0132\025.proto" +
                        "col.BlockHeader\"|\n\016ChainInventory\022-\n\003ids" +
                        "\030\001 \003(\0132 .protocol.ChainInventory.BlockId" +
                        "\022\022\n\nremain_num\030\002 \001(\003\032\'\n\007BlockId\022\014\n\004hash\030" +
                        "\001 \001(\014\022\016\n\006number\030\002 \001(\003\"\277\001\n\016BlockInventory" +
                        "\022-\n\003ids\030\001 \003(\0132 .protocol.BlockInventory." +
                        "BlockId\022+\n\004type\030\002 \001(\0162\035.protocol.BlockIn" +
                        "ventory.Type\032\'\n\007BlockId\022\014\n\004hash\030\001 \001(\014\022\016\n" +
                        "\006number\030\002 \001(\003\"(\n\004Type\022\010\n\004SYNC\020\000\022\013\n\007ADVTI" +
                        "SE\020\001\022\t\n\005FETCH\020\002\"n\n\tInventory\022/\n\004type\030\001 \001" +
                        "(\0162!.protocol.Inventory.InventoryType\022\013\n" +
                        "\003ids\030\002 \003(\014\"#\n\rInventoryType\022\007\n\003TRX\020\000\022\t\n\005" +
                        "BLOCK\020\001\"\345\001\n\005Items\022&\n\004type\030\001 \001(\0162\030.protoc" +
                        "ol.Items.ItemType\022\037\n\006blocks\030\002 \003(\0132\017.prot" +
                        "ocol.Block\022,\n\rblock_headers\030\003 \003(\0132\025.prot" +
                        "ocol.BlockHeader\022+\n\014transactions\030\004 \003(\0132\025" +
                        ".protocol.Transaction\"8\n\010ItemType\022\007\n\003ERR" +
                        "\020\000\022\007\n\003TRX\020\001\022\t\n\005BLOCK\020\002\022\017\n\013BLOCKHEADER\020\003\"" +
                        "4\n\021DynamicProperties\022\037\n\027last_solidity_bl" +
                        "ock_num\030\001 \001(\003\"9\n\021DisconnectMessage\022$\n\006re" +
                        "ason\030\001 \001(\0162\024.protocol.ReasonCode\"\240\002\n\014Hel" +
                        "loMessage\022 \n\004from\030\001 \001(\0132\022.protocol.Endpo" +
                        "int\022\017\n\007version\030\002 \001(\005\022\021\n\ttimestamp\030\003 \001(\003\022" +
                        "6\n\016genesisBlockId\030\004 \001(\0132\036.protocol.Hello" +
                        "Message.BlockId\0224\n\014solidBlockId\030\005 \001(\0132\036." +
                        "protocol.HelloMessage.BlockId\0223\n\013headBlo" +
                        "ckId\030\006 \001(\0132\036.protocol.HelloMessage.Block" +
                        "Id\032\'\n\007BlockId\022\014\n\004hash\030\001 \001(\014\022\016\n\006number\030\002 " +
                        "\001(\003\"\336\006\n\rSmartContract\022\026\n\016origin_address\030" +
                        "\001 \001(\014\022\030\n\020contract_address\030\002 \001(\014\022(\n\003abi\030\003" +
                        " \001(\0132\033.protocol.SmartContract.ABI\022\020\n\010byt" +
                        "ecode\030\004 \001(\014\022\022\n\ncall_value\030\005 \001(\003\022%\n\035consu" +
                        "me_user_resource_percent\030\006 \001(\003\022\014\n\004name\030\007" +
                        " \001(\t\022\033\n\023origin_energy_limit\030\010 \001(\003\032\370\004\n\003AB" +
                        "I\0221\n\006entrys\030\001 \003(\0132!.protocol.SmartContra" +
                        "ct.ABI.Entry\032\275\004\n\005Entry\022\021\n\tanonymous\030\001 \001(" +
                        "\010\022\020\n\010constant\030\002 \001(\010\022\014\n\004name\030\003 \001(\t\0227\n\006inp" +
                        "uts\030\004 \003(\0132\'.protocol.SmartContract.ABI.E" +
                        "ntry.Param\0228\n\007outputs\030\005 \003(\0132\'.protocol.S" +
                        "martContract.ABI.Entry.Param\0229\n\004type\030\006 \001" +
                        "(\0162+.protocol.SmartContract.ABI.Entry.En" +
                        "tryType\022\017\n\007payable\030\007 \001(\010\022N\n\017stateMutabil" +
                        "ity\030\010 \001(\01625.protocol.SmartContract.ABI.E" +
                        "ntry.StateMutabilityType\0324\n\005Param\022\017\n\007ind" +
                        "exed\030\001 \001(\010\022\014\n\004name\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\"Y" +
                        "\n\tEntryType\022\024\n\020UnknownEntryType\020\000\022\017\n\013Con" +
                        "structor\020\001\022\014\n\010Function\020\002\022\t\n\005Event\020\003\022\014\n\010F" +
                        "allback\020\004\"a\n\023StateMutabilityType\022\031\n\025Unkn" +
                        "ownMutabilityType\020\000\022\010\n\004Pure\020\001\022\010\n\004View\020\002\022" +
                        "\016\n\nNonpayable\020\003\022\013\n\007Payable\020\004\"\360\001\n\023Interna" +
                        "lTransaction\022\014\n\004hash\030\001 \001(\014\022\026\n\016caller_add" +
                        "ress\030\002 \001(\014\022\032\n\022transferTo_address\030\003 \001(\014\022B" +
                        "\n\rcallValueInfo\030\004 \003(\0132+.protocol.Interna" +
                        "lTransaction.CallValueInfo\022\014\n\004note\030\005 \001(\014" +
                        "\022\020\n\010rejected\030\006 \001(\010\0323\n\rCallValueInfo\022\021\n\tc" +
                        "allValue\030\001 \001(\003\022\017\n\007tokenId\030\002 \001(\t\"Z\n\035Deleg" +
                        "atedResourceAccountIndex\022\017\n\007account\030\001 \001(" +
                        "\014\022\024\n\014fromAccounts\030\002 \003(\014\022\022\n\ntoAccounts\030\003 " +
                        "\003(\014*7\n\013AccountType\022\n\n\006Normal\020\000\022\016\n\nAssetI" +
                        "ssue\020\001\022\014\n\010Contract\020\002*\307\003\n\nReasonCode\022\r\n\tR" +
                        "EQUESTED\020\000\022\020\n\014BAD_PROTOCOL\020\002\022\022\n\016TOO_MANY" +
                        "_PEERS\020\004\022\022\n\016DUPLICATE_PEER\020\005\022\031\n\025INCOMPAT" +
                        "IBLE_PROTOCOL\020\006\022\021\n\rNULL_IDENTITY\020\007\022\020\n\014PE" +
                        "ER_QUITING\020\010\022\027\n\023UNEXPECTED_IDENTITY\020\t\022\022\n" +
                        "\016LOCAL_IDENTITY\020\n\022\020\n\014PING_TIMEOUT\020\013\022\017\n\013U" +
                        "SER_REASON\020\020\022\t\n\005RESET\020\021\022\r\n\tSYNC_FAIL\020\022\022\016" +
                        "\n\nFETCH_FAIL\020\023\022\n\n\006BAD_TX\020\024\022\r\n\tBAD_BLOCK\020" +
                        "\025\022\n\n\006FORKED\020\026\022\016\n\nUNLINKABLE\020\027\022\030\n\024INCOMPA" +
                        "TIBLE_VERSION\020\030\022\026\n\022INCOMPATIBLE_CHAIN\020\031\022" +
                        "\014\n\010TIME_OUT\020 \022\020\n\014CONNECT_FAIL\020!\022\037\n\033TOO_M" +
                        "ANY_PEERS_WITH_SAME_IP\020\"\022\014\n\007UNKNOWN\020\377\001BF" +
                        "\n\017com.cryptowallet.cryptoB\010ProtocolZ)github.com/" +
                        "tronprotocol/grpc-gateway/coreb\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[] {
                                com.google.protobuf.AnyProto.getDescriptor(),
                                com.cryptowallet.crypto.Discover.getDescriptor(),
                        }, assigner);
        internal_static_protocol_AccountId_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_protocol_AccountId_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_AccountId_descriptor,
                new java.lang.String[] { "Name", "Address", });
        internal_static_protocol_Vote_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_protocol_Vote_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Vote_descriptor,
                new java.lang.String[] { "VoteAddress", "VoteCount", });
        internal_static_protocol_Proposal_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_protocol_Proposal_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Proposal_descriptor,
                new java.lang.String[] { "ProposalId", "ProposerAddress", "Parameters", "ExpirationTime", "CreateTime", "Approvals", "State", });
        internal_static_protocol_Proposal_ParametersEntry_descriptor =
                internal_static_protocol_Proposal_descriptor.getNestedTypes().get(0);
        internal_static_protocol_Proposal_ParametersEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Proposal_ParametersEntry_descriptor,
                new java.lang.String[] { "Key", "Value", });
        internal_static_protocol_Exchange_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_protocol_Exchange_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Exchange_descriptor,
                new java.lang.String[] { "ExchangeId", "CreatorAddress", "CreateTime", "FirstTokenId", "FirstTokenBalance", "SecondTokenId", "SecondTokenBalance", });
        internal_static_protocol_ChainParameters_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_protocol_ChainParameters_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_ChainParameters_descriptor,
                new java.lang.String[] { "ChainParameter", });
        internal_static_protocol_ChainParameters_ChainParameter_descriptor =
                internal_static_protocol_ChainParameters_descriptor.getNestedTypes().get(0);
        internal_static_protocol_ChainParameters_ChainParameter_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_ChainParameters_ChainParameter_descriptor,
                new java.lang.String[] { "Key", "Value", });
        internal_static_protocol_Account_descriptor =
                getDescriptor().getMessageTypes().get(5);
        internal_static_protocol_Account_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Account_descriptor,
                new java.lang.String[] { "AccountName", "Type", "Address", "Balance", "Votes", "Asset", "Frozen", "NetUsage", "AcquiredDelegatedFrozenBalanceForBandwidth", "DelegatedFrozenBalanceForBandwidth", "CreateTime", "LatestOprationTime", "Allowance", "LatestWithdrawTime", "Code", "IsWitness", "IsCommittee", "FrozenSupply", "AssetIssuedName", "LatestAssetOperationTime", "FreeNetUsage", "FreeAssetNetUsage", "LatestConsumeTime", "LatestConsumeFreeTime", "AccountId", "AccountResource", "CodeHash", });
        internal_static_protocol_Account_Frozen_descriptor =
                internal_static_protocol_Account_descriptor.getNestedTypes().get(0);
        internal_static_protocol_Account_Frozen_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Account_Frozen_descriptor,
                new java.lang.String[] { "FrozenBalance", "ExpireTime", });
        internal_static_protocol_Account_AssetEntry_descriptor =
                internal_static_protocol_Account_descriptor.getNestedTypes().get(1);
        internal_static_protocol_Account_AssetEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Account_AssetEntry_descriptor,
                new java.lang.String[] { "Key", "Value", });
        internal_static_protocol_Account_LatestAssetOperationTimeEntry_descriptor =
                internal_static_protocol_Account_descriptor.getNestedTypes().get(2);
        internal_static_protocol_Account_LatestAssetOperationTimeEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Account_LatestAssetOperationTimeEntry_descriptor,
                new java.lang.String[] { "Key", "Value", });
        internal_static_protocol_Account_FreeAssetNetUsageEntry_descriptor =
                internal_static_protocol_Account_descriptor.getNestedTypes().get(3);
        internal_static_protocol_Account_FreeAssetNetUsageEntry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Account_FreeAssetNetUsageEntry_descriptor,
                new java.lang.String[] { "Key", "Value", });
        internal_static_protocol_Account_AccountResource_descriptor =
                internal_static_protocol_Account_descriptor.getNestedTypes().get(4);
        internal_static_protocol_Account_AccountResource_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Account_AccountResource_descriptor,
                new java.lang.String[] { "EnergyUsage", "FrozenBalanceForEnergy", "LatestConsumeTimeForEnergy", "AcquiredDelegatedFrozenBalanceForEnergy", "DelegatedFrozenBalanceForEnergy", "StorageLimit", "StorageUsage", "LatestExchangeStorageTime", });
        internal_static_protocol_DelegatedResource_descriptor =
                getDescriptor().getMessageTypes().get(6);
        internal_static_protocol_DelegatedResource_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_DelegatedResource_descriptor,
                new java.lang.String[] { "From", "To", "FrozenBalanceForBandwidth", "FrozenBalanceForEnergy", "ExpireTimeForBandwidth", "ExpireTimeForEnergy", });
        internal_static_protocol_authority_descriptor =
                getDescriptor().getMessageTypes().get(7);
        internal_static_protocol_authority_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_authority_descriptor,
                new java.lang.String[] { "Account", "PermissionName", });
        internal_static_protocol_permission_descriptor =
                getDescriptor().getMessageTypes().get(8);
        internal_static_protocol_permission_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_permission_descriptor,
                new java.lang.String[] { "Account", });
        internal_static_protocol_Witness_descriptor =
                getDescriptor().getMessageTypes().get(9);
        internal_static_protocol_Witness_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Witness_descriptor,
                new java.lang.String[] { "Address", "VoteCount", "PubKey", "Url", "TotalProduced", "TotalMissed", "LatestBlockNum", "LatestSlotNum", "IsJobs", });
        internal_static_protocol_Votes_descriptor =
                getDescriptor().getMessageTypes().get(10);
        internal_static_protocol_Votes_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Votes_descriptor,
                new java.lang.String[] { "Address", "OldVotes", "NewVotes", });
        internal_static_protocol_TXOutput_descriptor =
                getDescriptor().getMessageTypes().get(11);
        internal_static_protocol_TXOutput_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_TXOutput_descriptor,
                new java.lang.String[] { "Value", "PubKeyHash", });
        internal_static_protocol_TXInput_descriptor =
                getDescriptor().getMessageTypes().get(12);
        internal_static_protocol_TXInput_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_TXInput_descriptor,
                new java.lang.String[] { "RawData", "Signature", });
        internal_static_protocol_TXInput_raw_descriptor =
                internal_static_protocol_TXInput_descriptor.getNestedTypes().get(0);
        internal_static_protocol_TXInput_raw_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_TXInput_raw_descriptor,
                new java.lang.String[] { "TxID", "Vout", "PubKey", });
        internal_static_protocol_TXOutputs_descriptor =
                getDescriptor().getMessageTypes().get(13);
        internal_static_protocol_TXOutputs_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_TXOutputs_descriptor,
                new java.lang.String[] { "Outputs", });
        internal_static_protocol_ResourceReceipt_descriptor =
                getDescriptor().getMessageTypes().get(14);
        internal_static_protocol_ResourceReceipt_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_ResourceReceipt_descriptor,
                new java.lang.String[] { "EnergyUsage", "EnergyFee", "OriginEnergyUsage", "EnergyUsageTotal", "NetUsage", "NetFee", "Result", });
        internal_static_protocol_Transaction_descriptor =
                getDescriptor().getMessageTypes().get(15);
        internal_static_protocol_Transaction_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Transaction_descriptor,
                new java.lang.String[] { "RawData", "Signature", "Ret", });
        internal_static_protocol_Transaction_Contract_descriptor =
                internal_static_protocol_Transaction_descriptor.getNestedTypes().get(0);
        internal_static_protocol_Transaction_Contract_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Transaction_Contract_descriptor,
                new java.lang.String[] { "Type", "Parameter", "Provider", "ContractName", });
        internal_static_protocol_Transaction_Result_descriptor =
                internal_static_protocol_Transaction_descriptor.getNestedTypes().get(1);
        internal_static_protocol_Transaction_Result_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Transaction_Result_descriptor,
                new java.lang.String[] { "Fee", "Ret", "ContractRet", "WithdrawAmount", "UnfreezeAmount", });
        internal_static_protocol_Transaction_raw_descriptor =
                internal_static_protocol_Transaction_descriptor.getNestedTypes().get(2);
        internal_static_protocol_Transaction_raw_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Transaction_raw_descriptor,
                new java.lang.String[] { "RefBlockBytes", "RefBlockNum", "RefBlockHash", "Expiration", "Auths", "Data", "Contract", "Scripts", "Timestamp", "FeeLimit", });
        internal_static_protocol_TransactionInfo_descriptor =
                getDescriptor().getMessageTypes().get(16);
        internal_static_protocol_TransactionInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_TransactionInfo_descriptor,
                new java.lang.String[] { "Id", "Fee", "BlockNumber", "BlockTimeStamp", "ContractResult", "ContractAddress", "Receipt", "Log", "Result", "ResMessage", "WithdrawAmount", "UnfreezeAmount", "InternalTransactions", });
        internal_static_protocol_TransactionInfo_Log_descriptor =
                internal_static_protocol_TransactionInfo_descriptor.getNestedTypes().get(0);
        internal_static_protocol_TransactionInfo_Log_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_TransactionInfo_Log_descriptor,
                new java.lang.String[] { "Address", "Topics", "Data", });
        internal_static_protocol_Transactions_descriptor =
                getDescriptor().getMessageTypes().get(17);
        internal_static_protocol_Transactions_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Transactions_descriptor,
                new java.lang.String[] { "Transactions", });
        internal_static_protocol_TransactionSign_descriptor =
                getDescriptor().getMessageTypes().get(18);
        internal_static_protocol_TransactionSign_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_TransactionSign_descriptor,
                new java.lang.String[] { "Transaction", "PrivateKey", });
        internal_static_protocol_BlockHeader_descriptor =
                getDescriptor().getMessageTypes().get(19);
        internal_static_protocol_BlockHeader_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_BlockHeader_descriptor,
                new java.lang.String[] { "RawData", "WitnessSignature", });
        internal_static_protocol_BlockHeader_raw_descriptor =
                internal_static_protocol_BlockHeader_descriptor.getNestedTypes().get(0);
        internal_static_protocol_BlockHeader_raw_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_BlockHeader_raw_descriptor,
                new java.lang.String[] { "Timestamp", "TxTrieRoot", "ParentHash", "Number", "WitnessId", "WitnessAddress", "Version", });
        internal_static_protocol_Block_descriptor =
                getDescriptor().getMessageTypes().get(20);
        internal_static_protocol_Block_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Block_descriptor,
                new java.lang.String[] { "Transactions", "BlockHeader", });
        internal_static_protocol_ChainInventory_descriptor =
                getDescriptor().getMessageTypes().get(21);
        internal_static_protocol_ChainInventory_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_ChainInventory_descriptor,
                new java.lang.String[] { "Ids", "RemainNum", });
        internal_static_protocol_ChainInventory_BlockId_descriptor =
                internal_static_protocol_ChainInventory_descriptor.getNestedTypes().get(0);
        internal_static_protocol_ChainInventory_BlockId_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_ChainInventory_BlockId_descriptor,
                new java.lang.String[] { "Hash", "Number", });
        internal_static_protocol_BlockInventory_descriptor =
                getDescriptor().getMessageTypes().get(22);
        internal_static_protocol_BlockInventory_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_BlockInventory_descriptor,
                new java.lang.String[] { "Ids", "Type", });
        internal_static_protocol_BlockInventory_BlockId_descriptor =
                internal_static_protocol_BlockInventory_descriptor.getNestedTypes().get(0);
        internal_static_protocol_BlockInventory_BlockId_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_BlockInventory_BlockId_descriptor,
                new java.lang.String[] { "Hash", "Number", });
        internal_static_protocol_Inventory_descriptor =
                getDescriptor().getMessageTypes().get(23);
        internal_static_protocol_Inventory_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Inventory_descriptor,
                new java.lang.String[] { "Type", "Ids", });
        internal_static_protocol_Items_descriptor =
                getDescriptor().getMessageTypes().get(24);
        internal_static_protocol_Items_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_Items_descriptor,
                new java.lang.String[] { "Type", "Blocks", "BlockHeaders", "Transactions", });
        internal_static_protocol_DynamicProperties_descriptor =
                getDescriptor().getMessageTypes().get(25);
        internal_static_protocol_DynamicProperties_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_DynamicProperties_descriptor,
                new java.lang.String[] { "LastSolidityBlockNum", });
        internal_static_protocol_DisconnectMessage_descriptor =
                getDescriptor().getMessageTypes().get(26);
        internal_static_protocol_DisconnectMessage_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_DisconnectMessage_descriptor,
                new java.lang.String[] { "Reason", });
        internal_static_protocol_HelloMessage_descriptor =
                getDescriptor().getMessageTypes().get(27);
        internal_static_protocol_HelloMessage_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_HelloMessage_descriptor,
                new java.lang.String[] { "From", "Version", "Timestamp", "GenesisBlockId", "SolidBlockId", "HeadBlockId", });
        internal_static_protocol_HelloMessage_BlockId_descriptor =
                internal_static_protocol_HelloMessage_descriptor.getNestedTypes().get(0);
        internal_static_protocol_HelloMessage_BlockId_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_HelloMessage_BlockId_descriptor,
                new java.lang.String[] { "Hash", "Number", });
        internal_static_protocol_SmartContract_descriptor =
                getDescriptor().getMessageTypes().get(28);
        internal_static_protocol_SmartContract_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_SmartContract_descriptor,
                new java.lang.String[] { "OriginAddress", "ContractAddress", "Abi", "Bytecode", "CallValue", "ConsumeUserResourcePercent", "Name", "OriginEnergyLimit", });
        internal_static_protocol_SmartContract_ABI_descriptor =
                internal_static_protocol_SmartContract_descriptor.getNestedTypes().get(0);
        internal_static_protocol_SmartContract_ABI_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_SmartContract_ABI_descriptor,
                new java.lang.String[] { "Entrys", });
        internal_static_protocol_SmartContract_ABI_Entry_descriptor =
                internal_static_protocol_SmartContract_ABI_descriptor.getNestedTypes().get(0);
        internal_static_protocol_SmartContract_ABI_Entry_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_SmartContract_ABI_Entry_descriptor,
                new java.lang.String[] { "Anonymous", "Constant", "Name", "Inputs", "Outputs", "Type", "Payable", "StateMutability", });
        internal_static_protocol_SmartContract_ABI_Entry_Param_descriptor =
                internal_static_protocol_SmartContract_ABI_Entry_descriptor.getNestedTypes().get(0);
        internal_static_protocol_SmartContract_ABI_Entry_Param_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_SmartContract_ABI_Entry_Param_descriptor,
                new java.lang.String[] { "Indexed", "Name", "Type", });
        internal_static_protocol_InternalTransaction_descriptor =
                getDescriptor().getMessageTypes().get(29);
        internal_static_protocol_InternalTransaction_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_InternalTransaction_descriptor,
                new java.lang.String[] { "Hash", "CallerAddress", "TransferToAddress", "CallValueInfo", "Note", "Rejected", });
        internal_static_protocol_InternalTransaction_CallValueInfo_descriptor =
                internal_static_protocol_InternalTransaction_descriptor.getNestedTypes().get(0);
        internal_static_protocol_InternalTransaction_CallValueInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_InternalTransaction_CallValueInfo_descriptor,
                new java.lang.String[] { "CallValue", "TokenId", });
        internal_static_protocol_DelegatedResourceAccountIndex_descriptor =
                getDescriptor().getMessageTypes().get(30);
        internal_static_protocol_DelegatedResourceAccountIndex_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_protocol_DelegatedResourceAccountIndex_descriptor,
                new java.lang.String[] { "Account", "FromAccounts", "ToAccounts", });
        com.google.protobuf.AnyProto.getDescriptor();
        com.cryptowallet.crypto.Discover.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}